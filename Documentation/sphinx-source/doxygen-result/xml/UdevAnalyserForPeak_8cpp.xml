<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="UdevAnalyserForPeak_8cpp" kind="file" language="C++">
    <compoundname>UdevAnalyserForPeak.cpp</compoundname>
    <includes refid="UdevAnalyserForPeak_8h" local="yes">UdevAnalyserForPeak.h</includes>
    <includes refid="ExecCommand_8h" local="yes">ExecCommand.h</includes>
    <includes local="no">bits/stdc++.h</includes>
    <includes refid="CCanAccess_8h" local="no">CCanAccess.h</includes>
    <includes local="no">LogIt.h</includes>
    <incdepgraph>
      <node id="15">
        <label>atomic</label>
      </node>
      <node id="23">
        <label>stdatomic.h</label>
      </node>
      <node id="5">
        <label>LogIt.h</label>
      </node>
      <node id="11">
        <label>bits/stdc++.h</label>
      </node>
      <node id="22">
        <label>CanStatistics.h</label>
        <link refid="CanStatistics_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>CanMessage.h</label>
        <link refid="CanMessage_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>CCanAccess.h</label>
        <link refid="CCanAccess_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>boost/signals2.hpp</label>
      </node>
      <node id="1">
        <label>CanInterfaceImplementations/sockcan/UdevAnalyserForPeak.cpp</label>
        <link refid="UdevAnalyserForPeak_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdexcept</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="2">
        <label>UdevAnalyserForPeak.h</label>
        <link refid="UdevAnalyserForPeak_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>boost/bind/bind.hpp</label>
      </node>
      <node id="17">
        <label>condition_variable</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="9">
        <label>sstream</label>
      </node>
      <node id="21">
        <label>sys/time.h</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>ExecCommand.h</label>
        <link refid="ExecCommand_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>mutex</label>
      </node>
      <node id="13">
        <label>chrono</label>
      </node>
      <node id="14">
        <label>thread</label>
      </node>
      <node id="24">
        <label>ExportDefinition.h</label>
        <link refid="ExportDefinition_8h"/>
      </node>
      <node id="7">
        <label>algorithm</label>
      </node>
      <node id="25">
        <label>VERSION.h</label>
        <link refid="VERSION_8h"/>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceudevanalyserforpeak__ns">udevanalyserforpeak_ns</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>UdevAnalyserForPeak.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Mar<sp/>12,<sp/>2020</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>mludwig</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="UdevAnalyserForPeak_8h" kindref="compound">UdevAnalyserForPeak.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ExecCommand_8h" kindref="compound">ExecCommand.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bits/stdc++.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="CCanAccess_8h" kindref="compound">CCanAccess.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;LogIt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>namespace<sp/>CanModule;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="namespaceudevanalyserforpeak__ns" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceudevanalyserforpeak__ns" kindref="compound">udevanalyserforpeak_ns</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static,<sp/>private<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak" kindref="compound">UdevAnalyserForPeak</ref>*<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a75bf7ffe8139a10addd49083a6a7ac79" kindref="member">UdevAnalyserForPeak::m_instance_ptr</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/>Log::LogComponentHandle<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aacad8fc930990cc6d0d47de472022acb" kindref="member">UdevAnalyserForPeak::m_logItHandleSock</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/>std::vector&lt;UdevAnalyserForPeak::PEAK_device_t&gt;<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">UdevAnalyserForPeak::m_peak_v</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aaf0bf3ac85c7b39a34b8c9430f99f88c" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>private,<sp/>singleton<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aaf0bf3ac85c7b39a34b8c9430f99f88c" kindref="member">UdevAnalyserForPeak::UdevAnalyserForPeak</ref>(){</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>LogItInstance*<sp/>logItInstance<sp/>=<sp/>LogItInstance::getInstance();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!LogItInstance::setInstance(logItInstance))</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>could<sp/>not<sp/>set<sp/>LogIt<sp/>instance&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!logItInstance-&gt;getComponentHandle(<ref refid="namespaceCanModule_1a78730a18f59663871883885f3914a2aa" kindref="member">CanModule::LogItComponentName</ref>,<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aacad8fc930990cc6d0d47de472022acb" kindref="member">m_logItHandleSock</ref>))</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>could<sp/>not<sp/>get<sp/>LogIt<sp/>component<sp/>handle<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceCanModule_1a78730a18f59663871883885f3914a2aa" kindref="member">CanModule::LogItComponentName</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1acd46c5ec27ddad48e2f32ab65b2ac2be" kindref="member">m_createUdevPortMap</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>singleton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a7edf6a8b32f9728aacf570a7704e560f" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a7edf6a8b32f9728aacf570a7704e560f" kindref="member">UdevAnalyserForPeak::peakExtendedIdentifierToSocketCanDevice</ref>(<sp/>std::string<sp/>extPortId<sp/>){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aacad8fc930990cc6d0d47de472022acb" kindref="member">m_logItHandleSock</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;peak<sp/>extPortId=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>extPortId;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a0f9f020e963d202faff7a1a114713219" kindref="member">getInstance</ref>();<sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first,<sp/>sift<sp/>out<sp/>the<sp/>device<sp/>ID<sp/>as<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos1<sp/>=<sp/>extPortId.find(<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub1<sp/>=<sp/>extPortId.substr(<sp/>pos1,<sp/>std::string::npos<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;<sp/>sub1=<sp/>&quot;<sp/>&lt;&lt;<sp/>sub1<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos2<sp/>=<sp/>sub1.find(<sp/></highlight><highlight class="stringliteral">&quot;:device&quot;</highlight><highlight class="normal"><sp/>)<sp/>+<sp/>7;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub2<sp/>=<sp/>sub1.substr(<sp/>pos2,<sp/>std::string::npos<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;<sp/>sub2=<sp/>&quot;<sp/>&lt;&lt;<sp/>sub2<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deviceId<sp/>=<sp/><sp/>std::stoi(<sp/>sub2<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second,<sp/>sift<sp/>out<sp/>the<sp/>local<sp/>port<sp/>number<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>size_t<sp/>pos3<sp/>=<sp/>sub1.find(<sp/>&quot;:&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub3<sp/>=<sp/>sub1.substr(<sp/>0,<sp/>sub1.find(<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;<sp/>sub3=<sp/>&quot;<sp/>&lt;&lt;<sp/>sub3<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>localPort<sp/>=<sp/>999999;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>have<sp/>:0<sp/>or<sp/>can0:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sub3.find(</highlight><highlight class="stringliteral">&quot;can&quot;</highlight><highlight class="normal">)<sp/>==<sp/>std::string::npos<sp/><sp/>){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localPort<sp/>=<sp/><sp/>std::stoi(<sp/>sub3<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;<sp/>sub4=<sp/>&quot;<sp/>&lt;&lt;<sp/>sub4<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sub4<sp/>=<sp/>sub3.substr(<sp/>3,<sp/>std::string::npos<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localPort<sp/>=<sp/><sp/>std::stoi(<sp/>sub4<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>at<sp/>the<sp/>map<sp/>and<sp/>find<sp/>out<sp/>the<sp/>correct<sp/>socketcan<sp/>global<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aacad8fc930990cc6d0d47de472022acb" kindref="member">m_logItHandleSock</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;peak<sp/>looking<sp/>for<sp/>deviceId=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>deviceId</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>localPort=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>localPort;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>.size();<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOG(Log::TRC,<sp/>m_logItHandleSock)<sp/>&lt;&lt;<sp/>&quot;peak<sp/>comparing<sp/>&quot;<sp/>&lt;&lt;<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>deviceID=<sp/>&quot;<sp/>&lt;&lt;<sp/>m_peak_v[<sp/>i<sp/>].deviceID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>localCanPort=<sp/>&quot;<sp/>&lt;&lt;<sp/><sp/>m_peak_v[<sp/>i<sp/>].localCanPort;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>[<sp/>i<sp/>].deviceID<sp/>==<sp/>deviceId<sp/>)<sp/>&amp;&amp;<sp/>(<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>[<sp/>i<sp/>].localCanPort<sp/>==<sp/>localPort<sp/>)){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aacad8fc930990cc6d0d47de472022acb" kindref="member">m_logItHandleSock</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;peak<sp/>found<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>deviceID=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>deviceId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>localPort=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>localPort;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>std::string(</highlight><highlight class="stringliteral">&quot;can&quot;</highlight><highlight class="normal">)<sp/>+<sp/>std::to_string(<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>[<sp/>i<sp/>].socketNumber<sp/>));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::ERR,<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aacad8fc930990cc6d0d47de472022acb" kindref="member">m_logItHandleSock</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;peak<sp/>could<sp/>not<sp/>find<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>deviceId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>localPort<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>the<sp/>udev<sp/>system&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a982db3210deb3a9483508f473af4262c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a982db3210deb3a9483508f473af4262c" kindref="member">UdevAnalyserForPeak::showMap</ref>(){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::INF,<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aacad8fc930990cc6d0d47de472022acb" kindref="member">m_logItHandleSock</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;here<sp/>is<sp/>the<sp/>map<sp/>of<sp/>all<sp/>PEAK<sp/>USB-CAN<sp/>bridges<sp/>on<sp/>your<sp/>system:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>.size();<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::INF,<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aacad8fc930990cc6d0d47de472022acb" kindref="member">m_logItHandleSock</ref>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>deviceID=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>[<sp/>i<sp/>].deviceID</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>systemDeviceIndex=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>[<sp/>i<sp/>].systemDeviceIndex</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>localCanPort=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>[<sp/>i<sp/>].localCanPort</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>socketNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>[<sp/>i<sp/>].socketNumber</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>peakDriverNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>[<sp/>i<sp/>].peakDriverNumber</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>link=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>[<sp/>i<sp/>].link;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a2b522c5a1624c408d0f1854fba53b066" refkind="member"><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a2b522c5a1624c408d0f1854fba53b066" kindref="member">UdevAnalyserForPeak::m_peakStructCompare</ref>(<sp/><ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t" kindref="compound">PEAK_device_t</ref><sp/>peak1,<sp/><ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t" kindref="compound">PEAK_device_t</ref><sp/>peak2<sp/>){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>peak1.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1ad38c81f9ab8101e037fec4ceadb99681" kindref="member">peakDriverNumber</ref><sp/>&lt;<sp/>peak2.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1ad38c81f9ab8101e037fec4ceadb99681" kindref="member">peakDriverNumber</ref><sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1acd46c5ec27ddad48e2f32ab65b2ac2be" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1acd46c5ec27ddad48e2f32ab65b2ac2be" kindref="member">UdevAnalyserForPeak::m_createUdevPortMap</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aacad8fc930990cc6d0d47de472022acb" kindref="member">m_logItHandleSock</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;peak<sp/>doing<sp/>udev<sp/>calls<sp/>to<sp/>discover<sp/>PEAK<sp/>socketcan<sp/>device<sp/>mapping&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>links1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>links2;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>the<sp/>real<sp/>devices,<sp/>not<sp/>the<sp/>symlinks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>cmd0<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ls<sp/>-l<sp/>/dev/pcanusb*<sp/>|<sp/>grep<sp/>-v<sp/>\&quot;<sp/>-&gt;<sp/>\&quot;<sp/>|<sp/>awk<sp/>&apos;{print<sp/>$10}&apos;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classexeccommand__ns_1_1ExecCommand" kindref="compound">execcommand_ns::ExecCommand</ref><sp/>exec0(<sp/>cmd0<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classexeccommand__ns_1_1ExecCommand_1a845d6035374fe25c0c68bea83f64f4b5" kindref="member">execcommand_ns::ExecCommand::CmdResults</ref><sp/>results0<sp/>=<sp/>exec0.<ref refid="classexeccommand__ns_1_1ExecCommand_1aa85d0c7383bce43ba756006b64505d23" kindref="member">getResults</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOG(Log::TRC,<sp/>m_logItHandleSock)<sp/>&lt;&lt;<sp/>&quot;peak<sp/>&quot;<sp/>&lt;&lt;<sp/>exec0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>symlinks<sp/>for<sp/>each<sp/>device<sp/>and<sp/>the<sp/>first<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>results0.size();<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>cmd1<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;/sbin/udevadm<sp/>info<sp/>-q<sp/>symlink<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>results0[<sp/>i<sp/>]<sp/>+<sp/>std::string(</highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>grep<sp/>\&quot;devid=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classexeccommand__ns_1_1ExecCommand" kindref="compound">execcommand_ns::ExecCommand</ref><sp/>exec1(<sp/>cmd1<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classexeccommand__ns_1_1ExecCommand_1a845d6035374fe25c0c68bea83f64f4b5" kindref="member">execcommand_ns::ExecCommand::CmdResults</ref><sp/>results1<sp/>=<sp/>exec1.<ref refid="classexeccommand__ns_1_1ExecCommand_1aa85d0c7383bce43ba756006b64505d23" kindref="member">getResults</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOG(Log::TRC,<sp/>m_logItHandleSock)<sp/>&lt;&lt;<sp/>&quot;peak<sp/>&quot;<sp/>&lt;&lt;<sp/>exec1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>results1.size();<sp/>k++<sp/>){</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>links1.push_back(<sp/>results1[<sp/>k<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>links<sp/>of<sp/>the<sp/>other<sp/>ports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>results0.size();<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>cmd2<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;/sbin/udevadm<sp/>info<sp/>-q<sp/>symlink<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>results0[<sp/>i<sp/>]<sp/>+<sp/>std::string(</highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>grep<sp/>-v<sp/>\&quot;devid=\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classexeccommand__ns_1_1ExecCommand" kindref="compound">execcommand_ns::ExecCommand</ref><sp/>exec2(<sp/>cmd2<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classexeccommand__ns_1_1ExecCommand_1a845d6035374fe25c0c68bea83f64f4b5" kindref="member">execcommand_ns::ExecCommand::CmdResults</ref><sp/>results2<sp/>=<sp/>exec2.<ref refid="classexeccommand__ns_1_1ExecCommand_1aa85d0c7383bce43ba756006b64505d23" kindref="member">getResults</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOG(Log::TRC,<sp/>m_logItHandleSock)<sp/>&lt;&lt;<sp/>&quot;peak<sp/>&quot;<sp/>&lt;&lt;<sp/>exec2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>results2.size();<sp/>k++<sp/>){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>links2.push_back(<sp/>results2[<sp/>k<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>links1.size();<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t" kindref="compound">PEAK_device_t</ref><sp/>peak;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peak.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1ac29ee824c7e4d8441a815af4c0523f6a" kindref="member">deviceID</ref><sp/>=<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aa4c7f266427a299185aa8999d63b381a" kindref="member">m_peakDeviceId</ref>(<sp/>links1[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peak.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1a8772a7ff45b2b0c303fc9df95b810299" kindref="member">systemDeviceIndex</ref><sp/>=<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a398b71235631eac545a05eb0d03acfcd" kindref="member">m_peakSystemDeviceIndex</ref>(<sp/>links1[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peak.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1aef8fb355e35084f8719b89b7815c998f" kindref="member">localCanPort</ref><sp/>=<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a0570a23bb2eb7f57930ff4eb8cf7fbaf" kindref="member">m_peakLocalCanPort</ref>(<sp/>links1[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peak.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1ad38c81f9ab8101e037fec4ceadb99681" kindref="member">peakDriverNumber</ref><sp/>=<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a591ea665dcb445268404b113473092a1" kindref="member">m_peakDriverNumber</ref>(<sp/>links1[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peak.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1aefdb41c5f4c5d5f097143f5a2801e0d8" kindref="member">link</ref><sp/>=<sp/>links1[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>.push_back(<sp/>peak<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>links2.size();<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t" kindref="compound">PEAK_device_t</ref><sp/>peak;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peak.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1a8772a7ff45b2b0c303fc9df95b810299" kindref="member">systemDeviceIndex</ref><sp/>=<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a398b71235631eac545a05eb0d03acfcd" kindref="member">m_peakSystemDeviceIndex</ref>(<sp/>links2[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peak.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1ac29ee824c7e4d8441a815af4c0523f6a" kindref="member">deviceID</ref><sp/>=<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a64bc86c641b444e6d6ccfc80d565b74f" kindref="member">m_peakDeviceIdFromSystemDeviceIndex</ref>(<sp/>peak.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1a8772a7ff45b2b0c303fc9df95b810299" kindref="member">systemDeviceIndex</ref><sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peak.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1aef8fb355e35084f8719b89b7815c998f" kindref="member">localCanPort</ref><sp/>=<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a0570a23bb2eb7f57930ff4eb8cf7fbaf" kindref="member">m_peakLocalCanPort</ref>(<sp/>links2[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peak.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1ad38c81f9ab8101e037fec4ceadb99681" kindref="member">peakDriverNumber</ref><sp/>=<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a591ea665dcb445268404b113473092a1" kindref="member">m_peakDriverNumber</ref>(<sp/>links2[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peak.<ref refid="structudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1_1PEAK__device__t_1aefdb41c5f4c5d5f097143f5a2801e0d8" kindref="member">link</ref><sp/>=<sp/>links2[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>.push_back(<sp/>peak<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>.begin(),<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>.end(),<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a2b522c5a1624c408d0f1854fba53b066" kindref="member">UdevAnalyserForPeak::m_peakStructCompare</ref><sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>.size();<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>[<sp/>i<sp/>].socketNumber<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>showMap();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a64bc86c641b444e6d6ccfc80d565b74f" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a64bc86c641b444e6d6ccfc80d565b74f" kindref="member">UdevAnalyserForPeak::m_peakDeviceIdFromSystemDeviceIndex</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sd<sp/>){</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;PEAK_device_t&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>.begin();<sp/>it<sp/>&lt;=<sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a1305c736fdc28c62cfa29144e25d7f3a" kindref="member">m_peak_v</ref>.end();<sp/>it++<sp/>){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it-&gt;systemDeviceIndex<sp/>==<sp/>sd<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>it-&gt;deviceID<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);<sp/></highlight><highlight class="comment">//<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a591ea665dcb445268404b113473092a1" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a591ea665dcb445268404b113473092a1" kindref="member">UdevAnalyserForPeak::m_peakDriverNumber</ref>(<sp/>std::string<sp/>s<sp/>){</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos1<sp/>=<sp/>s.find(<sp/></highlight><highlight class="stringliteral">&quot;devid=&quot;</highlight><highlight class="normal"><sp/>)<sp/>+<sp/>6;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub1<sp/>=<sp/>s.substr(<sp/>pos1,<sp/>std::string::npos<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;<sp/>sub1=<sp/>&quot;<sp/>&lt;&lt;<sp/>sub1<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos2<sp/>=<sp/>sub1.find(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>pcan&quot;</highlight><highlight class="normal"><sp/>)<sp/>+<sp/>5;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub2<sp/>=<sp/>sub1.substr(<sp/>pos2,<sp/>std::string::npos<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;<sp/>sub2=<sp/>&quot;<sp/>&lt;&lt;<sp/>sub2<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub3<sp/>=<sp/>sub2.substr(<sp/>0,<sp/>sub2.find(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;<sp/>sub3=<sp/>&quot;<sp/>&lt;&lt;<sp/>sub3<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>std::stoi(<sp/>sub3<sp/>));</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a0570a23bb2eb7f57930ff4eb8cf7fbaf" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a0570a23bb2eb7f57930ff4eb8cf7fbaf" kindref="member">UdevAnalyserForPeak::m_peakLocalCanPort</ref>(<sp/>std::string<sp/>s<sp/>){</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos1<sp/>=<sp/>s.find(<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub1<sp/>=<sp/>s.substr(<sp/>pos1,<sp/>std::string::npos<sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos2<sp/>=<sp/>sub1.find(<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub2<sp/>=<sp/>sub1.substr(<sp/>pos2,<sp/>sub1.find(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>-<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub3<sp/>=<sp/>sub2.substr(<sp/>3,<sp/>std::string::npos<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;<sp/>sub3=<sp/>&quot;<sp/>&lt;&lt;<sp/>sub3<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>std::stoi(<sp/>sub3<sp/>));</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aa4c7f266427a299185aa8999d63b381a" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1aa4c7f266427a299185aa8999d63b381a" kindref="member">UdevAnalyserForPeak::m_peakDeviceId</ref>(<sp/>std::string<sp/>s<sp/>){</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>devid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;devid=&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos1<sp/>=<sp/>s.find(<sp/>devid<sp/>)<sp/>+<sp/>std::string(<sp/>devid<sp/>).length();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub1<sp/>=<sp/>s.substr(<sp/>pos1,<sp/>std::string::npos<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub2<sp/>=<sp/>sub1.substr(<sp/>0,<sp/>sub1.find(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>std::stoi(<sp/>sub2<sp/>));</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a398b71235631eac545a05eb0d03acfcd" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classudevanalyserforpeak__ns_1_1UdevAnalyserForPeak_1a398b71235631eac545a05eb0d03acfcd" kindref="member">UdevAnalyserForPeak::m_peakSystemDeviceIndex</ref>(<sp/>std::string<sp/>s<sp/>){</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos1<sp/>=<sp/>s.find(<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub1<sp/>=<sp/>s.substr(<sp/>pos1,<sp/>std::string::npos<sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sub2<sp/>=<sp/>sub1.substr(<sp/>0,<sp/>sub1.find(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>std::stoi(<sp/>sub2<sp/>));</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>udevanalyserforpeak_ns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="CanInterfaceImplementations/sockcan/UdevAnalyserForPeak.cpp"/>
  </compounddef>
</doxygen>
