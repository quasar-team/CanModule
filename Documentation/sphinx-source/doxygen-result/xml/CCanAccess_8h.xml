<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="CCanAccess_8h" kind="file">
    <compoundname>CCanAccess.h</compoundname>
    <includes local="no">sys/time.h</includes>
    <includes local="yes">boost/bind.hpp</includes>
    <includes local="yes">boost/signals2.hpp</includes>
    <includes local="no">string</includes>
    <includes refid="CanMessage_8h" local="yes">CanMessage.h</includes>
    <includes refid="CanStatistics_8h" local="yes">CanStatistics.h</includes>
    <includes local="no">LogIt.h</includes>
    <includedby refid="CanBusAccess_8h" local="yes">CanInterface/include/CanBusAccess.h</includedby>
    <includedby refid="AnaCanScan_8h" local="yes">CanInterfaceImplementations/anagate/AnaCanScan.h</includedby>
    <includedby refid="pkcan_8h" local="yes">CanInterfaceImplementations/pkcan/pkcan.h</includedby>
    <includedby refid="SockCanScan_8h" local="yes">CanInterfaceImplementations/sockcan/SockCanScan.h</includedby>
    <includedby refid="STCanScan_8h" local="yes">CanInterfaceImplementations/systec/STCanScan.h</includedby>
    <includedby refid="MockCanAccess_8h" local="yes">CanInterfaceImplementations/unitTestMockUpImplementation/MockCanAccess.h</includedby>
    <includedby refid="CanLibLoader_8h" local="yes">CanLibLoader/include/CanLibLoader.h</includedby>
    <incdepgraph>
      <node id="90">
        <label>stdatomic.h</label>
      </node>
      <node id="93">
        <label>LogIt.h</label>
      </node>
      <node id="86">
        <label>boost/signals2.hpp</label>
      </node>
      <node id="89">
        <label>CanStatistics.h</label>
        <link refid="CanStatistics_8h"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>string</label>
      </node>
      <node id="83">
        <label>CanInterface/include/CCanAccess.h</label>
        <link refid="CCanAccess.h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>CanMessage.h</label>
        <link refid="CanMessage_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>sys/time.h</label>
      </node>
      <node id="85">
        <label>boost/bind.hpp</label>
      </node>
      <node id="92">
        <label>chrono</label>
      </node>
      <node id="91">
        <label>ExportDefinition.h</label>
        <link refid="ExportDefinition_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="106">
        <label>CanInterfaceImplementations/systec/STCanScan.cpp</label>
        <link refid="STCanScan_8cpp"/>
      </node>
      <node id="102">
        <label>CanInterfaceImplementations/pkcan/pkcan.cpp</label>
        <link refid="pkcan_8cpp"/>
      </node>
      <node id="113">
        <label>CanLibLoader/include/CanLibLoaderWin.h</label>
        <link refid="CanLibLoaderWin_8h"/>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>CanInterfaceImplementations/pkcan/pkcan.h</label>
        <link refid="pkcan_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>CanLibLoader/include/CanLibLoaderLin.h</label>
        <link refid="CanLibLoaderLin_8h"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>CanLibLoader/src/CanLibLoader.cpp</label>
        <link refid="CanLibLoader_8cpp"/>
      </node>
      <node id="103">
        <label>CanInterfaceImplementations/sockcan/SockCanScan.h</label>
        <link refid="SockCanScan_8h"/>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>CanInterfaceImplementations/anagate/AnaCanScan.cpp</label>
        <link refid="AnaCanScan_8cpp"/>
      </node>
      <node id="114">
        <label>CanLibLoader/src/CanLibLoaderWin.cpp</label>
        <link refid="CanLibLoaderWin_8cpp"/>
      </node>
      <node id="112">
        <label>CanLibLoader/src/CanLibLoaderLin.cpp</label>
        <link refid="CanLibLoaderLin_8cpp"/>
      </node>
      <node id="109">
        <label>CanLibLoader/include/CanLibLoader.h</label>
        <link refid="CanLibLoader_8h"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>CanInterface/include/CCanAccess.h</label>
        <link refid="CCanAccess.h"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>CanInterfaceImplementations/sockcan/SockCanScan.cpp</label>
        <link refid="SockCanScan_8cpp"/>
      </node>
      <node id="108">
        <label>CanInterfaceImplementations/unitTestMockUpImplementation/MockCanAccess.cpp</label>
        <link refid="MockCanAccess_8cpp"/>
      </node>
      <node id="96">
        <label>CanInterface/src/CanBusAccess.cpp</label>
        <link refid="CanBusAccess_8cpp"/>
      </node>
      <node id="97">
        <label>CWrapper/include/canmodule_wrapper.h</label>
        <link refid="canmodule__wrapper_8h"/>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>CanInterfaceImplementations/unitTestMockUpImplementation/MockCanAccess.h</label>
        <link refid="MockCanAccess_8h"/>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>CanInterface/include/CanBusAccess.h</label>
        <link refid="CanBusAccess_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>CanInterfaceImplementations/systec/STCanScan.h</label>
        <link refid="STCanScan_8h"/>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>CanInterfaceImplementations/anagate/AnaCanScan.h</label>
        <link refid="AnaCanScan_8h"/>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>CWrapper/src/canmodule_wrapper.cpp</label>
        <link refid="canmodule__wrapper_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structCanModule_1_1CanParameters" prot="public">CanModule::CanParameters</innerclass>
    <innerclass refid="classCanModule_1_1CCanAccess" prot="public">CanModule::CCanAccess</innerclass>
    <innernamespace refid="namespaceCanModule">CanModule</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="CCanAccess_8h_1a1c6d5de492ac61ad29aec7aa9a436bbf" prot="public" static="no">
        <name>VERSION</name>
        <initializer>&quot;CanModule version 1.1.1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Â© Copyright CERN, 2015. All rights not expressly granted are reserved.</para><para><ref refid="CCanAccess_8h" kindref="compound">CCanAccess.h</ref></para><para>Created on: Apr 4, 2011 Author: vfilimon maintaining touches: mludwig, quasar team</para><para>This file is part of Quasar.</para><para>Quasar is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public Licence as published by the Free Software Foundation, either version 3 of the Licence.</para><para>Quasar is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public Licence for more details.</para><para>You should have received a copy of the GNU Lesser General Public License along with Quasar. If not, see <ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterface/include/CCanAccess.h" line="41" column="9" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterface/include/CCanAccess.h" bodystart="41" bodyend="-1"/>
        <referencedby refid="namespaceCanModule_1aca09a34a617d28f8b35699e7933d2599" compoundref="CCanAccess_8h" startline="67" endline="67">CanModule::version</referencedby>
      </memberdef>
      <memberdef kind="define" id="CCanAccess_8h_1ad506d1f216984abc94d5a65f33053626" prot="public" static="no">
        <name>MLOG</name>
        <param><defname>LEVEL</defname></param>
        <param><defname>THIS</defname></param>
        <initializer>LOG(Log::LEVEL) &lt;&lt; __FUNCTION__ &lt;&lt; &quot; &quot; &lt;&lt; <ref refid="namespaceCanModule_1a78730a18f59663871883885f3914a2aa" kindref="member">CanModule::LogItComponentName</ref> &lt;&lt; &quot; bus= &quot; &lt;&lt; THIS-&gt;getBusName() &lt;&lt; &quot; &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterface/include/CCanAccess.h" line="65" column="9" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterface/include/CCanAccess.h" bodystart="65" bodyend="-1"/>
        <referencedby refid="classCSockCanScan_1a9ac2e2d3f63449865e22c69a60faf53d" compoundref="SockCanScan_8cpp" startline="96" endline="298">CSockCanScan::CanScanControlThread</referencedby>
        <referencedby refid="classCSockCanScan_1a203a51239f8efc013d4b9df36f271317" compoundref="SockCanScan_8cpp" startline="317" endline="389">CSockCanScan::openCanPort</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="25"><highlight class="preprocessor">#ifndef<sp/>CCANACCESS_H_</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CCANACCESS_H_</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/bind.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/signals2.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="CanMessage_8h" kindref="compound">CanMessage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="CanStatistics_8h" kindref="compound">CanStatistics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;LogIt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="CCanAccess_8h_1a1c6d5de492ac61ad29aec7aa9a436bbf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION<sp/>&quot;CanModule<sp/>version<sp/>1.1.1&quot;</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>CCanAccess<sp/>is<sp/>an<sp/>abstract<sp/>class<sp/>that<sp/>defines<sp/>the<sp/>interface<sp/>for<sp/>controlling<sp/>a<sp/>canbus.<sp/>Different<sp/>implementations<sp/>for<sp/>different<sp/>hardware<sp/>and<sp/>platforms<sp/>should</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>inherit<sp/>this<sp/>class<sp/>and<sp/>implement<sp/>the<sp/>pure<sp/>virtual<sp/>methods.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CanModule</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="namespaceCanModule_1a78730a18f59663871883885f3914a2aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceCanModule_1a78730a18f59663871883885f3914a2aa" kindref="member">LogItComponentName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CanModule&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51" refid="namespaceCanModule_1ab674248fa647ccc8056dd796421aa16b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceCanModule_1ab674248fa647ccc8056dd796421aa16b" kindref="member">LogItComponentNameAnagate</ref><sp/>=<sp/><ref refid="namespaceCanModule_1a78730a18f59663871883885f3914a2aa" kindref="member">LogItComponentName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Anagate&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceCanModule_1a558e2e51ea82e642b8656a3fc2a53e5c" kindref="member">LogItComponentNamePeak</ref><sp/>=<sp/><ref refid="namespaceCanModule_1a78730a18f59663871883885f3914a2aa" kindref="member">LogItComponentName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Peak&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceCanModule_1ae25b0c7453a892a139549914f17d298a" kindref="member">LogItComponentNameSystec</ref><sp/>=<sp/><ref refid="namespaceCanModule_1a78730a18f59663871883885f3914a2aa" kindref="member">LogItComponentName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Systec&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="60" refid="namespaceCanModule_1a043500ed91c75aae8d8841430ef4f9aa" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceCanModule_1a043500ed91c75aae8d8841430ef4f9aa" kindref="member">LogItComponentNameSock</ref><sp/>=<sp/><ref refid="namespaceCanModule_1a78730a18f59663871883885f3914a2aa" kindref="member">LogItComponentName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Sock&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61" refid="namespaceCanModule_1a558e2e51ea82e642b8656a3fc2a53e5c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceCanModule_1a558e2e51ea82e642b8656a3fc2a53e5c" kindref="member">LogItComponentNamePeak</ref><sp/>=<sp/><ref refid="namespaceCanModule_1a043500ed91c75aae8d8841430ef4f9aa" kindref="member">LogItComponentNameSock</ref>;</highlight></codeline>
<codeline lineno="62" refid="namespaceCanModule_1ae25b0c7453a892a139549914f17d298a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceCanModule_1ae25b0c7453a892a139549914f17d298a" kindref="member">LogItComponentNameSystec</ref><sp/>=<sp/><ref refid="namespaceCanModule_1a043500ed91c75aae8d8841430ef4f9aa" kindref="member">LogItComponentNameSock</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="CCanAccess_8h_1ad506d1f216984abc94d5a65f33053626" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLOG(LEVEL,THIS)<sp/>LOG(Log::LEVEL)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>CanModule::LogItComponentName<sp/>&lt;&lt;<sp/>&quot;<sp/>bus=<sp/>&quot;<sp/>&lt;&lt;<sp/>THIS-&gt;getBusName()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="namespaceCanModule_1aca09a34a617d28f8b35699e7933d2599" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceCanModule_1aca09a34a617d28f8b35699e7933d2599" kindref="member">version</ref>(){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/><ref refid="CCanAccess_8h_1a1c6d5de492ac61ad29aec7aa9a436bbf" kindref="member">VERSION</ref><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structCanModule_1_1CanParameters" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCanModule_1_1CanParameters" kindref="compound">CanParameters</ref><sp/>{</highlight></codeline>
<codeline lineno="70" refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref>;</highlight></codeline>
<codeline lineno="71" refid="structCanModule_1_1CanParameters_1a6dcce5899a28a07c35042c2005fbac03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCanModule_1_1CanParameters_1a6dcce5899a28a07c35042c2005fbac03" kindref="member">m_iOperationMode</ref>;</highlight></codeline>
<codeline lineno="72" refid="structCanModule_1_1CanParameters_1ac15d1cfe926f508a2788dab50aed992b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCanModule_1_1CanParameters_1ac15d1cfe926f508a2788dab50aed992b" kindref="member">m_iTermination</ref>;</highlight></codeline>
<codeline lineno="73" refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" kindref="member">m_iHighSpeed</ref>;</highlight></codeline>
<codeline lineno="74" refid="structCanModule_1_1CanParameters_1a0f3653eda77900c9d2450793bd285c29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCanModule_1_1CanParameters_1a0f3653eda77900c9d2450793bd285c29" kindref="member">m_iTimeStamp</ref>;</highlight></codeline>
<codeline lineno="75" refid="structCanModule_1_1CanParameters_1ac17a318a7e3883005733c66010c04604" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCanModule_1_1CanParameters_1ac17a318a7e3883005733c66010c04604" kindref="member">m_iSyncMode</ref>;</highlight></codeline>
<codeline lineno="76" refid="structCanModule_1_1CanParameters_1ac4e03899b26e33a3867ee1f0bce674b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCanModule_1_1CanParameters_1ac4e03899b26e33a3867ee1f0bce674b5" kindref="member">m_iNumberOfDetectedParameters</ref>;</highlight></codeline>
<codeline lineno="77" refid="structCanModule_1_1CanParameters_1a8668831351aaaa0446c75c58073bf357" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structCanModule_1_1CanParameters_1a8668831351aaaa0446c75c58073bf357" kindref="member">m_dontReconfigure</ref>;</highlight></codeline>
<codeline lineno="78" refid="structCanModule_1_1CanParameters_1ac364dcf7b4d16af59776d931097010bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCanModule_1_1CanParameters_1ac364dcf7b4d16af59776d931097010bc" kindref="member">CanParameters</ref>()<sp/>:<sp/><ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref>(0),<sp/><ref refid="structCanModule_1_1CanParameters_1a6dcce5899a28a07c35042c2005fbac03" kindref="member">m_iOperationMode</ref>(0),<sp/><ref refid="structCanModule_1_1CanParameters_1ac15d1cfe926f508a2788dab50aed992b" kindref="member">m_iTermination</ref>(0),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" kindref="member">m_iHighSpeed</ref>(0),<sp/><ref refid="structCanModule_1_1CanParameters_1a0f3653eda77900c9d2450793bd285c29" kindref="member">m_iTimeStamp</ref>(0),<sp/><ref refid="structCanModule_1_1CanParameters_1ac17a318a7e3883005733c66010c04604" kindref="member">m_iSyncMode</ref>(0),<sp/><ref refid="structCanModule_1_1CanParameters_1ac4e03899b26e33a3867ee1f0bce674b5" kindref="member">m_iNumberOfDetectedParameters</ref>(),<sp/><ref refid="structCanModule_1_1CanParameters_1a8668831351aaaa0446c75c58073bf357" kindref="member">m_dontReconfigure</ref>(false)<sp/>{}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="structCanModule_1_1CanParameters_1ae3c938ac282acae4e49487cbb8a61133" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structCanModule_1_1CanParameters_1ae3c938ac282acae4e49487cbb8a61133" kindref="member">scanParameters</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>parameters)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>canpars<sp/>=<sp/>parameters.c_str();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(canpars,<sp/></highlight><highlight class="stringliteral">&quot;Unspecified&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCanModule_1_1CanParameters_1ac4e03899b26e33a3867ee1f0bce674b5" kindref="member">m_iNumberOfDetectedParameters</ref><sp/>=<sp/>sscanf_s(canpars,<sp/></highlight><highlight class="stringliteral">&quot;%ld<sp/>%u<sp/>%u<sp/>%u<sp/>%u<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref>,<sp/>&amp;<ref refid="structCanModule_1_1CanParameters_1a6dcce5899a28a07c35042c2005fbac03" kindref="member">m_iOperationMode</ref>,<sp/>&amp;<ref refid="structCanModule_1_1CanParameters_1ac15d1cfe926f508a2788dab50aed992b" kindref="member">m_iTermination</ref>,<sp/>&amp;<ref refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" kindref="member">m_iHighSpeed</ref>,<sp/>&amp;<ref refid="structCanModule_1_1CanParameters_1a0f3653eda77900c9d2450793bd285c29" kindref="member">m_iTimeStamp</ref>,<sp/>&amp;<ref refid="structCanModule_1_1CanParameters_1ac17a318a7e3883005733c66010c04604" kindref="member">m_iSyncMode</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCanModule_1_1CanParameters_1ac4e03899b26e33a3867ee1f0bce674b5" kindref="member">m_iNumberOfDetectedParameters</ref><sp/>=<sp/>sscanf(canpars,<sp/></highlight><highlight class="stringliteral">&quot;%ld<sp/>%u<sp/>%u<sp/>%u<sp/>%u<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref>,<sp/>&amp;<ref refid="structCanModule_1_1CanParameters_1a6dcce5899a28a07c35042c2005fbac03" kindref="member">m_iOperationMode</ref>,<sp/>&amp;<ref refid="structCanModule_1_1CanParameters_1ac15d1cfe926f508a2788dab50aed992b" kindref="member">m_iTermination</ref>,<sp/>&amp;<ref refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" kindref="member">m_iHighSpeed</ref>,<sp/>&amp;<ref refid="structCanModule_1_1CanParameters_1a0f3653eda77900c9d2450793bd285c29" kindref="member">m_iTimeStamp</ref>,<sp/>&amp;<ref refid="structCanModule_1_1CanParameters_1ac17a318a7e3883005733c66010c04604" kindref="member">m_iSyncMode</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCanModule_1_1CanParameters_1a8668831351aaaa0446c75c58073bf357" kindref="member">m_dontReconfigure</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classCanModule_1_1CCanAccess" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCanModule_1_1CCanAccess" kindref="compound">CCanAccess</ref></highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101" refid="classCanModule_1_1CCanAccess_1a20323e55767d3a60c78a88db5d785829" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a20323e55767d3a60c78a88db5d785829" kindref="member">fw_slot0</ref>;</highlight></codeline>
<codeline lineno="102" refid="classCanModule_1_1CCanAccess_1ab9194c7d019e7da16f98a177b4e6e145" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1ab9194c7d019e7da16f98a177b4e6e145" kindref="member">fw_slot1</ref>;</highlight></codeline>
<codeline lineno="103" refid="classCanModule_1_1CCanAccess_1a7b299903bfe41cee29cc497ba43554fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a7b299903bfe41cee29cc497ba43554fd" kindref="member">fw_slot2</ref>;</highlight></codeline>
<codeline lineno="104" refid="classCanModule_1_1CCanAccess_1ad3cbc73468e8edf35f917ed4aa65df16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1ad3cbc73468e8edf35f917ed4aa65df16" kindref="member">fw_slot3</ref>;</highlight></codeline>
<codeline lineno="105" refid="classCanModule_1_1CCanAccess_1abe5e84df9f43bd309c635d3201b6dba7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1abe5e84df9f43bd309c635d3201b6dba7" kindref="member">fw_slot4</ref>;</highlight></codeline>
<codeline lineno="106" refid="classCanModule_1_1CCanAccess_1a62c0c4ac34c437097f74f685fb0266a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a62c0c4ac34c437097f74f685fb0266a5" kindref="member">fw_slot5</ref>;</highlight></codeline>
<codeline lineno="107" refid="classCanModule_1_1CCanAccess_1a4f457bfc8b8b494130293d563dac72e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a4f457bfc8b8b494130293d563dac72e7" kindref="member">fw_slot6</ref>;</highlight></codeline>
<codeline lineno="108" refid="classCanModule_1_1CCanAccess_1a12da52fdad176cf1fa482983bdb5cfd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a12da52fdad176cf1fa482983bdb5cfd5" kindref="member">fw_slot7</ref>;</highlight></codeline>
<codeline lineno="109" refid="classCanModule_1_1CCanAccess_1a7626751af619f301c0bde5657329b4dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a7626751af619f301c0bde5657329b4dd" kindref="member">fw_slot8</ref>;</highlight></codeline>
<codeline lineno="110" refid="classCanModule_1_1CCanAccess_1a5e7196879da60e80eb209ee807cbcd11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a5e7196879da60e80eb209ee807cbcd11" kindref="member">fw_slot9</ref>;</highlight></codeline>
<codeline lineno="111" refid="classCanModule_1_1CCanAccess_1a4130b6b2dac7673a2e2253c8b957294c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a4130b6b2dac7673a2e2253c8b957294c" kindref="member">fw_slot10</ref>;</highlight></codeline>
<codeline lineno="112" refid="classCanModule_1_1CCanAccess_1a4e8381b84bbbfbcfe6feb9eba7e17fd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a4e8381b84bbbfbcfe6feb9eba7e17fd9" kindref="member">fw_slot11</ref>;</highlight></codeline>
<codeline lineno="113" refid="classCanModule_1_1CCanAccess_1aad6416d679ea5cb9582b145ac7a61a31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1aad6416d679ea5cb9582b145ac7a61a31" kindref="member">fw_slot12</ref>;</highlight></codeline>
<codeline lineno="114" refid="classCanModule_1_1CCanAccess_1a625e00cbeb49526bb5b37b7e4032149b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a625e00cbeb49526bb5b37b7e4032149b" kindref="member">fw_slot13</ref>;</highlight></codeline>
<codeline lineno="115" refid="classCanModule_1_1CCanAccess_1a66ce4a26bdd58b6bfa016c86034137bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a66ce4a26bdd58b6bfa016c86034137bb" kindref="member">fw_slot14</ref>;</highlight></codeline>
<codeline lineno="116" refid="classCanModule_1_1CCanAccess_1a14a98fa7153c222282ae567a685611cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::function&lt;<sp/>void<sp/>(<sp/>const<sp/>CanMsgStruct<sp/>)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a14a98fa7153c222282ae567a685611cd" kindref="member">fw_slot15</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Empty<sp/>constructor,<sp/>just<sp/>get<sp/>rid<sp/>of<sp/>a<sp/>useless<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classCanModule_1_1CCanAccess_1a7c9b87d205b0ec265c972a3303cecda2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a7c9b87d205b0ec265c972a3303cecda2" kindref="member">CCanAccess</ref>():</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a6e42f036ab5b70474477a8e4715908aa" kindref="member">s_connectionIndex</ref>(0),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a2dd4a63017d6b5b1f4ce482c30711683" kindref="member">s_logItRemoteInstance</ref>(NULL)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceCanModule_1aca09a34a617d28f8b35699e7933d2599" kindref="member">CanModule::version</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Method<sp/>that<sp/>sends<sp/>a<sp/>remote<sp/>request<sp/>trough<sp/>the<sp/>can<sp/>bus<sp/>channel.<sp/>If<sp/>the<sp/>method<sp/>createBus<sp/>was<sp/>not<sp/>called<sp/>before<sp/>this,<sp/>sendMessage<sp/>will<sp/>fail,<sp/>as<sp/>there<sp/>is<sp/>no</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>can<sp/>bus<sp/>channel<sp/>to<sp/>send<sp/>the<sp/>request<sp/>trough.<sp/>Similar<sp/>to<sp/>sendMessage,<sp/>but<sp/>it<sp/>sends<sp/>an<sp/>special<sp/>message<sp/>reserved<sp/>for<sp/>requests.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>cobID:<sp/>Identifier<sp/>that<sp/>will<sp/>be<sp/>used<sp/>for<sp/>the<sp/>request.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@return:<sp/>Was<sp/>the<sp/>initialisation<sp/>process<sp/>successful?</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1acfefbc9be2696b1388cf6df2bba00aa1" kindref="member">sendRemoteRequest</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>cobID)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Method<sp/>that<sp/>initialises<sp/>a<sp/>can<sp/>bus<sp/>channel.<sp/>The<sp/>following<sp/>methods<sp/>called<sp/>upon<sp/>the<sp/>same<sp/>object<sp/>will<sp/>be<sp/>using<sp/>this<sp/>initialised<sp/>channel.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>name:<sp/>Name<sp/>of<sp/>the<sp/>can<sp/>bus<sp/>channel.<sp/>The<sp/>specific<sp/>mapping<sp/>will<sp/>change<sp/>depending<sp/>on<sp/>the<sp/>interface<sp/>used.<sp/>For<sp/>example,<sp/>accessing<sp/>channel<sp/>0<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systec<sp/>interface<sp/>would<sp/>be<sp/>using<sp/>name<sp/>&quot;st:9&quot;,<sp/>while<sp/>in<sp/>socket<sp/>can<sp/>the<sp/>same<sp/>channel<sp/>would<sp/>be<sp/>&quot;sock:can0&quot;.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anagate<sp/>interface<sp/>would<sp/>be<sp/>an:192.168.1.2<sp/>for<sp/>the<sp/>default<sp/>ip<sp/>address</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>parameters:<sp/>Different<sp/>parameters<sp/>used<sp/>for<sp/>the<sp/>initialisation.<sp/>For<sp/>using<sp/>the<sp/>default<sp/>parameters<sp/>just<sp/>set<sp/>this<sp/>to<sp/>&quot;Unspecified&quot;</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anagate:<sp/>pass<sp/>the<sp/>ip<sp/>number</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@return:<sp/>Was<sp/>the<sp/>initialisation<sp/>process<sp/>successful?</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a78590d342bc4f3433544d45371ca05ce" kindref="member">createBus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>parameters)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Method<sp/>that<sp/>sends<sp/>a<sp/>message<sp/>through<sp/>the<sp/>can<sp/>bus<sp/>channel.<sp/>If<sp/>the<sp/>method<sp/>createBUS<sp/>was<sp/>not<sp/>called<sp/>before<sp/>this,<sp/>sendMessage<sp/>will<sp/>fail,<sp/>as<sp/>there<sp/>is<sp/>no</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>can<sp/>bus<sp/>channel<sp/>to<sp/>send<sp/>a<sp/>message<sp/>through.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>cobID:<sp/>Identifier<sp/>that<sp/>will<sp/>be<sp/>used<sp/>for<sp/>the<sp/>message.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>len:<sp/>Length<sp/>of<sp/>the<sp/>message.<sp/>If<sp/>the<sp/>message<sp/>is<sp/>bigger<sp/>than<sp/>8<sp/>characters,<sp/>it<sp/>will<sp/>be<sp/>split<sp/>into<sp/>separate<sp/>8<sp/>characters<sp/>messages.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>message:<sp/>Message<sp/>to<sp/>be<sp/>sent<sp/>through<sp/>the<sp/>can<sp/>bus.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>rtr:<sp/>activate<sp/>the<sp/>Remote<sp/>Transmission<sp/>Request<sp/>flag.<sp/>Having<sp/>this<sp/>flag<sp/>in<sp/>a<sp/>message<sp/>with<sp/>data/len<sp/>is<sp/>not<sp/>part<sp/>of<sp/>the<sp/>CAN<sp/>standard,</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>since<sp/>some<sp/>hardware<sp/>uses<sp/>it<sp/>anyway,<sp/>the<sp/>option<sp/>to<sp/>use<sp/>it<sp/>is<sp/>provided.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@return:<sp/>Was<sp/>the<sp/>initialisation<sp/>process<sp/>successful?</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1aee42ab7fb9e50c02a1812202f7863d8c" kindref="member">sendMessage</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>cobID,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rtr<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classCanModule_1_1CCanAccess_1ad0360c49d00ec0ee92cfdd73c2e43935" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1ad0360c49d00ec0ee92cfdd73c2e43935" kindref="member">sendMessage</ref>(<ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref><sp/>*canm)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1aee42ab7fb9e50c02a1812202f7863d8c" kindref="member">sendMessage</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">(canm-&gt;<ref refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" kindref="member">c_id</ref>),<sp/>canm-&gt;<ref refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" kindref="member">c_dlc</ref>,<sp/>canm-&gt;<ref refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" kindref="member">c_data</ref>,<sp/>canm-&gt;<ref refid="structCanMsgStruct_1ad4a78c27262604bacb5720d8633f71c6" kindref="member">c_rtr</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Returns<sp/>bus<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classCanModule_1_1CCanAccess_1ac3f5126ae36d642217425e21696d19ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string&amp;<sp/><ref refid="classCanModule_1_1CCanAccess_1ac3f5126ae36d642217425e21696d19ca" kindref="member">getBusName</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a0eff18d10b7ee5d6f86b03898f38f7ca" kindref="member">m_sBusName</ref>;<sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Changes<sp/>bus<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Signal<sp/>that<sp/>will<sp/>be<sp/>called<sp/>when<sp/>a<sp/>can<sp/>Message<sp/>arrives<sp/>into<sp/>the<sp/>initialised<sp/>can<sp/>bus.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>In<sp/>order<sp/>to<sp/>process<sp/>this<sp/>message<sp/>manually,<sp/>a<sp/>handler<sp/>needs<sp/>to<sp/>be<sp/>connected<sp/>to<sp/>the<sp/>signal.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Example:<sp/>myCCanAccessPointer-&gt;canMessageCame.connect(&amp;myMessageRecievedHandler);</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::signals2::signal&lt;void<sp/>(const<sp/>CanMessage<sp/>&amp;)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classCanModule_1_1CCanAccess_1ac96f1cce6beda4309cdfb6651d3ce547" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1ac96f1cce6beda4309cdfb6651d3ce547" kindref="member">~CCanAccess</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classCanModule_1_1CCanAccess_1a08d387c6261bee525c0bb05eb66b4164" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a08d387c6261bee525c0bb05eb66b4164" kindref="member">connectFwSlotX</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connectionIndex,<sp/>boost::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref>)&gt;<sp/>userFunction<sp/>){</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>connecting<sp/>user<sp/>handler<sp/>to<sp/>slot&quot;<sp/>&lt;&lt;<sp/><sp/>connectionIndex<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>connectionIndex<sp/>){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1a20323e55767d3a60c78a88db5d785829" kindref="member">fw_slot0</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1ab9194c7d019e7da16f98a177b4e6e145" kindref="member">fw_slot1</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1a7b299903bfe41cee29cc497ba43554fd" kindref="member">fw_slot2</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1ad3cbc73468e8edf35f917ed4aa65df16" kindref="member">fw_slot3</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1abe5e84df9f43bd309c635d3201b6dba7" kindref="member">fw_slot4</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1a62c0c4ac34c437097f74f685fb0266a5" kindref="member">fw_slot5</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1a4f457bfc8b8b494130293d563dac72e7" kindref="member">fw_slot6</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1a12da52fdad176cf1fa482983bdb5cfd5" kindref="member">fw_slot7</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1a7626751af619f301c0bde5657329b4dd" kindref="member">fw_slot8</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1a5e7196879da60e80eb209ee807cbcd11" kindref="member">fw_slot9</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1a4130b6b2dac7673a2e2253c8b957294c" kindref="member">fw_slot10</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1a4e8381b84bbbfbcfe6feb9eba7e17fd9" kindref="member">fw_slot11</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1aad6416d679ea5cb9582b145ac7a61a31" kindref="member">fw_slot12</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>13:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1a625e00cbeb49526bb5b37b7e4032149b" kindref="member">fw_slot13</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>14:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1a66ce4a26bdd58b6bfa016c86034137bb" kindref="member">fw_slot14</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>15:<sp/>{<sp/><ref refid="classCanModule_1_1CCanAccess_1a14a98fa7153c222282ae567a685611cd" kindref="member">fw_slot15</ref><sp/>=<sp/>userFunction;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceCanModule_1a78730a18f59663871883885f3914a2aa" kindref="member">CanModule::LogItComponentName</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>can<sp/>not<sp/>connect<sp/>user<sp/>handler<sp/>to<sp/>slot&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>connectionIndex;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210" refid="classCanModule_1_1CCanAccess_1af12f56ce8f69ef8fb77beae30ec0ac2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1af12f56ce8f69ef8fb77beae30ec0ac2e" kindref="member">slot0</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot0<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a20323e55767d3a60c78a88db5d785829" kindref="member">fw_slot0</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214" refid="classCanModule_1_1CCanAccess_1a334f6f48e22483862d56091703dce595" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a334f6f48e22483862d56091703dce595" kindref="member">slot1</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot1<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1ab9194c7d019e7da16f98a177b4e6e145" kindref="member">fw_slot1</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218" refid="classCanModule_1_1CCanAccess_1a15a904b7593396d931e9f57b70da929d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a15a904b7593396d931e9f57b70da929d" kindref="member">slot2</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot2<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a7b299903bfe41cee29cc497ba43554fd" kindref="member">fw_slot2</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222" refid="classCanModule_1_1CCanAccess_1a0c9527a03b09356decf18241acd1a532" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a0c9527a03b09356decf18241acd1a532" kindref="member">slot3</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot3<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1abe5e84df9f43bd309c635d3201b6dba7" kindref="member">fw_slot4</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226" refid="classCanModule_1_1CCanAccess_1af95d2dff96d924a5c2589db82a8a6abd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1af95d2dff96d924a5c2589db82a8a6abd" kindref="member">slot4</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot4<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1abe5e84df9f43bd309c635d3201b6dba7" kindref="member">fw_slot4</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230" refid="classCanModule_1_1CCanAccess_1aca7bcb8e9e5043a6636ce767d345716a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1aca7bcb8e9e5043a6636ce767d345716a" kindref="member">slot5</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot5<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a62c0c4ac34c437097f74f685fb0266a5" kindref="member">fw_slot5</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234" refid="classCanModule_1_1CCanAccess_1a335e4ebb979de2ad399380886b3742b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a335e4ebb979de2ad399380886b3742b7" kindref="member">slot6</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot6<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a4f457bfc8b8b494130293d563dac72e7" kindref="member">fw_slot6</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238" refid="classCanModule_1_1CCanAccess_1a8278d35739b5f92e24331accb4b8383e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a8278d35739b5f92e24331accb4b8383e" kindref="member">slot7</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot7<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a12da52fdad176cf1fa482983bdb5cfd5" kindref="member">fw_slot7</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242" refid="classCanModule_1_1CCanAccess_1a2e5052c0d4b0bf48d0ea709583349118" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a2e5052c0d4b0bf48d0ea709583349118" kindref="member">slot8</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot8<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a7626751af619f301c0bde5657329b4dd" kindref="member">fw_slot8</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246" refid="classCanModule_1_1CCanAccess_1a9eb127d5fa0c228f785d65a1ef25b97a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a9eb127d5fa0c228f785d65a1ef25b97a" kindref="member">slot9</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot9<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a5e7196879da60e80eb209ee807cbcd11" kindref="member">fw_slot9</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250" refid="classCanModule_1_1CCanAccess_1ab10944ddde9a45400eab905a58ef0534" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1ab10944ddde9a45400eab905a58ef0534" kindref="member">slot10</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot10<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a4130b6b2dac7673a2e2253c8b957294c" kindref="member">fw_slot10</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254" refid="classCanModule_1_1CCanAccess_1a4825360b2a2787160be01b2aa9419ce1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a4825360b2a2787160be01b2aa9419ce1" kindref="member">slot11</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot11<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a4e8381b84bbbfbcfe6feb9eba7e17fd9" kindref="member">fw_slot11</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258" refid="classCanModule_1_1CCanAccess_1a6d0a5e7306e46c5e5e5b9a3fc45e8330" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a6d0a5e7306e46c5e5e5b9a3fc45e8330" kindref="member">slot12</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot12<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1aad6416d679ea5cb9582b145ac7a61a31" kindref="member">fw_slot12</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262" refid="classCanModule_1_1CCanAccess_1a216e763e1cc1ce26dae65dfab939ad11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a216e763e1cc1ce26dae65dfab939ad11" kindref="member">slot13</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot13<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a625e00cbeb49526bb5b37b7e4032149b" kindref="member">fw_slot13</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266" refid="classCanModule_1_1CCanAccess_1a68b36fdd0ad1f64bd7a1f0207386be4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a68b36fdd0ad1f64bd7a1f0207386be4b" kindref="member">slot14</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot14<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a66ce4a26bdd58b6bfa016c86034137bb" kindref="member">fw_slot14</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270" refid="classCanModule_1_1CCanAccess_1af44e482ce74f03d22c8a339fe6f01aa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1af44e482ce74f03d22c8a339fe6f01aa7" kindref="member">slot15</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref><sp/>msg){</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>&quot;<sp/>slot15<sp/>invoked,<sp/>calling<sp/>user<sp/>handler&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a14a98fa7153c222282ae567a685611cd" kindref="member">fw_slot15</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classCanModule_1_1CCanAccess_1a86c0125599b177ed3017e842940565fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a86c0125599b177ed3017e842940565fd" kindref="member">testSignalSlot</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classCanModule_1_1CCanAccess_1a3730f588f597fa5b692d286680a8df00" kindref="member">_lh</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>sending<sp/>a<sp/>test<sp/>signal<sp/>to<sp/>slot&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref><sp/>cm;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>(<sp/>cm<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classCanModule_1_1CCanAccess_1a3730f588f597fa5b692d286680a8df00" kindref="member">_lh</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>a<sp/>test<sp/>signal<sp/>to<sp/>this<sp/>object&apos;s<sp/>slot<sp/>was<sp/>sent&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classCanModule_1_1CCanAccess_1a247e65001e8f59b47fdc2961dd67d74d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a247e65001e8f59b47fdc2961dd67d74d" kindref="member">connectReceptionSlotX</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connectionIndex<sp/>)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classCanModule_1_1CCanAccess_1a3730f588f597fa5b692d286680a8df00" kindref="member">_lh</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>connecting<sp/>internal<sp/>slot<sp/>to<sp/>boost<sp/>signal<sp/>of<sp/>this<sp/>connection<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>connectionIndex;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref>.connected()<sp/>){</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::WRN,<sp/><ref refid="classCanModule_1_1CCanAccess_1a3730f588f597fa5b692d286680a8df00" kindref="member">_lh</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>slot<sp/>is<sp/>already<sp/>connected,<sp/>disconnecting&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref>.disconnect();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>connectionIndex<sp/>){</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1af12f56ce8f69ef8fb77beae30ec0ac2e" kindref="member">slot0</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1a334f6f48e22483862d56091703dce595" kindref="member">slot1</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1a15a904b7593396d931e9f57b70da929d" kindref="member">slot2</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1a0c9527a03b09356decf18241acd1a532" kindref="member">slot3</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1af95d2dff96d924a5c2589db82a8a6abd" kindref="member">slot4</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1aca7bcb8e9e5043a6636ce767d345716a" kindref="member">slot5</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1a335e4ebb979de2ad399380886b3742b7" kindref="member">slot6</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1a8278d35739b5f92e24331accb4b8383e" kindref="member">slot7</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1a2e5052c0d4b0bf48d0ea709583349118" kindref="member">slot8</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1a9eb127d5fa0c228f785d65a1ef25b97a" kindref="member">slot9</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1ab10944ddde9a45400eab905a58ef0534" kindref="member">slot10</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1a4825360b2a2787160be01b2aa9419ce1" kindref="member">slot11</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1a6d0a5e7306e46c5e5e5b9a3fc45e8330" kindref="member">slot12</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>13:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1a216e763e1cc1ce26dae65dfab939ad11" kindref="member">slot13</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>14:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1a68b36fdd0ad1f64bd7a1f0207386be4b" kindref="member">slot14</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>15:{<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.connect(<sp/>&amp;<ref refid="classCanModule_1_1CCanAccess_1af44e482ce74f03d22c8a339fe6f01aa7" kindref="member">slot15</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR,<sp/><ref refid="classCanModule_1_1CCanAccess_1a3730f588f597fa5b692d286680a8df00" kindref="member">_lh</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can<sp/>not<sp/>connect<sp/>to<sp/>internal<sp/>slot<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>connectionIndex<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(available<sp/>slots<sp/>0..15)&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a6e42f036ab5b70474477a8e4715908aa" kindref="member">s_connectionIndex</ref><sp/>=<sp/>connectionIndex;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::INF,<sp/><ref refid="classCanModule_1_1CCanAccess_1a3730f588f597fa5b692d286680a8df00" kindref="member">_lh</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;OK<sp/>connected<sp/>internal<sp/>slot&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a6e42f036ab5b70474477a8e4715908aa" kindref="member">s_connectionIndex</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>boost<sp/>signal<sp/>of<sp/>this<sp/>object&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312" refid="classCanModule_1_1CCanAccess_1a8212fb246945f2c32a164e83be42bc73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a8212fb246945f2c32a164e83be42bc73" kindref="member">disconnectReceptionSlotX</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classCanModule_1_1CCanAccess_1a3730f588f597fa5b692d286680a8df00" kindref="member">_lh</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>disconnecting<sp/>internal<sp/>slot<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a6e42f036ab5b70474477a8e4715908aa" kindref="member">s_connectionIndex</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>.disconnect(<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref><sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Signal<sp/>that<sp/>will<sp/>be<sp/>called<sp/>when<sp/>a<sp/>can<sp/>Error<sp/>arrives<sp/>into<sp/>the<sp/>initialised<sp/>can<sp/>bus.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>In<sp/>order<sp/>to<sp/>process<sp/>this<sp/>message<sp/>manually,<sp/>a<sp/>handler<sp/>needs<sp/>to<sp/>be<sp/>connected<sp/>to<sp/>the<sp/>signal.</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Example:<sp/>myCCanAccessPointer-&gt;canMessageError.connect(&amp;myErrorRecievedHandler);</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="classCanModule_1_1CCanAccess_1a33fbd693f04b4f4e21cee20856c44866" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::signals2::signal&lt;void<sp/>(const<sp/>int,const<sp/>char<sp/>*,timeval<sp/>&amp;)<sp/>&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a33fbd693f04b4f4e21cee20856c44866" kindref="member">canMessageError</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Returns<sp/>the<sp/>CanStatistics<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1ad3182c83b4c5d7e6aef982c36e731507" kindref="member">getStatistics</ref>(<sp/><ref refid="classCanModule_1_1CanStatistics" kindref="compound">CanStatistics</ref><sp/>&amp;<sp/>result<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="classCanModule_1_1CCanAccess_1ab5a430fc27073d92c69659bda261b74d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1ab5a430fc27073d92c69659bda261b74d" kindref="member">initialiseLogging</ref>(LogItInstance*<sp/>remoteInstance)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>Log::initializeDllLogging(remoteInstance);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a2dd4a63017d6b5b1f4ce482c30711683" kindref="member">s_logItRemoteInstance</ref><sp/>=<sp/>remoteInstance;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="classCanModule_1_1CCanAccess_1a8210a8161f1987973584b6dda5dc6d7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>LogItInstance*<sp/><ref refid="classCanModule_1_1CCanAccess_1a8210a8161f1987973584b6dda5dc6d7d" kindref="member">getLogItInstance</ref>()</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/><ref refid="classCanModule_1_1CCanAccess_1a2dd4a63017d6b5b1f4ce482c30711683" kindref="member">s_logItRemoteInstance</ref><sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@<sp/>Parse<sp/>the<sp/>input<sp/>parameters</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>name<sp/>The<sp/>parameters<sp/>have<sp/>a<sp/>format<sp/>&lt;name<sp/>component&gt;:name<sp/>chanel:options<sp/>for<sp/>add<sp/>address<sp/>parameters&gt;</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>parameters<sp/>is<sp/>a<sp/>string<sp/>with<sp/>possible<sp/>6<sp/>word<sp/>describing<sp/>can<sp/>options</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@return:<sp/>the<sp/>result<sp/>is<sp/>saved<sp/>in<sp/>internal<sp/>variable<sp/>m_sBusName<sp/>and<sp/>m_CanParameters</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="classCanModule_1_1CCanAccess_1af26c9d102638fb96e5e1305f807d148f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>vector&lt;string&gt;<sp/><ref refid="classCanModule_1_1CCanAccess_1af26c9d102638fb96e5e1305f807d148f" kindref="member">parseNameAndParameters</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>parameters){</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classCanModule_1_1CCanAccess_1a3730f588f597fa5b692d286680a8df00" kindref="member">_lh</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>name=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>parameters=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a0eff18d10b7ee5d6f86b03898f38f7ca" kindref="member">m_sBusName</ref><sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>stringVector;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istringstream<sp/>nameSS(name);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>temporalString;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(nameSS,<sp/>temporalString,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringVector.push_back(temporalString);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classCanModule_1_1CCanAccess_1a3730f588f597fa5b692d286680a8df00" kindref="member">_lh</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>stringVector<sp/>new<sp/>element=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>temporalString;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ae3c938ac282acae4e49487cbb8a61133" kindref="member">scanParameters</ref>(parameters);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classCanModule_1_1CCanAccess_1a3730f588f597fa5b692d286680a8df00" kindref="member">_lh</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>stringVector<sp/>size=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>stringVector.size();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stringVector;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367" refid="classCanModule_1_1CCanAccess_1a0eff18d10b7ee5d6f86b03898f38f7ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a0eff18d10b7ee5d6f86b03898f38f7ca" kindref="member">m_sBusName</ref>;</highlight></codeline>
<codeline lineno="368" refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCanModule_1_1CanParameters" kindref="compound">CanParameters</ref><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="371" refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::signals2::connection<sp/><ref refid="classCanModule_1_1CCanAccess_1aa624bfe085a65b9fba440f3a8d721525" kindref="member">s_cconnection</ref>;</highlight></codeline>
<codeline lineno="372" refid="classCanModule_1_1CCanAccess_1a6e42f036ab5b70474477a8e4715908aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess_1a6e42f036ab5b70474477a8e4715908aa" kindref="member">s_connectionIndex</ref>;</highlight></codeline>
<codeline lineno="373" refid="classCanModule_1_1CCanAccess_1a3730f588f597fa5b692d286680a8df00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::LogComponentHandle<sp/><ref refid="classCanModule_1_1CCanAccess_1a3730f588f597fa5b692d286680a8df00" kindref="member">_lh</ref>;<sp/></highlight><highlight class="comment">//<sp/>s_lh<sp/>?!?<sp/>@<sp/>windows<sp/>w.t.f.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="classCanModule_1_1CCanAccess_1a2dd4a63017d6b5b1f4ce482c30711683" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>LogItInstance*<sp/><ref refid="classCanModule_1_1CCanAccess_1a2dd4a63017d6b5b1f4ce482c30711683" kindref="member">s_logItRemoteInstance</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">};</highlight></codeline>
<codeline lineno="377"><highlight class="normal">};</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CCANACCESS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterface/include/CCanAccess.h"/>
  </compounddef>
</doxygen>
