<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="AnaCanScan_8cpp" kind="file" language="C++">
    <compoundname>AnaCanScan.cpp</compoundname>
    <includes refid="AnaCanScan_8h" local="yes">AnaCanScan.h</includes>
    <incdepgraph>
      <node id="22">
        <label>atomic</label>
      </node>
      <node id="21">
        <label>ExportDefinition.h</label>
        <link refid="ExportDefinition_8h"/>
      </node>
      <node id="9">
        <label>LogIt.h</label>
      </node>
      <node id="20">
        <label>CanStatistics.h</label>
        <link refid="CanStatistics_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>AnaGateDLL.h</label>
      </node>
      <node id="19">
        <label>boost/signals2.hpp</label>
      </node>
      <node id="16">
        <label>CanMessage.h</label>
        <link refid="CanMessage_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdexcept</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="23">
        <label>VERSION.h</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="18">
        <label>boost/bind/bind.hpp</label>
      </node>
      <node id="6">
        <label>condition_variable</label>
      </node>
      <node id="1">
        <label>CanInterfaceImplementations/anagate/AnaCanScan.cpp</label>
        <link refid="AnaCanScan_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>sstream</label>
      </node>
      <node id="26">
        <label>AnaGateDllCan.h</label>
      </node>
      <node id="7">
        <label>time.h</label>
      </node>
      <node id="13">
        <label>sys/time.h</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>AnaCanScan.h</label>
        <link refid="AnaCanScan_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>mutex</label>
      </node>
      <node id="15">
        <label>chrono</label>
      </node>
      <node id="4">
        <label>thread</label>
      </node>
      <node id="12">
        <label>CanModuleUtils.h</label>
        <link refid="CanModuleUtils_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>CCanAccess.h</label>
        <link refid="CCanAccess_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>AnaGateErrors.h</label>
        <link refid="AnaGateErrors_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="AnaCanScan_8cpp_1a07e042970e18b919d409eb09524d625c" prot="public" static="no">
        <name>DLLEXPORTFLAG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Â© Copyright CERN, 2015. All rights not expressly granted are reserved.</para>
<para><ref refid="AnaCanScan_8cpp" kindref="compound">AnaCanScan.cpp</ref></para>
<para>Created on: Mar 17, 2015 Author: pnikiel, vfilimon, quasar team Maintainer: mludwig at cern dot ch</para>
<para>This file is part of Quasar.</para>
<para>Quasar is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public Licence as published by the Free Software Foundation, either version 3 of the Licence.</para>
<para>Quasar is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public Licence for more details.</para>
<para>You should have received a copy of the GNU Lesser General Public License along with Quasar. If not, see <ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink>.</para>
<para>Here the Anagate ethernet-CAN bridges are implemented </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="32" column="10" bodyfile="CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AnaCanScan_8cpp_1a9aa60e1ead64be77ad551e745cbfd4d3" prot="public" static="no">
        <name>WINAPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="33" column="9" bodyfile="CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" prot="public" static="no">
        <name>MLOGANA</name>
        <param><defname>LEVEL</defname></param>
        <param><defname>THIS</defname></param>
        <initializer>LOG( Log::LEVEL, <ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref>) &lt;&lt; __FUNCTION__ &lt;&lt; &quot; &quot; &lt;&lt; &quot; anagate bus= &quot; &lt;&lt; THIS-&gt;getBusName() &lt;&lt; &quot; &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="53" column="9" bodyfile="CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="AnaCanScan_8cpp_1a01df1cd6ffed5847fe25e00acdb71f46" prot="public" static="no" mutable="no">
        <type>std::recursive_mutex</type>
        <definition>std::recursive_mutex anagateReconnectMutex</definition>
        <argsstring></argsstring>
        <name>anagateReconnectMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="37" column="22" bodyfile="CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="37" bodyend="-1"/>
        <referencedby refid="classAnaCanScan_1a6f8433af30b66333a940c4fbdbb64b5b" compoundref="AnaCanScan_8cpp" startline="673" endline="779">AnaCanScan::reconnectAllPorts</referencedby>
      </memberdef>
      <memberdef kind="variable" id="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" prot="public" static="no" mutable="no">
        <type>std::map&lt; AnaInt32, <ref refid="classAnaCanScan" kindref="compound">AnaCanScan</ref> * &gt;</type>
        <definition>std::map&lt;AnaInt32, AnaCanScan*&gt; g_AnaCanScanObjectMap</definition>
        <argsstring></argsstring>
        <name>g_AnaCanScanObjectMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>global map of connection-objects: the map-key is the handle. Since handles are allocated by the OS the keys are getting changed as well when we reconnect, so that we do not keep the stale keys(=handles) in the map at all. The map is used in the (static) InternalCallback code straightforward and speedy, because we can get to the object by just looking up the map using the key(=the handle). The map manipulations are protected by serialization of reconnects with the anagateReconnectMutex. At RO access in the callbacks the map is NOT protected because we do not want to serialize the callbacks and because it is a RO map access, which is &quot;like atomic&quot;. Well - it does work in multithreads.. ;-) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="51" column="10" bodyfile="CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="51" bodyend="-1"/>
        <referencedby refid="classAnaCanScan_1a428d6c62f3a2d6b4297898593961696b" compoundref="AnaCanScan_8cpp" startline="786" endline="832">AnaCanScan::connectReceptionHandler</referencedby>
        <referencedby refid="classAnaCanScan_1ae7ab2706bb4cd5e02409db38e73dbb3e" compoundref="AnaCanScan_8cpp" startline="837" endline="845">AnaCanScan::eraseReceptionHandlerFromMap</referencedby>
        <referencedby refid="AnaCanScan_8cpp_1ad5698349874e3653b879b5de27311594" compoundref="AnaCanScan_8cpp" startline="162" endline="186">InternalCallback</referencedby>
        <referencedby refid="classAnaCanScan_1ad94121f1933d50cafa52d625ee435f6c" compoundref="AnaCanScan_8cpp" startline="424" endline="496">AnaCanScan::openCanPort</referencedby>
        <referencedby refid="classAnaCanScan_1a6f8433af30b66333a940c4fbdbb64b5b" compoundref="AnaCanScan_8cpp" startline="673" endline="779">AnaCanScan::reconnectAllPorts</referencedby>
        <referencedby refid="classAnaCanScan_1aedcf208c8b79a297650bb2790884a79d" compoundref="AnaCanScan_8cpp" startline="621" endline="653">AnaCanScan::reconnectThisPort</referencedby>
        <referencedby refid="classAnaCanScan_1a9ebdd69b0b5f2e43b152fde44dfbd543" compoundref="AnaCanScan_8cpp" startline="603" endline="615">AnaCanScan::showAnaCanScanObjectMap</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="AnaCanScan_8cpp_1ae930092b65c48c86b99b5da2178b4692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="MockCanAccess_8cpp_1a07e042970e18b919d409eb09524d625c" kindref="member">DLLEXPORTFLAG</ref> <ref refid="classCanModule_1_1CCanAccess" kindref="compound">CCanAccess</ref> *</type>
        <definition>DLLEXPORTFLAG CCanAccess* getCanBusAccess</definition>
        <argsstring>()</argsstring>
        <name>getCanBusAccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates and returns anagate can access object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="151" column="37" bodyfile="CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="AnaCanScan_8cpp_1ad5698349874e3653b879b5de27311594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void <ref refid="STCanScan_8cpp_1a9aa60e1ead64be77ad551e745cbfd4d3" kindref="member">WINAPI</ref></type>
        <definition>void WINAPI InternalCallback</definition>
        <argsstring>(AnaUInt32 nIdentifier, const char *pcBuffer, AnaInt32 nBufferLen, AnaInt32 nFlags, AnaInt32 hHandle, AnaInt32 nSeconds, AnaInt32 nMicroseconds)</argsstring>
        <name>InternalCallback</name>
        <param>
          <type>AnaUInt32</type>
          <declname>nIdentifier</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcBuffer</declname>
        </param>
        <param>
          <type>AnaInt32</type>
          <declname>nBufferLen</declname>
        </param>
        <param>
          <type>AnaInt32</type>
          <declname>nFlags</declname>
        </param>
        <param>
          <type>AnaInt32</type>
          <declname>hHandle</declname>
        </param>
        <param>
          <type>AnaInt32</type>
          <declname>nSeconds</declname>
        </param>
        <param>
          <type>AnaInt32</type>
          <declname>nMicroseconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>call back to catch incoming CAN messages for reading. It is called on a handle, which is internally registered and managed by the anagate API. If that handle changes, the callback has to be unregistered before I guess. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="162" column="13" bodyfile="CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="162" bodyend="186"/>
        <references refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" compoundref="CanMessage_8h" startline="29">CanMsgStruct::c_data</references>
        <references refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" compoundref="CanMessage_8h" startline="27">CanMsgStruct::c_dlc</references>
        <references refid="structCanMsgStruct_1acf3abc93beb936e5f9431ef6ec4568f3" compoundref="CanMessage_8h" startline="25">CanMsgStruct::c_ff</references>
        <references refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" compoundref="CanMessage_8h" startline="23">CanMsgStruct::c_id</references>
        <references refid="structCanMsgStruct_1a06b9b3e9423f35edfb96df7b04828bba" compoundref="CanMessage_8h" startline="31">CanMsgStruct::c_time</references>
        <references refid="namespaceCanModule_1a4cbb8d5fed5d508c5d6854a26e71a820" compoundref="CanModuleUtils_8cpp" startline="82" endline="94">CanModule::canMessageToString</references>
        <references refid="namespaceCanModule_1a3ec3082d7d11a9c1641023cb3f53cbe5" compoundref="CanModuleUtils_8cpp" startline="49" endline="57">CanModule::convertTimepointToTimeval</references>
        <references refid="namespaceCanModule_1a6d0711aac0a75de5d2bf6142997a814d" compoundref="CanModuleUtils_8cpp" startline="79" endline="79">CanModule::currentTimeTimeval</references>
        <references refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" compoundref="AnaCanScan_8cpp" startline="51">g_AnaCanScanObjectMap</references>
        <referencedby refid="classAnaCanScan_1a428d6c62f3a2d6b4297898593961696b" compoundref="AnaCanScan_8cpp" startline="786" endline="832">AnaCanScan::connectReceptionHandler</referencedby>
        <referencedby refid="classAnaCanScan_1ad94121f1933d50cafa52d625ee435f6c" compoundref="AnaCanScan_8cpp" startline="424" endline="496">AnaCanScan::openCanPort</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="27"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AnaCanScan_8h" kindref="compound">AnaCanScan.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DLLEXPORTFLAG<sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="AnaCanScan_8cpp_1a07e042970e18b919d409eb09524d625c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DLLEXPORTFLAG<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="AnaCanScan_8cpp_1a9aa60e1ead64be77ad551e745cbfd4d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WINAPI<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceCanModule" kindref="compound">CanModule</ref>;</highlight></codeline>
<codeline lineno="37" refid="AnaCanScan_8cpp_1a01df1cd6ffed5847fe25e00acdb71f46" refkind="member"><highlight class="normal">std::recursive_mutex<sp/><ref refid="AnaCanScan_8cpp_1a01df1cd6ffed5847fe25e00acdb71f46" kindref="member">anagateReconnectMutex</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/>std::map&lt;int,<sp/>AnaCanScan::ANAGATE_PORTDEF_t&gt;<sp/><ref refid="classAnaCanScan_1a71e415a2fec462b991777ca38a9797cc" kindref="member">AnaCanScan::st_canHandleMap</ref>;<sp/></highlight><highlight class="comment">//<sp/>map<sp/>handles<sp/>to<sp/><sp/>{ports,<sp/>ip}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/>Log::LogComponentHandle<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/>std::map&lt;<sp/>std::string,bool<sp/>&gt;<sp/><ref refid="classAnaCanScan_1a09cebd448f6a018081f94d2824ae391b" kindref="member">AnaCanScan::m_reconnectInProgress_map</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" refkind="member"><highlight class="normal">std::map&lt;AnaInt32,<sp/>AnaCanScan*&gt;<sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>;<sp/></highlight><highlight class="comment">//<sp/>map<sp/>handles<sp/>to<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLOGANA(LEVEL,THIS)<sp/>LOG(<sp/>Log::LEVEL,<sp/>AnaCanScan::st_logItHandleAnagate)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>&quot;<sp/>anagate<sp/>bus=<sp/>&quot;<sp/>&lt;&lt;<sp/>THIS-&gt;getBusName()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classAnaCanScan_1af6c27ae08034c5da64a54de29e2e875e" refkind="member"><highlight class="normal"><ref refid="classAnaCanScan_1af6c27ae08034c5da64a54de29e2e875e" kindref="member">AnaCanScan::AnaCanScan</ref>():</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>m_canPortNumber(0),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>m_canIPAddress(<sp/>(char<sp/>*)<sp/>std::string(</highlight><highlight class="stringliteral">&quot;192.168.1.2&quot;</highlight><highlight class="normal">).c_str()),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>m_baudRate(0),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>m_idCanScanThread(0),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>m_canCloseDevice(false),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>m_busName(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>m_busParameters(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>m_UcanHandle(0),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>m_timeout<sp/>(<sp/>6000<sp/>),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>m_busStopped(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1af3f15dedf80e67f1309946632d87198d" kindref="member">setTimeSinceOpened</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1a85e6c87ce5285884a0272088178bb8f6" kindref="member">beginNewRun</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a6f97774773e3e4457f38a7b612d991f0" kindref="member">m_failedSendCountdown</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1a2dbf5862f3818d94bc78dd9ccb5c73d0" kindref="member">m_maxFailedSendCount</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a41af60558bdb3b738f39560755864333" kindref="member">m_hCanReconnectionThread</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::thread(<sp/>&amp;<ref refid="classAnaCanScan_1ae5b4e8c387c5f92576d0b3869fece47a" kindref="member">AnaCanScan::CanReconnectionThread</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classAnaCanScan_1a4c115df4a8755c0fd70030ae457af24c" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="classAnaCanScan_1a4c115df4a8755c0fd70030ae457af24c" kindref="member">AnaCanScan::getPortStatus</ref>(){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>state<sp/>=<sp/>CANDeviceConnectState(<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref><sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>state<sp/>|<sp/><ref refid="CCanAccess_8h_1a1f1789533d0f909368bb51596939ef5b" kindref="member">CANMODULE_STATUS_BP_ANAGATE</ref><sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classAnaCanScan_1a2c8256b5096aa1351fbd9f3f2f717180" refkind="member"><highlight class="normal"><ref refid="classAnaCanScan_1a2c8256b5096aa1351fbd9f3f2f717180" kindref="member">AnaCanScan::~AnaCanScan</ref>()</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a4631538bddfbe61637ea5ed0071b780f" kindref="member">stopBus</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>closed<sp/>successfully&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classAnaCanScan_1a4631538bddfbe61637ea5ed0071b780f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a4631538bddfbe61637ea5ed0071b780f" kindref="member">AnaCanScan::stopBus</ref><sp/>()</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classAnaCanScan_1a9777d181ff5f28da363907ecb50ebc90" kindref="member">m_busStopped</ref>){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>stopping<sp/>anagate<sp/>m_busName=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/><ref refid="classAnaCanScan_1a86b2f6e716cbe52a850ec75c1736b7af" kindref="member">m_busName</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_canPortNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CANSetCallback(<ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CANCloseDevice(<ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a1b62497ac5f0edcf9895c9f8cfad6b50" kindref="member">deleteCanHandleOfPortIp</ref>(<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref><sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1ae7ab2706bb4cd5e02409db38e73dbb3e" kindref="member">eraseReceptionHandlerFromMap</ref>(<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref><sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a9777d181ff5f28da363907ecb50ebc90" kindref="member">m_busStopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classAnaCanScan_1a49edbc1e0e48d5d487238bc76fa133b9" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a49edbc1e0e48d5d487238bc76fa133b9" kindref="member">AnaCanScan::setIpReconnectInProgress</ref>(<sp/>std::string<sp/>ip,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag<sp/>){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>called<sp/>inside<sp/>the<sp/>locked<sp/>mutex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;<sp/>std::string,<sp/>bool<sp/>&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="classAnaCanScan_1a09cebd448f6a018081f94d2824ae391b" kindref="member">AnaCanScan::m_reconnectInProgress_map</ref>.find(<sp/>ip<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>flag<sp/>){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>as<sp/>in<sp/>progress<sp/>if<sp/>not<sp/>yet<sp/>exists/marked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it<sp/>==<sp/><ref refid="classAnaCanScan_1a09cebd448f6a018081f94d2824ae391b" kindref="member">AnaCanScan::m_reconnectInProgress_map</ref>.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a09cebd448f6a018081f94d2824ae391b" kindref="member">AnaCanScan::m_reconnectInProgress_map</ref>.insert<sp/>(<sp/>std::pair&lt;<sp/>std::string,<sp/>bool<sp/>&gt;(<sp/>ip,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>erase<sp/>existing<sp/>if<sp/>still<sp/>exists/marked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it<sp/>!=<sp/><ref refid="classAnaCanScan_1a09cebd448f6a018081f94d2824ae391b" kindref="member">AnaCanScan::m_reconnectInProgress_map</ref>.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a09cebd448f6a018081f94d2824ae391b" kindref="member">AnaCanScan::m_reconnectInProgress_map</ref>.erase(<sp/>it<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classAnaCanScan_1ad07c0156fc64b9741b93c8087271697e" refkind="member"><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad07c0156fc64b9741b93c8087271697e" kindref="member">AnaCanScan::isIpReconnectInProgress</ref>(<sp/>std::string<sp/>ip<sp/>){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>called<sp/>inside<sp/>the<sp/>locked<sp/>mutex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;<sp/>std::string,<sp/>bool<sp/>&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="classAnaCanScan_1a09cebd448f6a018081f94d2824ae391b" kindref="member">AnaCanScan::m_reconnectInProgress_map</ref>.find(<sp/>ip<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it<sp/>==<sp/><ref refid="classAnaCanScan_1a09cebd448f6a018081f94d2824ae391b" kindref="member">AnaCanScan::m_reconnectInProgress_map</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="AnaCanScan_8cpp_1ae930092b65c48c86b99b5da2178b4692" refkind="member"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/><ref refid="AnaCanScan_8cpp_1a07e042970e18b919d409eb09524d625c" kindref="member">DLLEXPORTFLAG</ref><sp/><ref refid="classCanModule_1_1CCanAccess" kindref="compound">CCanAccess</ref><sp/>*<ref refid="AnaCanScan_8cpp_1ae930092b65c48c86b99b5da2178b4692" kindref="member">getCanBusAccess</ref>()</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess" kindref="compound">CCanAccess</ref><sp/>*canAccess<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan" kindref="compound">AnaCanScan</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>canAccess;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="AnaCanScan_8cpp_1ad5698349874e3653b879b5de27311594" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AnaCanScan_8cpp_1a9aa60e1ead64be77ad551e745cbfd4d3" kindref="member">WINAPI</ref><sp/><ref refid="AnaCanScan_8cpp_1ad5698349874e3653b879b5de27311594" kindref="member">InternalCallback</ref>(AnaUInt32<sp/>nIdentifier,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>pcBuffer,<sp/>AnaInt32<sp/>nBufferLen,<sp/>AnaInt32<sp/>nFlags,<sp/>AnaInt32<sp/>hHandle,<sp/>AnaInt32<sp/>nSeconds,<sp/>AnaInt32<sp/>nMicroseconds)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref><sp/>canMsgCopy;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nFlags<sp/>==<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>canMsgCopy.<ref refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" kindref="member">c_id</ref><sp/>=<sp/>nIdentifier;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>canMsgCopy.<ref refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" kindref="member">c_dlc</ref><sp/>=<sp/>nBufferLen;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>canMsgCopy.<ref refid="structCanMsgStruct_1acf3abc93beb936e5f9431ef6ec4568f3" kindref="member">c_ff</ref><sp/>=<sp/>nFlags;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nBufferLen;<sp/>i++)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canMsgCopy.<ref refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" kindref="member">c_data</ref>[i]<sp/>=<sp/>pcBuffer[i];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>canMsgCopy.<ref refid="structCanMsgStruct_1a06b9b3e9423f35edfb96df7b04828bba" kindref="member">c_time</ref><sp/>=<sp/><ref refid="namespaceCanModule_1a3ec3082d7d11a9c1641023cb3f53cbe5" kindref="member">CanModule::convertTimepointToTimeval</ref>(<ref refid="namespaceCanModule_1a6d0711aac0a75de5d2bf6142997a814d" kindref="member">currentTimeTimeval</ref>());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>more<sp/>hardcode<sp/>debugging,<sp/>leave<sp/>it<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__FUNCTION__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>anagate<sp/>message<sp/>reception<sp/>hHandle=<sp/>&quot;<sp/>&lt;&lt;<sp/>hHandle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>nIdentifier=<sp/>&quot;<sp/>&lt;&lt;<sp/>nIdentifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MLOGANA(TRC,<sp/>g_AnaCanScanPointerMap[hHandle]<sp/>)<sp/>&lt;&lt;<sp/>&quot;read():<sp/>&quot;<sp/>&lt;&lt;<sp/>canMessageToString(canMsgCopy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(<sp/>Log::TRC<sp/>)<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>CanModule<sp/>anagate<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceCanModule_1a4cbb8d5fed5d508c5d6854a26e71a820" kindref="member">CanModule::canMessageToString</ref>(canMsgCopy);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>[hHandle]-&gt;callbackOnRecieve(canMsgCopy);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>[hHandle]-&gt;statisticsOnRecieve(<sp/>nBufferLen<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classAnaCanScan_1a7ba68ea800d7a6837b6bc808d473323d" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a7ba68ea800d7a6837b6bc808d473323d" kindref="member">AnaCanScan::statisticsOnRecieve</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1a99de404f1b24cee80edfaad7ad1f9499" kindref="member">setTimeSinceReceived</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1a82b38a2383bc0ad6b1d306e86b9ef5c6" kindref="member">onReceive</ref>(<sp/>bytes<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classAnaCanScan_1af9a44b6ac914643225e2e61ca7a52f4c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1af9a44b6ac914643225e2e61ca7a52f4c" kindref="member">AnaCanScan::callbackOnRecieve</ref>(<ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classCanModule_1_1CCanAccess_1abfd40edc34a777a5ff4503a6e8a239d6" kindref="member">m_reconnectCondition</ref><sp/>==<sp/>ReconnectAutoCondition::timeoutOnReception<sp/>){</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a067f50699c1ed4b6ee6732eb0078ed0a" kindref="member">resetTimeoutOnReception</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="classAnaCanScan_1a64b086259bdd302b1d40cb9b7be49e5b" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a64b086259bdd302b1d40cb9b7be49e5b" kindref="member">AnaCanScan::createBus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>parameters)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a86b2f6e716cbe52a850ec75c1736b7af" kindref="member">m_busName</ref><sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a5558200a84f7754415c1b0625ee7f576" kindref="member">m_busParameters</ref><sp/>=<sp/>parameters;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calling<sp/>base<sp/>class<sp/>to<sp/>get<sp/>the<sp/>instance<sp/>from<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::LogComponentHandle<sp/>myHandle;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>LogItInstance*<sp/>logItInstance<sp/>=<sp/>CCanAccess::getLogItInstance();<sp/></highlight><highlight class="comment">//<sp/>actually<sp/>calling<sp/>instance<sp/>method,<sp/>not<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>anagate<sp/>component<sp/>for<sp/>logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!LogItInstance::setInstance(logItInstance))<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>could<sp/>not<sp/>set<sp/>LogIt<sp/>instance&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!logItInstance-&gt;getComponentHandle(<ref refid="namespaceCanModule_1a78730a18f59663871883885f3914a2aa" kindref="member">CanModule::LogItComponentName</ref>,<sp/>myHandle)){</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>could<sp/>not<sp/>get<sp/>LogIt<sp/>component<sp/>handle<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceCanModule_1a78730a18f59663871883885f3914a2aa" kindref="member">LogItComponentName</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref><sp/>=<sp/>myHandle;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>returnCode<sp/>=<sp/><ref refid="classAnaCanScan_1a9a235b690fe0be49a3e55d487ca72a57" kindref="member">configureCanBoard</ref>(name,<sp/>parameters);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>returnCode<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>OK,<sp/>Bus<sp/>created<sp/>with<sp/>name=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>parameters=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a9777d181ff5f28da363907ecb50ebc90" kindref="member">m_busStopped</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="classAnaCanScan_1a9a235b690fe0be49a3e55d487ca72a57" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a9a235b690fe0be49a3e55d487ca72a57" kindref="member">AnaCanScan::configureCanBoard</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>parameters)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(user<sp/>supplied)<sp/>name=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>parameters=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>stringVector;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>stringVector<sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1ac78e7df675c7e59f04ecc642406fecbe" kindref="member">parseNameAndParameters</ref>(name,<sp/>parameters);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>decode<sp/>3<sp/>elements<sp/>from<sp/>this:0=&quot;an&quot;<sp/>for<sp/>anagate<sp/>library,<sp/>1=can<sp/>port,<sp/>2=ip<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/><sp/>&quot;an:0:128.141.159.194&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stringVector.size()<sp/>!=<sp/>3<sp/>){</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>need<sp/>exactly<sp/>3<sp/>elements<sp/>delimited<sp/>by<sp/>\&quot;:\&quot;<sp/>like<sp/>\&quot;an:0:128.141.159.194\&quot;,<sp/>got<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>stringVector.size();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>stringVector.size();<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>stringVector[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>stringVector[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>stringVector.size();<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(cleaned<sp/>up)<sp/>stringVector[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>stringVector[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref><sp/>=<sp/>atoi(stringVector[1].c_str());</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>stringVector[2].c_str();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(cleaned<sp/>up)<sp/>canPortNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>up<sp/>to<sp/>7<sp/>parameter,<sp/>assume<sp/>defaults<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1ae2d7c7a9b314adffbde6eafac5a3607e" kindref="member">m_baudRate</ref><sp/>=<sp/>125000L;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(parameters.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;Unspecified&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_CanParameters.m_iNumberOfDetectedParameters<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ac4e03899b26e33a3867ee1f0bce674b5" kindref="member">m_iNumberOfDetectedParameters</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ac4e03899b26e33a3867ee1f0bce674b5" kindref="member">m_iNumberOfDetectedParameters</ref><sp/>&gt;=<sp/>1<sp/>)<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1ae2d7c7a9b314adffbde6eafac5a3607e" kindref="member">m_baudRate</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref>;<sp/></highlight><highlight class="comment">//<sp/>just<sp/>for<sp/>the<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref><sp/>&gt;<sp/>125000L<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>!<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" kindref="member">m_iHighSpeed</ref><sp/>)){</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;baud<sp/>rate<sp/>is<sp/>above<sp/>125000bits/s,<sp/>and<sp/>the<sp/>high<sp/>speed<sp/>flag<sp/>is<sp/>not<sp/>set,<sp/>but<sp/>needed.<sp/>Setting<sp/>high<sp/>speed<sp/>flag<sp/>for<sp/>you.<sp/>To<sp/>avoid<sp/>this<sp/>warning<sp/>set<sp/>the<sp/>high<sp/>speed<sp/>flag<sp/>properly<sp/>in<sp/>your<sp/>configuration&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" kindref="member">m_iHighSpeed</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ac4e03899b26e33a3867ee1f0bce674b5" kindref="member">m_iNumberOfDetectedParameters</ref><sp/>&gt;=<sp/>7<sp/>)<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1aae2aa9f136d9bcc78ce596aaee286f3f" kindref="member">m_iTimeout</ref>;<sp/></highlight><highlight class="comment">//<sp/>here<sp/>we<sp/>set<sp/>it:<sp/>CANT-44</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;anagate:<sp/>picked<sp/>up<sp/>from<sp/>7th<sp/>parameter:<sp/>m_timeout=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>other<sp/>parameters<sp/>are<sp/>already<sp/>set,<sp/>either<sp/>to<sp/>0<sp/>by<sp/>init,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>by<sp/>decoding.<sp/>They<sp/>are<sp/>always<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>parsing<sp/>parameters:<sp/>this<sp/>syntax<sp/>is<sp/>incorrect:<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;you<sp/>need<sp/>up<sp/>to<sp/>7<sp/>numbers<sp/>separated<sp/>by<sp/>whitespaces,<sp/>i.e.<sp/>\&quot;125000<sp/>0<sp/>1<sp/>0<sp/>0<sp/>0<sp/>6000\&quot;<sp/>\&quot;p0<sp/>p1<sp/>p2<sp/>p3<sp/>p4<sp/>p5<sp/>p6\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p0<sp/>=<sp/>baud<sp/>rate,<sp/>125000<sp/>or<sp/>whatever<sp/>the<sp/>module<sp/>supports&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p1<sp/>=<sp/>operation<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p2<sp/>=<sp/>termination&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p3<sp/>=<sp/>high<sp/>speed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p4<sp/>=<sp/>time<sp/>stamp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p5<sp/>=<sp/>sync<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p6<sp/>=<sp/>timeout/ms&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unspecified:<sp/>we<sp/>use<sp/>defaults<sp/>&quot;125000<sp/>0<sp/>1<sp/>0<sp/>0<sp/>0<sp/>6000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(INF,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unspecified<sp/>parameters,<sp/>default<sp/>values<sp/>(termination=1)<sp/>will<sp/>be<sp/>used.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref><sp/>=<sp/>125000;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a6dcce5899a28a07c35042c2005fbac03" kindref="member">m_iOperationMode</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ac15d1cfe926f508a2788dab50aed992b" kindref="member">m_iTermination</ref><sp/>=<sp/>1<sp/>;</highlight><highlight class="comment">//<sp/>ENS-26903:<sp/>default<sp/>is<sp/>terminated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" kindref="member">m_iHighSpeed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a0f3653eda77900c9d2450793bd285c29" kindref="member">m_iTimeStamp</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ac17a318a7e3883005733c66010c04604" kindref="member">m_iSyncMode</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1aae2aa9f136d9bcc78ce596aaee286f3f" kindref="member">m_iTimeout</ref><sp/>=<sp/>6000;<sp/></highlight><highlight class="comment">//<sp/>CANT-44:<sp/>can<sp/>be<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_lBaudRate=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_iOperationMode=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a6dcce5899a28a07c35042c2005fbac03" kindref="member">m_iOperationMode</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_iTermination=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ac15d1cfe926f508a2788dab50aed992b" kindref="member">m_iTermination</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_iHighSpeed=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" kindref="member">m_iHighSpeed</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_iTimeStamp=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a0f3653eda77900c9d2450793bd285c29" kindref="member">m_iTimeStamp</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_iSyncMode=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ac17a318a7e3883005733c66010c04604" kindref="member">m_iSyncMode</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_iTimeout=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1aae2aa9f136d9bcc78ce596aaee286f3f" kindref="member">m_iTimeout</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad94121f1933d50cafa52d625ee435f6c" kindref="member">openCanPort</ref>();</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="classAnaCanScan_1a3e2635663ebdfac68591d6a0577fa951" refkind="member"><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a3e2635663ebdfac68591d6a0577fa951" kindref="member">AnaCanScan::addCanHandleOfPortIp</ref>(AnaInt32<sp/>handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/>std::string<sp/>ip)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;AnaInt32,<sp/>ANAGATE_PORTDEF_t&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="classAnaCanScan_1a71e415a2fec462b991777ca38a9797cc" kindref="member">st_canHandleMap</ref>.find(<sp/><ref refid="classAnaCanScan_1a9ce965955bb5eba734ed36b81945cb74" kindref="member">handle</ref><sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it<sp/>!=<sp/><ref refid="classAnaCanScan_1a71e415a2fec462b991777ca38a9797cc" kindref="member">st_canHandleMap</ref>.end()<sp/>){</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::WRN,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9ce965955bb5eba734ed36b81945cb74" kindref="member">handle</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>opened<sp/>already<sp/>on<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>port<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structAnaCanScan_1_1ANAGATE__PORTDEF__t" kindref="compound">ANAGATE_PORTDEF_t</ref><sp/>pd;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd.<ref refid="structAnaCanScan_1_1ANAGATE__PORTDEF__t_1a6ad8dd52dfbbfe170f3c5e0f4e20a49d" kindref="member">ip</ref><sp/>=<sp/>ip;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd.<ref refid="structAnaCanScan_1_1ANAGATE__PORTDEF__t_1a3bd14d317f470ae619d41105908436a0" kindref="member">port</ref><sp/>=<sp/>port;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a71e415a2fec462b991777ca38a9797cc" kindref="member">st_canHandleMap</ref>.insert(std::pair&lt;AnaInt32,<sp/>ANAGATE_PORTDEF_t&gt;(<ref refid="classAnaCanScan_1a9ce965955bb5eba734ed36b81945cb74" kindref="member">handle</ref>,<sp/>pd));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="classAnaCanScan_1a1b62497ac5f0edcf9895c9f8cfad6b50" refkind="member"><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a1b62497ac5f0edcf9895c9f8cfad6b50" kindref="member">AnaCanScan::deleteCanHandleOfPortIp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/>std::string<sp/>ip){</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structAnaCanScan_1_1ANAGATE__PORTDEF__t" kindref="compound">ANAGATE_PORTDEF_t</ref><sp/>pd;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>pd.<ref refid="structAnaCanScan_1_1ANAGATE__PORTDEF__t_1a6ad8dd52dfbbfe170f3c5e0f4e20a49d" kindref="member">ip</ref><sp/>=<sp/>ip;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>pd.<ref refid="structAnaCanScan_1_1ANAGATE__PORTDEF__t_1a3bd14d317f470ae619d41105908436a0" kindref="member">port</ref><sp/>=<sp/>port;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;AnaInt32,<sp/>ANAGATE_PORTDEF_t&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="classAnaCanScan_1a71e415a2fec462b991777ca38a9797cc" kindref="member">st_canHandleMap</ref>.begin();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a9ce965955bb5eba734ed36b81945cb74" kindref="member">handle</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>it<sp/>!=<sp/><ref refid="classAnaCanScan_1a71e415a2fec462b991777ca38a9797cc" kindref="member">st_canHandleMap</ref>.end()<sp/>){</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>it-&gt;second.port<sp/>==<sp/>port)<sp/>&amp;&amp;<sp/>(<sp/>it-&gt;second.ip<sp/>==<sp/>ip)){</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a9ce965955bb5eba734ed36b81945cb74" kindref="member">handle</ref><sp/>=<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classAnaCanScan_1a9ce965955bb5eba734ed36b81945cb74" kindref="member">handle</ref><sp/>&gt;<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a71e415a2fec462b991777ca38a9797cc" kindref="member">st_canHandleMap</ref>.erase(<sp/><ref refid="classAnaCanScan_1a9ce965955bb5eba734ed36b81945cb74" kindref="member">handle</ref><sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>could<sp/>not<sp/>erase<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9ce965955bb5eba734ed36b81945cb74" kindref="member">handle</ref></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>port<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="classAnaCanScan_1a7bf29c3cb20f59bca41d581e4d8c9c04" refkind="member"><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/>AnaInt32<sp/><ref refid="classAnaCanScan_1a7bf29c3cb20f59bca41d581e4d8c9c04" kindref="member">AnaCanScan::getCanHandleOfPortIp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/>std::string<sp/>ip)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>port<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;AnaInt32,<sp/>ANAGATE_PORTDEF_t&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="classAnaCanScan_1a71e415a2fec462b991777ca38a9797cc" kindref="member">st_canHandleMap</ref>.begin();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>it<sp/>!=<sp/><ref refid="classAnaCanScan_1a71e415a2fec462b991777ca38a9797cc" kindref="member">st_canHandleMap</ref>.end()<sp/>){</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>it-&gt;second.port<sp/>==<sp/>port)<sp/>&amp;&amp;<sp/>(<sp/>it-&gt;second.ip<sp/>==<sp/>ip)){</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>it-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="classAnaCanScan_1ad94121f1933d50cafa52d625ee435f6c" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad94121f1933d50cafa52d625ee435f6c" kindref="member">AnaCanScan::openCanPort</ref>()</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>canModuleHandle;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>canModuleHandle<sp/>=<sp/><ref refid="classAnaCanScan_1a7bf29c3cb20f59bca41d581e4d8c9c04" kindref="member">getCanHandleOfPortIp</ref>(<ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref><sp/>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>canModuleHandle<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>CANOpenDevice<sp/>with<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>canModuleHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>canModuleHandle</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_timeout=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANOpenDevice(&amp;canModuleHandle,<sp/>FALSE,<sp/>TRUE,<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref>.c_str(),<sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anaCallReturn<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>out<sp/>initialisation<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>CANOpenDevice,<sp/>return<sp/>code<sp/>=<sp/>[0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>open<sp/>already,<sp/>got<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>canModuleHandle;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>CAN<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>CANSetGlobals<sp/>with<sp/>m_lBaudRate=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_iOperationMode=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a6dcce5899a28a07c35042c2005fbac03" kindref="member">m_iOperationMode</ref></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_iTermination=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ac15d1cfe926f508a2788dab50aed992b" kindref="member">m_iTermination</ref></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_iHighSpeed=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" kindref="member">m_iHighSpeed</ref></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_iTimeStamp=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a0f3653eda77900c9d2450793bd285c29" kindref="member">m_iTimeStamp</ref></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>canModuleHandle;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANSetGlobals(canModuleHandle,<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref>,<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a6dcce5899a28a07c35042c2005fbac03" kindref="member">m_iOperationMode</ref>,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ac15d1cfe926f508a2788dab50aed992b" kindref="member">m_iTermination</ref>,<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" kindref="member">m_iHighSpeed</ref>,<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a0f3653eda77900c9d2450793bd285c29" kindref="member">m_iTimeStamp</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>anaCallReturn<sp/>){</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:{<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x30000:<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>to<sp/>TCP/IP<sp/>partner<sp/>can&apos;t<sp/>be<sp/>established<sp/>or<sp/>is<sp/>disconnected.<sp/>Lost<sp/>TCP/IP:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x40000:<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/><sp/>answer<sp/><sp/>was<sp/><sp/>received<sp/><sp/>from<sp/><sp/><sp/>TCP/IP<sp/>partner<sp/>within<sp/>the<sp/>defined<sp/>timeout.<sp/>Lost<sp/>TCP/IP:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x900000:<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>device<sp/>handle.<sp/>Lost<sp/>TCP/IP:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>default<sp/>:<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Other<sp/>Error<sp/>in<sp/>CANSetGlobals:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>handler<sp/>for<sp/>managing<sp/>incoming<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calling<sp/>CANSetCallbackEx<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>canModuleHandle;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANSetCallbackEx(canModuleHandle,<sp/><ref refid="AnaCanScan_8cpp_1ad5698349874e3653b879b5de27311594" kindref="member">InternalCallback</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anaCallReturn<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>CANSetCallbackEx,<sp/>return<sp/>code<sp/>=<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;OK<sp/>CANSetCallbackEx,<sp/>return<sp/>code<sp/>=<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bookkeeping<sp/>in<sp/>maps<sp/>for<sp/>{port,<sp/>ip}<sp/>and<sp/>object<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a3e2635663ebdfac68591d6a0577fa951" kindref="member">addCanHandleOfPortIp</ref>(<sp/>canModuleHandle,<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref><sp/>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>[canModuleHandle]<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>gets<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref><sp/>=<sp/>canModuleHandle;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>some<sp/>hardcore<sp/>debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AnaCanScan::showAnaCanScanObjectMap();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="classAnaCanScan_1a6260e2ac6ce9c181ad5d64551ddeb60c" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a6260e2ac6ce9c181ad5d64551ddeb60c" kindref="member">AnaCanScan::sendAnErrorMessage</ref>(AnaInt32<sp/>status)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>timeval<sp/>ftTimeStamp;<sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nMicrosecs<sp/>=</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(<sp/>now.time_since_epoch());</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftTimeStamp.tv_sec<sp/>=<sp/>nMicrosecs.count()<sp/>/<sp/>1000000L;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftTimeStamp.tv_usec<sp/>=<sp/>(nMicrosecs.count()<sp/>%<sp/>1000000L)<sp/>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a33fbd693f04b4f4e21cee20856c44866" kindref="member">canMessageError</ref>(status,<sp/><ref refid="classAnaCanScan_1a25489463d6a0a1f2f122a0bfc55bb318" kindref="member">errorCodeToString</ref>(<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>status),<sp/>ftTimeStamp);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="classAnaCanScan_1ad45666454318c891d7acd9fe16ae4c49" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad45666454318c891d7acd9fe16ae4c49" kindref="member">AnaCanScan::sendMessage</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>cobID,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rtr)</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>||<sp/><ref refid="classAnaCanScan_1a9777d181ff5f28da363907ecb50ebc90" kindref="member">m_busStopped</ref><sp/>){</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bus<sp/>is<sp/>closed,<sp/>skipping<sp/>[<sp/>closed=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>stopped=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9777d181ff5f28da363907ecb50ebc90" kindref="member">m_busStopped</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>/*<sp/>static<sp/>*/<sp/>std::string<sp/>AnaCanScan::canMessageToString(CanMessage<sp/>&amp;f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MLOGANA(DBG,this)<sp/>&lt;&lt;<sp/>&quot;Sending<sp/>message:<sp/>[&quot;<sp/>&lt;&lt;<sp/>(<sp/>message<sp/>==<sp/>0<sp/><sp/>?<sp/>&quot;&quot;<sp/>:<sp/>(const<sp/>char<sp/>*)<sp/>message)<sp/>&lt;&lt;<sp/>&quot;],<sp/>cobID:<sp/>[&quot;<sp/>&lt;&lt;<sp/>cobID<sp/>&lt;&lt;<sp/>&quot;],<sp/>Message<sp/>Length:<sp/>[&quot;<sp/>&lt;&lt;<sp/>static_cast&lt;int&gt;(len)<sp/>&lt;&lt;<sp/>&quot;]&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>message:<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceCanModule_1a901b4695397276d8bbc0f1ebd0204a8e" kindref="member">CanModule::canMessage2ToString</ref>(cobID,<sp/>len,<sp/>message,<sp/>rtr)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*messageToBeSent[8];</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>flags<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtr)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Bit<sp/>1:<sp/>If<sp/>set,<sp/>the<sp/>telegram<sp/>is<sp/>marked<sp/>as<sp/>remote<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>messageLengthToBeProcessed;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>there<sp/>is<sp/>more<sp/>than<sp/>8<sp/>characters<sp/>to<sp/>process,<sp/>we<sp/>process<sp/>8<sp/>of<sp/>them<sp/>in<sp/>this<sp/>iteration<sp/>of<sp/>the<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>messageLengthToBeProcessed<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>length<sp/>is<sp/>more<sp/>than<sp/>8<sp/>bytes,<sp/>ignoring<sp/>overhead<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>len;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>messageLengthToBeProcessed<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classAnaCanScan_1a74073d663dd44148033b3d6d15428ea9" kindref="member">getReconnectCondition</ref>()<sp/>==<sp/><ref refid="namespaceCanModule_1a2f4fee79cc7ba53467c2538fe6b9adbbaba350cf15e5a1471109f17351afb401a" kindref="member">CanModule::ReconnectAutoCondition::timeoutOnReception</ref><sp/>&amp;&amp;<sp/><ref refid="classCanModule_1_1CCanAccess_1a79c236a0e2b3e3b183b1c85aab3f5b71" kindref="member">hasTimeoutOnReception</ref>())<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_canPortNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>skipping<sp/>send,<sp/>detected<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a9da88ce122d5de04a0235a4682a13dc0" kindref="member">reconnectConditionString</ref>(<ref refid="classCanModule_1_1CCanAccess_1abfd40edc34a777a5ff4503a6e8a239d6" kindref="member">m_reconnectCondition</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//send<sp/>a<sp/>reconnection<sp/>thread<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trigger<sp/>reconnection<sp/>thread<sp/>to<sp/>check<sp/>reception<sp/>timeout<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1ac3f5126ae36d642217425e21696d19ca" kindref="member">getBusName</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a16e43f90cd984b9ea72028c0f8dfe784" kindref="member">triggerReconnectionThread</ref>();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(messageToBeSent,<sp/>message,<sp/>messageLengthToBeProcessed);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_canPortNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cobID=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cobID</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>length<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>messageLengthToBeProcessed</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>flags=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>flags<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_UcanHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANWrite(<ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>,<sp/>cobID,<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(messageToBeSent),<sp/>messageLengthToBeProcessed,<sp/>flags);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anaCallReturn<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>was<sp/>a<sp/>problem<sp/>when<sp/>sending/receiving<sp/>timeout<sp/>with<sp/>CANWrite<sp/>or<sp/>a<sp/>reconnect<sp/>condition:<sp/>0x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a24494114ec0dc237b63fb321ba4d084e" kindref="member">decreaseSendFailedCountdown</ref>();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//send<sp/>a<sp/>reconnection<sp/>thread<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trigger<sp/>reconnection<sp/>thread<sp/>since<sp/>a<sp/>send<sp/>failed<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1ac3f5126ae36d642217425e21696d19ca" kindref="member">getBusName</ref>();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a16e43f90cd984b9ea72028c0f8dfe784" kindref="member">triggerReconnectionThread</ref>();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1a0265b75e9e2e16737950b6b5c5662f35" kindref="member">onTransmit</ref>(messageLengthToBeProcessed);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1afe8d43dfb65ee2675ceac1dc84f7eb1a" kindref="member">setTimeSinceTransmitted</ref>();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a6260e2ac6ce9c181ad5d64551ddeb60c" kindref="member">sendAnErrorMessage</ref>(anaCallReturn);</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="classAnaCanScan_1a9ebdd69b0b5f2e43b152fde44dfbd543" refkind="member"><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a9ebdd69b0b5f2e43b152fde44dfbd543" kindref="member">AnaCanScan::showAnaCanScanObjectMap</ref>(){</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>size<sp/>=<sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>.size();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref><sp/><sp/>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>RECEIVE<sp/>obj.<sp/>map<sp/>size=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;AnaInt32,<sp/>AnaCanScan*&gt;::iterator<sp/>it=<ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>.begin();<sp/>it!=<ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>.end();<sp/>it++){</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>obj.<sp/>map<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>key=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;first</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;ipAdress()</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>CAN<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;canPortNumber()</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;handle()</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ptr=<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<sp/>(it-&gt;second)<sp/>&lt;&lt;<sp/>std::dec;<sp/></highlight><highlight class="comment">//<sp/>naja,<sp/>just<sp/>to<sp/>see<sp/>it<sp/>tis<sp/>!=<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="classAnaCanScan_1aedcf208c8b79a297650bb2790884a79d" refkind="member"><highlight class="normal">AnaInt32<sp/><ref refid="classAnaCanScan_1aedcf208c8b79a297650bb2790884a79d" kindref="member">AnaCanScan::reconnectThisPort</ref>(){</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>sending<sp/>on<sp/>one<sp/>port<sp/>failed<sp/>miserably,<sp/>and<sp/>we<sp/>reset<sp/>just<sp/>that<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn0<sp/>=<sp/><ref refid="classAnaCanScan_1af1deaf420c98dcdc4687f481fd4d9a08" kindref="member">reconnect</ref>();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>anaCallReturn0<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>reconnect<sp/>CAN<sp/>port<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/><sp/>try<sp/>again&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CanModule::ms_sleep(<sp/>5000<sp/>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anaCallReturn0<sp/>=<sp/><ref refid="classAnaCanScan_1af1deaf420c98dcdc4687f481fd4d9a08" kindref="member">reconnect</ref>();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a9ebdd69b0b5f2e43b152fde44dfbd543" kindref="member">showAnaCanScanObjectMap</ref>();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>anaCallReturn0<sp/>=<sp/><ref refid="classAnaCanScan_1a428d6c62f3a2d6b4297898593961696b" kindref="member">connectReceptionHandler</ref>();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>reconnect<sp/>reception<sp/>handler<sp/>for<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>looking<sp/>good=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anaCallReturn0;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>erase<sp/>stale<sp/>map<sp/>entry<sp/>for<sp/>the<sp/>old<sp/>reception<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;AnaInt32,<sp/>AnaCanScan*&gt;<sp/>lmap<sp/>=<sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;AnaInt32,<sp/>AnaCanScan*&gt;::iterator<sp/>it=lmap.begin();<sp/>it!=lmap.end();<sp/>it++){</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it-&gt;first<sp/>!=<sp/>it-&gt;second-&gt;handle()){</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>erasing<sp/>stale<sp/>handler<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;first</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>object<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;handle()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>from<sp/>obj.<sp/>map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>.erase(<sp/>it-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>anaCallReturn0<sp/>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="classAnaCanScan_1a6f8433af30b66333a940c4fbdbb64b5b" refkind="member"><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/>AnaInt32<sp/><ref refid="classAnaCanScan_1a6f8433af30b66333a940c4fbdbb64b5b" kindref="member">AnaCanScan::reconnectAllPorts</ref>(<sp/>std::string<sp/>ip<sp/>){</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>protect<sp/>against<sp/>several<sp/>calls<sp/>on<sp/>the<sp/>same<sp/>ip,<sp/>recursive_mutex<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a01df1cd6ffed5847fe25e00acdb71f46" kindref="member">anagateReconnectMutex</ref>.lock();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classAnaCanScan_1ad07c0156fc64b9741b93c8087271697e" kindref="member">AnaCanScan::isIpReconnectInProgress</ref>(<sp/>ip<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::WRN,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reconnecting<sp/>all<sp/>ports<sp/>for<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>already<sp/>in<sp/>progress,<sp/>skipping.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CanModule::ms_sleep(<sp/>10000<sp/>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a01df1cd6ffed5847fe25e00acdb71f46" kindref="member">anagateReconnectMutex</ref>.unlock();</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a49edbc1e0e48d5d487238bc76fa133b9" kindref="member">AnaCanScan::setIpReconnectInProgress</ref>(<sp/>ip,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reconnecting<sp/>all<sp/>ports<sp/>for<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>now<sp/>in<sp/>progress.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a01df1cd6ffed5847fe25e00acdb71f46" kindref="member">anagateReconnectMutex</ref>.unlock();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>re-open<sp/>the<sp/>can<sp/>port<sp/>and<sp/>get<sp/>a<sp/>new<sp/>handle,<sp/>but<sp/>do<sp/>NOT<sp/>yet<sp/>put<sp/>the<sp/>new<sp/>object<sp/>(this,<sp/>again)<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>global<sp/>map.<sp/>Keep<sp/>the<sp/>reception<sp/>disconnected<sp/>still.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbCANportsOnModule<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reconnectFailed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>the<sp/>old<sp/>handle<sp/>on<sp/>that<sp/>ip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;AnaInt32,<sp/>AnaCanScan*&gt;::iterator<sp/>it=<ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>.begin();<sp/>it!=<ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>.end();<sp/>it++){</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ip<sp/>==<sp/>it-&gt;second-&gt;ipAdress()<sp/>){</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>key=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;first</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>found<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>CAN<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;canPortNumber()</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>reconnecting...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>it-&gt;second-&gt;reconnect();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>){</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::WRN,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>key=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;first</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>found<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>CAN<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;canPortNumber()</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed<sp/>to<sp/>reconnect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reconnectFailed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbCANportsOnModule++;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>CAN<sp/>bridge<sp/>at<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>uses<sp/><sp/>nbCANportsOnModule=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nbCANportsOnModule;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>reconnectFailed<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::WRN,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Problem<sp/>reconnecting<sp/>CAN<sp/>ports<sp/>for<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>last<sp/>ret=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ret<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Just<sp/>abandoning<sp/>and<sp/>trying<sp/>again<sp/>in<sp/>10<sp/>secs,<sp/>module<sp/>might<sp/>not<sp/>be<sp/>ready<sp/>yet.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CanModule::ms_sleep(<sp/>10000<sp/>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a49edbc1e0e48d5d487238bc76fa133b9" kindref="member">AnaCanScan::setIpReconnectInProgress</ref>(<sp/>ip,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reconnecting<sp/>all<sp/>ports<sp/>for<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cancel.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>the<sp/>new<sp/>handler<sp/>with<sp/>the<sp/>obj.<sp/>map<sp/>and<sp/>connect<sp/>the<sp/>reception<sp/>handler.<sp/>Cleanup<sp/>the<sp/>stale<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>a<sp/>local<sp/>copy<sp/>of<sp/>the<sp/>map,<sp/>in<sp/>order<sp/>not<sp/>to<sp/>change<sp/>the<sp/>map<sp/>we<sp/>are<sp/>iterating<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;AnaInt32,<sp/>AnaCanScan*&gt;<sp/>lmap<sp/>=<sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>receive<sp/>handler<sp/>map<sp/>map<sp/>before<sp/>reconnect<sp/>for<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a9ebdd69b0b5f2e43b152fde44dfbd543" kindref="member">AnaCanScan::showAnaCanScanObjectMap</ref>();</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;AnaInt32,<sp/>AnaCanScan*&gt;::iterator<sp/>it=lmap.begin();<sp/>it!=lmap.end();<sp/>it++){</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ip<sp/>==<sp/>it-&gt;second-&gt;ipAdress()<sp/>){</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anaRet<sp/>=<sp/>it-&gt;second-&gt;connectReceptionHandler();</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>anaRet<sp/>!=<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed<sp/>to<sp/>reconnect<sp/>reception<sp/>handler<sp/>for<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;handle()</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;canPortNumber()</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>anaRet=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anaRet;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>reconnect<sp/>reception<sp/>handler<sp/>for<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;handle()</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>looking<sp/>good=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anaRet;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it-&gt;first<sp/>!=<sp/>it-&gt;second-&gt;handle()){</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>erasing<sp/>stale<sp/>handler<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;first</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>object<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;handle()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>from<sp/>obj.<sp/>map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>.erase(<sp/>it-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a49edbc1e0e48d5d487238bc76fa133b9" kindref="member">AnaCanScan::setIpReconnectInProgress</ref>(<sp/>ip,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>done,<sp/>may<sp/>fail<sp/>another<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::INF,<sp/><ref refid="classAnaCanScan_1a39ab4f1c865bef7349992abd4d91da1d" kindref="member">AnaCanScan::st_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reconnecting<sp/>all<sp/>ports<sp/>for<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>done<sp/>and<sp/>OK.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOG(Log::TRC,<sp/>AnaCanScan::st_logItHandleAnagate)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__LINE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>receive<sp/>handler<sp/>map<sp/>after<sp/>reconnect<sp/>for<sp/>ip=<sp/>&quot;<sp/>&lt;&lt;<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a9ebdd69b0b5f2e43b152fde44dfbd543" kindref="member">AnaCanScan::showAnaCanScanObjectMap</ref>();</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>easy<sp/>on<sp/>the<sp/>switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>CanModule::ms_sleep(<sp/>100<sp/>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>anaRet<sp/>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="786" refid="classAnaCanScan_1a428d6c62f3a2d6b4297898593961696b" refkind="member"><highlight class="normal">AnaInt32<sp/><ref refid="classAnaCanScan_1a428d6c62f3a2d6b4297898593961696b" kindref="member">AnaCanScan::connectReceptionHandler</ref>(){</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>needed<sp/>otherwise<sp/>the<sp/>bridge<sp/>hangs<sp/>in<sp/>a<sp/>bad<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANSetGlobals(<ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>,<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref>,<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a6dcce5899a28a07c35042c2005fbac03" kindref="member">m_iOperationMode</ref>,</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ac15d1cfe926f508a2788dab50aed992b" kindref="member">m_iTermination</ref>,<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" kindref="member">m_iHighSpeed</ref>,<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a0f3653eda77900c9d2450793bd285c29" kindref="member">m_iTimeStamp</ref>);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>anaCallReturn<sp/>){</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:{<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x30000:<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>to<sp/>TCP/IP<sp/>partner<sp/>can&apos;t<sp/>be<sp/>established<sp/>or<sp/>is<sp/>disconnected.<sp/>Lost<sp/>TCP/IP:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x40000:<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/><sp/>answer<sp/><sp/>was<sp/><sp/>received<sp/><sp/>from<sp/><sp/><sp/>TCP/IP<sp/>partner<sp/>within<sp/>the<sp/>defined<sp/>timeout.<sp/>Lost<sp/>TCP/IP:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x900000:<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>device<sp/>handle.<sp/>Lost<sp/>TCP/IP:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>default<sp/>:<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Other<sp/>Error<sp/>in<sp/>CANSetGlobals:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connecting<sp/>RECEIVE<sp/>canModuleHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref>;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANSetCallbackEx(<ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>,<sp/><ref refid="AnaCanScan_8cpp_1ad5698349874e3653b879b5de27311594" kindref="member">InternalCallback</ref>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anaCallReturn<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>CANSetCallbackEx,<sp/>return<sp/>code<sp/>=<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>canModuleHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>a<sp/>reconnect!<sp/>Can&apos;t<sp/>fix<sp/>this,<sp/>maybe<sp/>hardware/firmware<sp/>problem.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>is<sp/>very<sp/>schlecht,<sp/>need<sp/>a<sp/>good<sp/>idea<sp/>(~check<sp/>keepalive<sp/>and<sp/>sending<sp/>fake<sp/>messages)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>detect<sp/>and<sp/>possibly<sp/>recuperate<sp/>from<sp/>that.<sp/>Does<sp/>this<sp/>case<sp/>happen<sp/>actually?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;adding<sp/>RECEIVE<sp/>handler,<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>CAN<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>obj.map.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>[<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref><sp/>]<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setCanHandleInUse(<sp/>m_UcanHandle,<sp/>true<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;RECEIVE<sp/>handler<sp/>looks<sp/>good,<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>CAN<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Congratulations.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>anaCallReturn<sp/>);</highlight></codeline>
<codeline lineno="832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="837" refid="classAnaCanScan_1ae7ab2706bb4cd5e02409db38e73dbb3e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ae7ab2706bb4cd5e02409db38e73dbb3e" kindref="member">AnaCanScan::eraseReceptionHandlerFromMap</ref>(<sp/>AnaInt32<sp/>h<sp/>){</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;AnaInt32,<sp/>AnaCanScan<sp/>*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>.find(<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a348494361939b368693ef24a71f3d9bc" kindref="member">g_AnaCanScanObjectMap</ref>.erase<sp/>(<sp/>it<sp/>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a86b2f6e716cbe52a850ec75c1736b7af" kindref="member">m_busName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nobus&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>handler<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>h<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found<sp/>in<sp/>map,<sp/>not<sp/>erased&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="856" refid="classAnaCanScan_1af1deaf420c98dcdc4687f481fd4d9a08" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1af1deaf420c98dcdc4687f481fd4d9a08" kindref="member">AnaCanScan::reconnect</ref>(){</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>canModuleHandle;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>not<sp/>too<sp/>fast.<sp/>sleep<sp/>to<sp/>wait<sp/>for<sp/>network<sp/>and<sp/>don&apos;t<sp/>hammer<sp/>the<sp/>switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>CanModule::ms_sleep(<sp/>100<sp/>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;try<sp/>to<sp/>reconnect<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_canPortNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_UcanHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state<sp/>=<sp/>5;<sp/></highlight><highlight class="comment">//<sp/>re-open<sp/>completely<sp/>unless<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref><sp/>&gt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>todo:<sp/>we<sp/>should<sp/>probably<sp/>drop<sp/>this,<sp/>if<sp/>the<sp/>handle<sp/>isn&apos;t<sp/>valid<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>CANDeviceConnectState(<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref><sp/>);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CANDeviceConnectState:<sp/>device<sp/>connect<sp/>state=<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>state<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>state<sp/>){</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(INF,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>is<sp/>in<sp/>state<sp/>CONNECTING,<sp/>don&apos;t<sp/>try<sp/>to<sp/>reconnect<sp/>for<sp/>now,<sp/>skip.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(INF,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>is<sp/>in<sp/>state<sp/>CONNECTED,<sp/>don&apos;t<sp/>try<sp/>to<sp/>reconnect,<sp/>just<sp/>skip.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANCloseDevice(<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref><sp/>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;closed<sp/>device<sp/>m_UcanHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>anaCallReturn=<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>anaCallReturn<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>close<sp/>device<sp/>m_UcanHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>anaCallReturn=<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return(-3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>is<sp/>closed.<sp/>stale<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>is<sp/>already<sp/>closed,<sp/>try<sp/>reopen.<sp/>stale<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setCanHandleInUse(<sp/>m_UcanHandle,<sp/>false<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a1b62497ac5f0edcf9895c9f8cfad6b50" kindref="member">deleteCanHandleOfPortIp</ref>(<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref><sp/>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;try<sp/>CANOpenDevice<sp/>m_canPortNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_UcanHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>timeout=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref>;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANOpenDevice(&amp;canModuleHandle,<sp/>FALSE,<sp/>TRUE,<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref>.c_str(),<sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref>);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anaCallReturn<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CANOpenDevice<sp/>failed:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CANOpenDevice<sp/>m_canPortNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>canModuleHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>canModuleHandle</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>timeout=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>reconnect<sp/>for<sp/>SEND<sp/>looks<sp/>good&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a3e2635663ebdfac68591d6a0577fa951" kindref="member">addCanHandleOfPortIp</ref>(<sp/>canModuleHandle,<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref><sp/>);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref><sp/>=<sp/>canModuleHandle;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>object<sp/>in<sp/>object<sp/>map<sp/>stays<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>CanModule::ms_sleep(<sp/>100<sp/>);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>0<sp/>);<sp/></highlight><highlight class="comment">//<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AnaCanScan::setTimeoutAndReconnect(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout_ms<sp/>){</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref><sp/>=<sp/>timeout_ms;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reconnect<sp/>CANOpenDevice<sp/>m_UcanHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>apply<sp/>new<sp/>timeout=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref>;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1af1deaf420c98dcdc4687f481fd4d9a08" kindref="member">reconnect</ref>();</highlight></codeline>
<codeline lineno="961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964" refid="classAnaCanScan_1a75c1a41d3e8ed31b39e2813596358472" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad45666454318c891d7acd9fe16ae4c49" kindref="member">AnaCanScan::sendMessage</ref>(<ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref><sp/>*canm)</highlight></codeline>
<codeline lineno="965"><highlight class="normal">{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad45666454318c891d7acd9fe16ae4c49" kindref="member">sendMessage</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">(canm-&gt;<ref refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" kindref="member">c_id</ref>),<sp/>canm-&gt;<ref refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" kindref="member">c_dlc</ref>,<sp/>canm-&gt;<ref refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" kindref="member">c_data</ref>,<sp/>canm-&gt;<ref refid="structCanMsgStruct_1ad4a78c27262604bacb5720d8633f71c6" kindref="member">c_rtr</ref>);</highlight></codeline>
<codeline lineno="967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="976" refid="classAnaCanScan_1a345abb2f9712275425f4af8eb98cbd38" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a345abb2f9712275425f4af8eb98cbd38" kindref="member">AnaCanScan::sendRemoteRequest</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>cobID)</highlight></codeline>
<codeline lineno="977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>flags<sp/>=<sp/>2;</highlight><highlight class="comment">//<sp/>Bit<sp/>1:<sp/>If<sp/>set,<sp/>the<sp/>telegram<sp/>is<sp/>marked<sp/>as<sp/>remote<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANWrite(<ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>,cobID,NULL,<sp/>0,<sp/>flags);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anaCallReturn<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>was<sp/>a<sp/>problem<sp/>when<sp/>sending<sp/>a<sp/>message<sp/>with<sp/>CANWrite&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a6260e2ac6ce9c181ad5d64551ddeb60c" kindref="member">sendAnErrorMessage</ref>(anaCallReturn);</highlight></codeline>
<codeline lineno="986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="991" refid="classAnaCanScan_1a1425dfc20e08b545fcdf49415ac15ec9" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classAnaCanScan_1a1425dfc20e08b545fcdf49415ac15ec9" kindref="member">AnaCanScan::ana_canGetErrorText</ref>(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>errorCode<sp/>){</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>errorCode<sp/>){</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1a169f583b604142f9d6e4f5cc1e4e9286" kindref="member">ANA_ERR_NONE</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;No<sp/>errors&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1a4f8ee8ffc931878849207758b7813926" kindref="member">ANA_ERR_OPEN_MAX_CONN</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Open<sp/>failed,<sp/>maximal<sp/>count<sp/>of<sp/>connections<sp/>reached.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1a17a2c2f1ecd1e1481e22187572c18759" kindref="member">ANA_ERR_OP_CMD_FAILED</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Command<sp/>failed<sp/>with<sp/>unknown<sp/>failure&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1ac951ac640bd2b20722713084328237c3" kindref="member">ANA_ERR_TCPIP_SOCKET</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Socket<sp/>error<sp/>in<sp/>TCP/IP<sp/>layer<sp/>occured.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1a23da76160443e929fa8911ed2d9ef3bb" kindref="member">ANA_ERR_TCPIP_NOTCONNECTED</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Connection<sp/>to<sp/>TCP/IP<sp/>partner<sp/>can&apos;t\</highlight></codeline>
<codeline lineno="998"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>established<sp/>or<sp/>is<sp/>disconnected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1ae40705d8030c3ee9b93ff527fe11073b" kindref="member">ANA_ERR_TCPIP_TIMEOUT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;No<sp/>answer<sp/>received<sp/>from<sp/>TCP/IP\</highlight></codeline>
<codeline lineno="1000"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner<sp/>within<sp/>the<sp/>defined<sp/>timeout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1a7d5e69babd54067b45501eda4efc9390" kindref="member">ANA_ERR_TCPIP_CALLNOTALLOWED</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Command<sp/>is<sp/>not<sp/>allowed<sp/>at<sp/>this<sp/>time.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1aa06eef719eb85aa898897648f08a61b9" kindref="member">ANA_ERR_TCPIP_NOT_INITIALIZED</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;TCP/IP-Stack<sp/>can&apos;t<sp/>be<sp/>initialized.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1aba7658e2a5aec7e2f80ca25fee2ad7b1" kindref="member">ANA_ERR_INVALID_CRC</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;AnaGate<sp/>TCP/IP<sp/>telegram<sp/>has<sp/>incorrect<sp/>checksum<sp/>(CRC).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1a00e4a9cd6cfba31f000725cd00f1dd06" kindref="member">ANA_ERR_INVALID_CONF</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;AnaGate<sp/>TCP/IP<sp/>telegram<sp/>wasn&apos;t\</highlight></codeline>
<codeline lineno="1005"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>receipted<sp/>from<sp/>partner.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1ad7dec8c2074332257b8a4c98da4343dc" kindref="member">ANA_ERR_INVALID_CONF_DATA</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;AnaGate<sp/>TCP/IP<sp/>telegram<sp/>wasn&apos;t\</highlight></codeline>
<codeline lineno="1007"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>receipted<sp/>correct<sp/>from<sp/>partner.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1a1391fc1950bcd065037340fb9729c9dc" kindref="member">ANA_ERR_INVALID_DEVICE_HANDLE</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>device<sp/>handle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="AnaGateErrors_8h_1ad451bf259cba9b9823846a7d55ba4b55" kindref="member">ANA_ERR_INVALID_DEVICE_TYPE</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Function<sp/>can&apos;t<sp/>be<sp/>executed<sp/>on<sp/>this\</highlight></codeline>
<codeline lineno="1010"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device<sp/>handle,<sp/>as<sp/>she<sp/>is<sp/>assigned\</highlight></codeline>
<codeline lineno="1011"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>another<sp/>device<sp/>type<sp/>of<sp/>AnaGate<sp/>series.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;unknown<sp/>error<sp/>code&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018" refid="classAnaCanScan_1ad4576bc409a954c888a6fd7f06ca697f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad4576bc409a954c888a6fd7f06ca697f" kindref="member">AnaCanScan::getStatistics</ref>(<sp/><ref refid="classCanModule_1_1CanStatistics" kindref="compound">CanStatistics</ref><sp/>&amp;<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1a8ec66bd11141579779f143362b70640e" kindref="member">computeDerived</ref><sp/>(<ref refid="classAnaCanScan_1ae2d7c7a9b314adffbde6eafac5a3607e" kindref="member">m_baudRate</ref>);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>whole<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1a85e6c87ce5285884a0272088178bb8f6" kindref="member">beginNewRun</ref>();</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038" refid="classAnaCanScan_1ae5b4e8c387c5f92576d0b3869fece47a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ae5b4e8c387c5f92576d0b3869fece47a" kindref="member">AnaCanScan::CanReconnectionThread</ref>()</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>_tid;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::this_thread::get_id();</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_tid<sp/>=<sp/>ss.str();</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;created<sp/>reconnection<sp/>thread<sp/>tid=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_tid;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>some<sp/>sync<sp/>to<sp/>the<sp/>main<sp/>thread<sp/>to<sp/>be<sp/>sure<sp/>it<sp/>is<sp/>up<sp/>and<sp/>the<sp/>sock<sp/>is<sp/>created:<sp/>wait<sp/>first<sp/>time<sp/>for<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1ad8afab7f9acc769c53574edec695065b" kindref="member">waitForReconnectionThreadTrigger</ref>();</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;initialized<sp/>reconnection<sp/>thread<sp/>tid=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_tid<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>entering<sp/>loop&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>sync:<sp/>need<sp/>a<sp/>condition<sp/>sync<sp/>to<sp/>step<sp/>that<sp/>thread<sp/>once:<sp/>a<sp/>&quot;trigger&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;waiting<sp/>reconnection<sp/>thread<sp/>tid=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_tid;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1ad8afab7f9acc769c53574edec695065b" kindref="member">waitForReconnectionThreadTrigger</ref>();</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>reconnection<sp/>thread<sp/>tid=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_tid</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>condition<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a9da88ce122d5de04a0235a4682a13dc0" kindref="member">reconnectConditionString</ref>(<ref refid="classAnaCanScan_1a74073d663dd44148033b3d6d15428ea9" kindref="member">getReconnectCondition</ref>()<sp/>)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>action<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1aa12f64e9e31bd491f39fc3169b1e5025" kindref="member">reconnectActionString</ref>(<ref refid="classAnaCanScan_1a6ad398dd6aec952c19165899abd48b8a" kindref="member">getReconnectAction</ref>())</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>checked,<sp/>m_failedSendCountdown=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a6f97774773e3e4457f38a7b612d991f0" kindref="member">m_failedSendCountdown</ref>;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classAnaCanScan_1a74073d663dd44148033b3d6d15428ea9" kindref="member">getReconnectCondition</ref>()<sp/>){</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>timeout<sp/>is<sp/>already<sp/>checked<sp/>before<sp/>the<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceCanModule_1a2f4fee79cc7ba53467c2538fe6b9adbbaba350cf15e5a1471109f17351afb401a" kindref="member">CanModule::ReconnectAutoCondition::timeoutOnReception</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1aad13b5ad34547cbe6cad4e8369557bed" kindref="member">resetSendFailedCountdown</ref>();<sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceCanModule_1a2f4fee79cc7ba53467c2538fe6b9adbbae323a25a871808f9a0df9a72ce954585" kindref="member">CanModule::ReconnectAutoCondition::sendFail</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a067f50699c1ed4b6ee6732eb0078ed0a" kindref="member">resetTimeoutOnReception</ref>();</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCanModule_1_1CCanAccess_1a6f97774773e3e4457f38a7b612d991f0" kindref="member">m_failedSendCountdown</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight><highlight class="comment">//<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1aad13b5ad34547cbe6cad4e8369557bed" kindref="member">resetSendFailedCountdown</ref>();<sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>nothing<sp/>but<sp/>keep<sp/>counter<sp/>and<sp/>timeout<sp/>resetted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceCanModule_1a2f4fee79cc7ba53467c2538fe6b9adbbac7561db7a418dd39b2201dfe110ab4a4" kindref="member">CanModule::ReconnectAutoCondition::never</ref>:</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1aad13b5ad34547cbe6cad4e8369557bed" kindref="member">resetSendFailedCountdown</ref>();</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a067f50699c1ed4b6ee6732eb0078ed0a" kindref="member">resetTimeoutOnReception</ref>();</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight><highlight class="comment">//<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>single<sp/>bus<sp/>reset<sp/>if<sp/>(send)<sp/>countdown<sp/>or<sp/>the<sp/>(receive)<sp/>timeout<sp/>says<sp/>so.<sp/>reception<sp/>timeout<sp/>is<sp/>already<sp/>checked<sp/>for<sp/>anagate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>lots<sp/>of<sp/>useless<sp/>triggers<sp/>at<sp/>each<sp/>send<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classAnaCanScan_1a6ad398dd6aec952c19165899abd48b8a" kindref="member">getReconnectAction</ref>()<sp/>){</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceCanModule_1a2062089fa4fa87c8354295f2a8fe31a5a5f768fefafa6db21eee26885afb6163d" kindref="member">CanModule::ReconnectAction::singleBus</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(INF,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>reconnect<sp/>condition<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a9da88ce122d5de04a0235a4682a13dc0" kindref="member">reconnectConditionString</ref>(<ref refid="classCanModule_1_1CCanAccess_1abfd40edc34a777a5ff4503a6e8a239d6" kindref="member">m_reconnectCondition</ref>)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>triggered<sp/>action<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1aa12f64e9e31bd491f39fc3169b1e5025" kindref="member">reconnectActionString</ref>(<ref refid="classCanModule_1_1CCanAccess_1a6baf24c56eb715adf55a569d08b12c25" kindref="member">m_reconnectAction</ref>);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnaInt32<sp/>ret<sp/>=<sp/><ref refid="classAnaCanScan_1aedcf208c8b79a297650bb2790884a79d" kindref="member">reconnectThisPort</ref>();</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(INF,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reconnected<sp/>one<sp/>CAN<sp/>port<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a9de78cb4cdba4a4dca1910d752b4ff65" kindref="member">m_canIPAddress</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ret=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ret;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a9ebdd69b0b5f2e43b152fde44dfbd543" kindref="member">showAnaCanScanObjectMap</ref>();</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceCanModule_1a2062089fa4fa87c8354295f2a8fe31a5a319ee2c9d887d55f6bc1941518a5ae76" kindref="member">CanModule::ReconnectAction::allBusesOnBridge</ref>:<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ip<sp/>=<sp/><ref refid="classAnaCanScan_1a8816262d658e19111e10b05cceb2e4f9" kindref="member">ipAdress</ref>();</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(INF,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>reconnect<sp/>condition<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1a9da88ce122d5de04a0235a4682a13dc0" kindref="member">reconnectConditionString</ref>(<ref refid="classCanModule_1_1CCanAccess_1abfd40edc34a777a5ff4503a6e8a239d6" kindref="member">m_reconnectCondition</ref>)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>triggered<sp/>action<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1aa12f64e9e31bd491f39fc3169b1e5025" kindref="member">reconnectActionString</ref>(<ref refid="classCanModule_1_1CCanAccess_1a6baf24c56eb715adf55a569d08b12c25" kindref="member">m_reconnectAction</ref>);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a6f8433af30b66333a940c4fbdbb64b5b" kindref="member">AnaCanScan::reconnectAllPorts</ref>(<sp/>ip<sp/>);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>reconnect<sp/>all<sp/>ports<sp/>of<sp/>ip=<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip<sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classCanModule_1_1CCanAccess_1ac3f5126ae36d642217425e21696d19ca" kindref="member">getBusName</ref>();</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>a<sp/>runtime<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reconnection<sp/>action<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(int)<sp/><ref refid="classCanModule_1_1CCanAccess_1a6baf24c56eb715adf55a569d08b12c25" kindref="member">m_reconnectAction</ref><sp/>&lt;&lt;<sp/><ref refid="classCanModule_1_1CCanAccess_1aa12f64e9e31bd491f39fc3169b1e5025" kindref="member">reconnectActionString</ref>(<sp/><ref refid="classCanModule_1_1CCanAccess_1a6baf24c56eb715adf55a569d08b12c25" kindref="member">m_reconnectAction</ref><sp/>)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>unknown.<sp/>Check<sp/>your<sp/>config<sp/>&amp;<sp/>see<sp/>documentation.<sp/>No<sp/>action.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="CanInterfaceImplementations/anagate/AnaCanScan.cpp"/>
  </compounddef>
</doxygen>
