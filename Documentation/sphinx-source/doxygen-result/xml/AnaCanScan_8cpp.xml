<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="AnaCanScan_8cpp" kind="file">
    <compoundname>AnaCanScan.cpp</compoundname>
    <includes refid="AnaCanScan_8h" local="yes">AnaCanScan.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">map</includes>
    <includes local="no">LogIt.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iostream</includes>
    <includes refid="CanModuleUtils_8h" local="yes">CanModuleUtils.h</includes>
    <includes local="no">sys/time.h</includes>
    <incdepgraph>
      <node id="183">
        <label>stdatomic.h</label>
      </node>
      <node id="191">
        <label>LogIt.h</label>
      </node>
      <node id="192">
        <label>AnaGateDLL.h</label>
      </node>
      <node id="189">
        <label>boost/signals2.hpp</label>
      </node>
      <node id="182">
        <label>CanStatistics.h</label>
        <link refid="CanStatistics_8h"/>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="200">
        <label>stdexcept</label>
      </node>
      <node id="180">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="181">
        <label>string</label>
      </node>
      <node id="196">
        <label>map</label>
      </node>
      <node id="178">
        <label>CanInterfaceImplementations/anagate/AnaCanScan.cpp</label>
        <link refid="AnaCanScan.cpp"/>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
      </node>
      <node id="187">
        <label>CCanAccess.h</label>
        <link refid="CCanAccess_8h"/>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
      </node>
      <node id="190">
        <label>CanMessage.h</label>
        <link refid="CanMessage_8h"/>
        <childnode refid="184" relation="include">
        </childnode>
      </node>
      <node id="195">
        <label>string.h</label>
      </node>
      <node id="197">
        <label>sstream</label>
      </node>
      <node id="199">
        <label>CanModuleUtils.h</label>
        <link refid="CanModuleUtils_8h"/>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>AnaGateDllCan.h</label>
      </node>
      <node id="194">
        <label>time.h</label>
      </node>
      <node id="184">
        <label>sys/time.h</label>
      </node>
      <node id="198">
        <label>iostream</label>
      </node>
      <node id="188">
        <label>boost/bind.hpp</label>
      </node>
      <node id="186">
        <label>chrono</label>
      </node>
      <node id="179">
        <label>AnaCanScan.h</label>
        <link refid="AnaCanScan_8h"/>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>ExportDefinition.h</label>
        <link refid="ExportDefinition_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="AnaCanScan_8cpp_1a07e042970e18b919d409eb09524d625c" prot="public" static="no">
        <name>DLLEXPORTFLAG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Â© Copyright CERN, 2015. All rights not expressly granted are reserved.</para><para><ref refid="AnaCanScan_8cpp" kindref="compound">AnaCanScan.cpp</ref></para><para>Created on: Mar 17, 2015 Author: pnikiel, vfilimon, quasar team mludwig at cern dot ch</para><para>This file is part of Quasar.</para><para>Quasar is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public Licence as published by the Free Software Foundation, either version 3 of the Licence.</para><para>Quasar is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public Licence for more details.</para><para>You should have received a copy of the GNU Lesser General Public License along with Quasar. If not, see <ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink>.</para><para>Here the Anagate ethernet-CAN bridges are implemented </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="46" column="9" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AnaCanScan_8cpp_1a9aa60e1ead64be77ad551e745cbfd4d3" prot="public" static="no">
        <name>WINAPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="47" column="9" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" prot="public" static="no">
        <name>MLOGANA</name>
        <param><defname>LEVEL</defname></param>
        <param><defname>THIS</defname></param>
        <initializer>LOG(Log::LEVEL, <ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref>) &lt;&lt; __FUNCTION__ &lt;&lt; &quot; &quot; &lt;&lt; &quot; bus= &quot; &lt;&lt; THIS-&gt;getBusName() &lt;&lt; &quot; &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="62" column="9" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="62" bodyend="-1"/>
        <referencedby refid="classAnaCanScan_1ad917f9cda15bbf9dd9abe6417be5a5eb" compoundref="AnaCanScan_8cpp" startline="203" endline="251">AnaCanScan::configureCanBoard</referencedby>
        <referencedby refid="classAnaCanScan_1a428d6c62f3a2d6b4297898593961696b" compoundref="AnaCanScan_8cpp" startline="501" endline="519">AnaCanScan::connectReceptionHandler</referencedby>
        <referencedby refid="classAnaCanScan_1a54a66154c956b4605ff18f93f552db60" compoundref="AnaCanScan_8cpp" startline="165" endline="197">AnaCanScan::createBus</referencedby>
        <referencedby refid="classAnaCanScan_1ad94121f1933d50cafa52d625ee435f6c" compoundref="AnaCanScan_8cpp" startline="263" endline="323">AnaCanScan::openCanPort</referencedby>
        <referencedby refid="classAnaCanScan_1af1deaf420c98dcdc4687f481fd4d9a08" compoundref="AnaCanScan_8cpp" startline="530" endline="613">AnaCanScan::reconnect</referencedby>
        <referencedby refid="classAnaCanScan_1ad45666454318c891d7acd9fe16ae4c49" compoundref="AnaCanScan_8cpp" startline="354" endline="401">AnaCanScan::sendMessage</referencedby>
        <referencedby refid="classAnaCanScan_1a345abb2f9712275425f4af8eb98cbd38" compoundref="AnaCanScan_8cpp" startline="651" endline="661">AnaCanScan::sendRemoteRequest</referencedby>
        <referencedby refid="classAnaCanScan_1a7cbad1b8b5c44282c86bfcfda5464b8f" compoundref="AnaCanScan_8cpp" startline="620" endline="624">AnaCanScan::setConnectWaitTime</referencedby>
        <referencedby refid="classAnaCanScan_1ae7e853ff202001b094162a637f711103" compoundref="AnaCanScan_8cpp" startline="630" endline="637">AnaCanScan::startAlive</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" prot="public" static="no" mutable="no">
        <type>std::map&lt; AnaInt32, <ref refid="classAnaCanScan" kindref="compound">AnaCanScan</ref> * &gt;</type>
        <definition>std::map&lt;AnaInt32, AnaCanScan*&gt; g_AnaCanScanPointerMap</definition>
        <argsstring></argsstring>
        <name>g_AnaCanScanPointerMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>global map of connection-object-pointers: the map-key is the handle. Since handles are allocated by the OS the keys are getting changed as well, so that we do not keep the stale keys(=handles) in the map at all. This makes the InternalCallback code straightforward and speedy, because we can get to the object by just looking up the map using the key(=the handle). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="69" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="69" bodyend="-1"/>
        <referencedby refid="classAnaCanScan_1a428d6c62f3a2d6b4297898593961696b" compoundref="AnaCanScan_8cpp" startline="501" endline="519">AnaCanScan::connectReceptionHandler</referencedby>
        <referencedby refid="AnaCanScan_8cpp_1ad5698349874e3653b879b5de27311594" compoundref="AnaCanScan_8cpp" startline="108" endline="124">InternalCallback</referencedby>
        <referencedby refid="classAnaCanScan_1a0520647a69824883cb2a05be4735bb25" compoundref="AnaCanScan_8cpp" startline="403" endline="415">AnaCanScan::objectMapSize</referencedby>
        <referencedby refid="classAnaCanScan_1ad94121f1933d50cafa52d625ee435f6c" compoundref="AnaCanScan_8cpp" startline="263" endline="323">AnaCanScan::openCanPort</referencedby>
        <referencedby refid="classAnaCanScan_1abf8809be00bdc2f39344ec72cf66514c" compoundref="AnaCanScan_8cpp" startline="426" endline="494">AnaCanScan::reconnectAllPorts</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="AnaCanScan_8cpp_1ae930092b65c48c86b99b5da2178b4692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="MockCanAccess_8cpp_1a07e042970e18b919d409eb09524d625c" kindref="member">DLLEXPORTFLAG</ref> <ref refid="classCanModule_1_1CCanAccess" kindref="compound">CCanAccess</ref> *</type>
        <definition>DLLEXPORTFLAG CCanAccess* getCanBusAccess</definition>
        <argsstring>()</argsstring>
        <name>getCanBusAccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates and returns anagate can access object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="98" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="AnaCanScan_8cpp_1ad5698349874e3653b879b5de27311594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void <ref refid="STCanScan_8cpp_1a9aa60e1ead64be77ad551e745cbfd4d3" kindref="member">WINAPI</ref></type>
        <definition>void WINAPI InternalCallback</definition>
        <argsstring>(AnaUInt32 nIdentifier, const char *pcBuffer, AnaInt32 nBufferLen, AnaInt32 nFlags, AnaInt32 hHandle, AnaInt32 nSeconds, AnaInt32 nMicroseconds)</argsstring>
        <name>InternalCallback</name>
        <param>
          <type>AnaUInt32</type>
          <declname>nIdentifier</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcBuffer</declname>
        </param>
        <param>
          <type>AnaInt32</type>
          <declname>nBufferLen</declname>
        </param>
        <param>
          <type>AnaInt32</type>
          <declname>nFlags</declname>
        </param>
        <param>
          <type>AnaInt32</type>
          <declname>hHandle</declname>
        </param>
        <param>
          <type>AnaInt32</type>
          <declname>nSeconds</declname>
        </param>
        <param>
          <type>AnaInt32</type>
          <declname>nMicroseconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>call back to catch incoming CAN messages for reading </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp" line="108" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp" bodystart="108" bodyend="124"/>
        <references refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" compoundref="CanMessage_8h" startline="29">CanMsgStruct::c_data</references>
        <references refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" compoundref="CanMessage_8h" startline="27">CanMsgStruct::c_dlc</references>
        <references refid="structCanMsgStruct_1acf3abc93beb936e5f9431ef6ec4568f3" compoundref="CanMessage_8h" startline="25">CanMsgStruct::c_ff</references>
        <references refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" compoundref="CanMessage_8h" startline="23">CanMsgStruct::c_id</references>
        <references refid="structCanMsgStruct_1a06b9b3e9423f35edfb96df7b04828bba" compoundref="CanMessage_8h" startline="31">CanMsgStruct::c_time</references>
        <references refid="namespaceCanModule_1a3ec3082d7d11a9c1641023cb3f53cbe5" compoundref="CanModuleUtils_8cpp" startline="44" endline="51">CanModule::convertTimepointToTimeval</references>
        <references refid="namespaceCanModule_1a6d0711aac0a75de5d2bf6142997a814d" compoundref="CanModuleUtils_8cpp" startline="60" endline="74">CanModule::currentTimeTimeval</references>
        <references refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" compoundref="AnaCanScan_8cpp" startline="69">g_AnaCanScanPointerMap</references>
        <referencedby refid="classAnaCanScan_1a428d6c62f3a2d6b4297898593961696b" compoundref="AnaCanScan_8cpp" startline="501" endline="519">AnaCanScan::connectReceptionHandler</referencedby>
        <referencedby refid="classAnaCanScan_1ad94121f1933d50cafa52d625ee435f6c" compoundref="AnaCanScan_8cpp" startline="263" endline="323">AnaCanScan::openCanPort</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="27"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AnaCanScan_8h" kindref="compound">AnaCanScan.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;LogIt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="CanModuleUtils_8h" kindref="compound">CanModuleUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DLLEXPORTFLAG<sp/>__declspec(dllexport)</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="AnaCanScan_8cpp_1a07e042970e18b919d409eb09524d625c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DLLEXPORTFLAG<sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="AnaCanScan_8cpp_1a9aa60e1ead64be77ad551e745cbfd4d3" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WINAPI<sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">CanModule;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ae6bbb022098dd31116eeb9b329b2f5a7" kindref="member">AnaCanScan::s_isCanHandleInUseArray</ref>[256];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/>AnaInt32<sp/><ref refid="classAnaCanScan_1aecbde195deb737a879029b2e56f634a8" kindref="member">AnaCanScan::s_canHandleArray</ref>[256];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a1fdd323773204ab7cab0badaba2d4120" kindref="member">AnaCanScan::s_logItRegisteredAnagate</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/>Log::LogComponentHandle<sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLOGANA(LEVEL,THIS)<sp/>LOG(Log::LEVEL,<sp/>AnaCanScan::s_logItHandleAnagate)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>&quot;<sp/>bus=<sp/>&quot;<sp/>&lt;&lt;<sp/>THIS-&gt;getBusName()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="69" refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" refkind="member"><highlight class="normal">std::map&lt;AnaInt32,<sp/>AnaCanScan*&gt;<sp/><ref refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" kindref="member">g_AnaCanScanPointerMap</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classAnaCanScan_1af6c27ae08034c5da64a54de29e2e875e" refkind="member"><highlight class="normal"><ref refid="classAnaCanScan_1af6c27ae08034c5da64a54de29e2e875e" kindref="member">AnaCanScan::AnaCanScan</ref>():</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_canPortNumber(0),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_canIPAddress(<sp/>(char<sp/>*)<sp/>string(</highlight><highlight class="stringliteral">&quot;192.168.1.2&quot;</highlight><highlight class="normal">).c_str()),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_baudRate(0),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_idCanScanThread(0),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_canCloseDevice(false),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_busName(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_busParameters(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_UcanHandle(0),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_timeout<sp/>(<sp/>6000<sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1a85e6c87ce5285884a0272088178bb8f6" kindref="member">beginNewRun</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classAnaCanScan_1a2c8256b5096aa1351fbd9f3f2f717180" refkind="member"><highlight class="normal"><ref refid="classAnaCanScan_1a2c8256b5096aa1351fbd9f3f2f717180" kindref="member">AnaCanScan::~AnaCanScan</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Closing<sp/>down<sp/>Anagate<sp/>Can<sp/>Scan<sp/>component&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Shut<sp/>down<sp/>can<sp/>scan<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>CANSetCallback(<ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>CANCloseDevice(<ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Anagate<sp/>Can<sp/>Scan<sp/>component<sp/>closed<sp/>successfully&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="AnaCanScan_8cpp_1ae930092b65c48c86b99b5da2178b4692" refkind="member"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/><ref refid="AnaCanScan_8cpp_1a07e042970e18b919d409eb09524d625c" kindref="member">DLLEXPORTFLAG</ref><sp/><ref refid="classCanModule_1_1CCanAccess" kindref="compound">CCanAccess</ref><sp/>*<ref refid="AnaCanScan_8cpp_1ae930092b65c48c86b99b5da2178b4692" kindref="member">getCanBusAccess</ref>()</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess" kindref="compound">CCanAccess</ref><sp/>*canAccess<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan" kindref="compound">AnaCanScan</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>canAccess;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="AnaCanScan_8cpp_1ad5698349874e3653b879b5de27311594" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AnaCanScan_8cpp_1a9aa60e1ead64be77ad551e745cbfd4d3" kindref="member">WINAPI</ref><sp/><ref refid="AnaCanScan_8cpp_1ad5698349874e3653b879b5de27311594" kindref="member">InternalCallback</ref>(AnaUInt32<sp/>nIdentifier,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>pcBuffer,<sp/>AnaInt32<sp/>nBufferLen,<sp/>AnaInt32<sp/>nFlags,<sp/>AnaInt32<sp/>hHandle,<sp/>AnaInt32<sp/>nSeconds,<sp/>AnaInt32<sp/>nMicroseconds)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref><sp/>canMsgCopy;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nFlags<sp/>==<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>canMsgCopy.<ref refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" kindref="member">c_id</ref><sp/>=<sp/>nIdentifier;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>canMsgCopy.<ref refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" kindref="member">c_dlc</ref><sp/>=<sp/>nBufferLen;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>canMsgCopy.<ref refid="structCanMsgStruct_1acf3abc93beb936e5f9431ef6ec4568f3" kindref="member">c_ff</ref><sp/>=<sp/>nFlags;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nBufferLen;<sp/>i++)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canMsgCopy.<ref refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" kindref="member">c_data</ref>[i]<sp/>=<sp/>pcBuffer[i];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>canMsgCopy.c_time.tv_sec<sp/>=<sp/>nSeconds;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>canMsgCopy.c_time.tv_usec<sp/>=<sp/>nMicroseconds;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>canMsgCopy.<ref refid="structCanMsgStruct_1a06b9b3e9423f35edfb96df7b04828bba" kindref="member">c_time</ref><sp/>=<sp/><ref refid="namespaceCanModule_1a3ec3082d7d11a9c1641023cb3f53cbe5" kindref="member">convertTimepointToTimeval</ref>(<ref refid="namespaceCanModule_1a6d0711aac0a75de5d2bf6142997a814d" kindref="member">currentTimeTimeval</ref>());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" kindref="member">g_AnaCanScanPointerMap</ref>[hHandle]-&gt;callbackOnRecieve(canMsgCopy);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" kindref="member">g_AnaCanScanPointerMap</ref>[hHandle]-&gt;statisticsOnRecieve(<sp/>nBufferLen<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classAnaCanScan_1a7ba68ea800d7a6837b6bc808d473323d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a7ba68ea800d7a6837b6bc808d473323d" kindref="member">AnaCanScan::statisticsOnRecieve</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1a82b38a2383bc0ad6b1d306e86b9ef5c6" kindref="member">onReceive</ref>(<sp/>bytes<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classAnaCanScan_1af9a44b6ac914643225e2e61ca7a52f4c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1af9a44b6ac914643225e2e61ca7a52f4c" kindref="member">AnaCanScan::callbackOnRecieve</ref>(<ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" kindref="member">canMessageCame</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classAnaCanScan_1a54a66154c956b4605ff18f93f552db60" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a54a66154c956b4605ff18f93f552db60" kindref="member">AnaCanScan::createBus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>parameters)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1ad515df0b16ec1a2877282f54c0733a98" kindref="member">m_busName</ref><sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a84c4a44bd26c3e3f21288f3abeba8326" kindref="member">m_busParameters</ref><sp/>=<sp/>parameters;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calling<sp/>base<sp/>class<sp/>to<sp/>get<sp/>the<sp/>instance<sp/>from<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::LogComponentHandle<sp/>myHandle;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>LogItInstance*<sp/>logItInstance<sp/>=<sp/>CCanAccess::getLogItInstance();<sp/></highlight><highlight class="comment">//<sp/>actually<sp/>calling<sp/>instance<sp/>method,<sp/>not<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/>&quot;<sp/>ptr=<sp/>0x&quot;<sp/>&lt;&lt;<sp/>logItInstance<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>anagate<sp/>component<sp/>for<sp/>logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!LogItInstance::setInstance(logItInstance))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>could<sp/>not<sp/>set<sp/>LogIt<sp/>instance&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>logItInstance-&gt;registerLoggingComponent(<sp/><ref refid="namespaceCanModule_1ab674248fa647ccc8056dd796421aa16b" kindref="member">CanModule::LogItComponentNameAnagate</ref>,<sp/>Log::TRC<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!logItInstance-&gt;getComponentHandle(<ref refid="namespaceCanModule_1ab674248fa647ccc8056dd796421aa16b" kindref="member">CanModule::LogItComponentNameAnagate</ref>,<sp/>myHandle))</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>could<sp/>not<sp/>get<sp/>LogIt<sp/>component<sp/>handle<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespaceCanModule_1ab674248fa647ccc8056dd796421aa16b" kindref="member">LogItComponentNameAnagate</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOG(Log::TRC,<sp/>myHandle)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>__LINE__;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref><sp/>=<sp/>myHandle;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>parameters=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a0eff18d10b7ee5d6f86b03898f38f7ca" kindref="member">m_sBusName</ref><sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>returnCode<sp/>=<sp/><ref refid="classAnaCanScan_1ad917f9cda15bbf9dd9abe6417be5a5eb" kindref="member">configureCanBoard</ref>(name,<sp/>parameters);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>returnCode<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>OK,<sp/>Bus<sp/>created<sp/>with<sp/>parameters=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classAnaCanScan_1ad917f9cda15bbf9dd9abe6417be5a5eb" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad917f9cda15bbf9dd9abe6417be5a5eb" kindref="member">AnaCanScan::configureCanBoard</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>parameters)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>parameters=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>stringVector;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>stringVector<sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1af26c9d102638fb96e5e1305f807d148f" kindref="member">parseNameAndParameters</ref>(name,<sp/>parameters);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>decode<sp/>3<sp/>elements<sp/>from<sp/>this:0=&quot;an&quot;<sp/>for<sp/>anagate<sp/>library,<sp/>1=can<sp/>port,<sp/>2=ip<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/><sp/>&quot;an:0:128.141.159.194&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stringVector.size()<sp/>!=<sp/>3<sp/>){</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>need<sp/>exactly<sp/>3<sp/>elements<sp/>delimited<sp/>by<sp/>\&quot;:\&quot;<sp/>like<sp/>\&quot;an:0:128.141.159.194\&quot;,<sp/>got<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>stringVector.size();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>stringVector.size();<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>stringVector[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>stringVector[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>stringVector.size();<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>OK<sp/>stringVector[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>stringVector[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref><sp/>=<sp/>atoi(stringVector[1].c_str());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a501c8cb87a6e4a11b526840f052ec028" kindref="member">m_canIPAddress</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>stringVector[2].c_str();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;decoded<sp/>canPortNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a501c8cb87a6e4a11b526840f052ec028" kindref="member">m_canIPAddress</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>up<sp/>to<sp/>6<sp/>parameter,<sp/>assume<sp/>defaults<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>baudRate_default<sp/>=<sp/>125000;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1ae2d7c7a9b314adffbde6eafac5a3607e" kindref="member">m_baudRate</ref><sp/>=<sp/>baudRate_default;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(parameters.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;Unspecified&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ac4e03899b26e33a3867ee1f0bce674b5" kindref="member">m_iNumberOfDetectedParameters</ref><sp/>&gt;=<sp/>1<sp/>)<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1ae2d7c7a9b314adffbde6eafac5a3607e" kindref="member">m_baudRate</ref><sp/>=<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>other<sp/>parameters<sp/>are<sp/>already<sp/>set,<sp/>either<sp/>to<sp/>0<sp/>by<sp/>init,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>by<sp/>decoding.<sp/>They<sp/>are<sp/>always<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>parsing<sp/>parameters:<sp/>this<sp/>syntax<sp/>is<sp/>incorrect:<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;you<sp/>need<sp/>up<sp/>to<sp/>6<sp/>numbers<sp/>separated<sp/>by<sp/>whitespaces,<sp/>i.e.<sp/>\&quot;125000<sp/>0<sp/>0<sp/>0<sp/>0<sp/>0\&quot;<sp/>\&quot;p0<sp/>p1<sp/>p2<sp/>p3<sp/>p4<sp/>p5\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p0<sp/>=<sp/>baud<sp/>rate,<sp/>125000<sp/>or<sp/>whatever<sp/>the<sp/>module<sp/>supports&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p1<sp/>=<sp/>operation<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p2<sp/>=<sp/>termination&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p3<sp/>=<sp/>high<sp/>speed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p4<sp/>=<sp/>time<sp/>stamp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>p5<sp/>=<sp/>sync<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(INF,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unspecified<sp/>parameters,<sp/>default<sp/>values<sp/>will<sp/>be<sp/>used.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad94121f1933d50cafa52d625ee435f6c" kindref="member">openCanPort</ref>();</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="classAnaCanScan_1ad94121f1933d50cafa52d625ee435f6c" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad94121f1933d50cafa52d625ee435f6c" kindref="member">AnaCanScan::openCanPort</ref>()</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>canModuleHandle;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>USB-CANmodul<sp/>already<sp/>is<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classAnaCanScan_1a922e39b73da106c6dcbe2f474af6c8e5" kindref="member">isCanHandleInUse</ref>(<ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>))<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>it<sp/>is,<sp/>we<sp/>get<sp/>the<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canModuleHandle<sp/>=<sp/><ref refid="classAnaCanScan_1af7a24d07fe3cb8bbf7db9a416f8efd65" kindref="member">getCanHandleFromPort</ref>(<ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Otherwise<sp/>we<sp/>create<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Will<sp/>call<sp/>CANOpenDevice<sp/>with<sp/>parameters<sp/>m_canHandleNumber:[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;],<sp/>m_canIPAddress:[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a501c8cb87a6e4a11b526840f052ec028" kindref="member">m_canIPAddress</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANOpenDevice(&amp;canModuleHandle,<sp/>FALSE,<sp/>TRUE,<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,<sp/>m_canIPAddress.c_str(),<ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anaCallReturn<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>out<sp/>initialisation<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>CANOpenDevice,<sp/>return<sp/>code<sp/>=<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1aff54bac5fe8f248efada31347236858e" kindref="member">setCanHandleInUse</ref>(<ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>CAN<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANSetGlobals(canModuleHandle,<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" kindref="member">m_lBaudRate</ref>,<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a6dcce5899a28a07c35042c2005fbac03" kindref="member">m_iOperationMode</ref>,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1ac15d1cfe926f508a2788dab50aed992b" kindref="member">m_iTermination</ref>,<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a3481b638a47d3a832c6fad761973c9de" kindref="member">m_iHighSpeed</ref>,<sp/><ref refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" kindref="member">m_CanParameters</ref>.<ref refid="structCanModule_1_1CanParameters_1a0f3653eda77900c9d2450793bd285c29" kindref="member">m_iTimeStamp</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>anaCallReturn<sp/>){</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:{<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x30000:<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>to<sp/>TCP/IP<sp/>partner<sp/>can&apos;t<sp/>be<sp/>established<sp/>or<sp/>is<sp/>disconnected.<sp/>Lost<sp/>TCP/IP:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>dec;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x40000:<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/><sp/>answer<sp/><sp/>was<sp/><sp/>received<sp/><sp/>from<sp/><sp/><sp/>TCP/IP<sp/>partner<sp/>within<sp/>the<sp/>defined<sp/>timeout.<sp/>Lost<sp/>TCP/IP:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>dec;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x900000:<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>device<sp/>handle.<sp/>Lost<sp/>TCP/IP:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>dec;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Other<sp/>Error<sp/>in<sp/>CANSetGlobals:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>dec;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>handler<sp/>for<sp/>managing<sp/>incoming<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANSetCallbackEx(canModuleHandle,<sp/><ref refid="AnaCanScan_8cpp_1ad5698349874e3653b879b5de27311594" kindref="member">InternalCallback</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anaCallReturn<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>CANSetCallbackEx,<sp/>return<sp/>code<sp/>=<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;OK<sp/>CANSetCallbackEx,<sp/>return<sp/>code<sp/>=<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a054a3e84d845ff82d1b9af1b8f855e29" kindref="member">setCanHandleOfPort</ref>(<ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,<sp/>canModuleHandle);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" kindref="member">g_AnaCanScanPointerMap</ref>[canModuleHandle]<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>associate<sp/>in<sp/>the<sp/>global<sp/>map<sp/>the<sp/>handle<sp/>with<sp/>the<sp/>instance<sp/>of<sp/>the<sp/>AnaCanScan<sp/>object,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>it<sp/>can<sp/>later<sp/>be<sp/>identified<sp/>by<sp/>the<sp/>callback<sp/>InternalCallback<sp/>in<sp/>a<sp/>speedy<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref><sp/>=<sp/>canModuleHandle;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="classAnaCanScan_1aaa001b34e6ee0a27295239f951b7b879" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1aaa001b34e6ee0a27295239f951b7b879" kindref="member">AnaCanScan::sendErrorCode</ref>(AnaInt32<sp/>status)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>errorMessage[120];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>timeval<sp/>ftTimeStamp;<sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nMicrosecs<sp/>=</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duration_cast&lt;std::chrono::microseconds&gt;(</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now.time_since_epoch()</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftTimeStamp.tv_sec<sp/>=<sp/>nMicrosecs.count()<sp/>/<sp/>1000000L;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftTimeStamp.tv_usec<sp/>=<sp/>(nMicrosecs.count()<sp/>%<sp/>1000000L)<sp/>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classAnaCanScan_1a6eec29a421ec4af879143379833ec676" kindref="member">errorCodeToString</ref>(status,<sp/>errorMessage))</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CCanAccess_1a33fbd693f04b4f4e21cee20856c44866" kindref="member">canMessageError</ref>(status,<sp/>errorMessage,<sp/>ftTimeStamp);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="classAnaCanScan_1ad45666454318c891d7acd9fe16ae4c49" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad45666454318c891d7acd9fe16ae4c49" kindref="member">AnaCanScan::sendMessage</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>cobID,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rtr)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sending<sp/>message:<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>message<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;],<sp/>cobID:<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cobID<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;],<sp/>Message<sp/>Length:<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(len)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*messageToBeSent[8];</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>flags<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtr)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Bit<sp/>1:<sp/>If<sp/>set,<sp/>the<sp/>telegram<sp/>is<sp/>marked<sp/>as<sp/>remote<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>messageLengthToBeProcessed;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>there<sp/>is<sp/>more<sp/>than<sp/>8<sp/>characters<sp/>to<sp/>process,<sp/>we<sp/>process<sp/>8<sp/>of<sp/>them<sp/>in<sp/>this<sp/>iteration<sp/>of<sp/>the<sp/>loop</highlight></codeline>
<codeline lineno="367"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>messageLengthToBeProcessed<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(DBG,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>length<sp/>is<sp/>more<sp/>than<sp/>8<sp/>bytes,<sp/>ignoring<sp/>overhead,<sp/>no<sp/>extended<sp/>CAN<sp/>msg<sp/>yet<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>len;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>messageLengthToBeProcessed<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MLOG(TRC,<sp/>this)<sp/>&lt;&lt;<sp/>&quot;Going<sp/>to<sp/>memcopy<sp/>&quot;<sp/>&lt;&lt;<sp/>messageToBeSent<sp/>&lt;&lt;<sp/>&quot;;&quot;<sp/>&lt;&lt;<sp/>message<sp/>&lt;&lt;<sp/>&quot;;&quot;<sp/>&lt;&lt;<sp/>messageLengthToBeProcessed;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(messageToBeSent,<sp/>message,<sp/>messageLengthToBeProcessed);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_canPortNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cobID=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cobID</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>length<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>messageLengthToBeProcessed</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>flags=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>flags<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_UcanHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANWrite(m_UcanHandle,<sp/>cobID,<sp/>reinterpret_cast&lt;char*&gt;(messageToBeSent),<sp/>messageLengthToBeProcessed,<sp/>flags);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anaCallReturn<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>was<sp/>a<sp/>problem<sp/>when<sp/>sending<sp/>a<sp/>message<sp/>with<sp/>CANWrite:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>dec;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn0<sp/>=<sp/><ref refid="classAnaCanScan_1abf8809be00bdc2f39344ec72cf66514c" kindref="member">AnaCanScan::reconnectAllPorts</ref>(<sp/><ref refid="classAnaCanScan_1a501c8cb87a6e4a11b526840f052ec028" kindref="member">m_canIPAddress</ref><sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>anaCallReturn0<sp/>){</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>reconnect<sp/>all<sp/>module<sp/>CAN<sp/>ports<sp/>once,<sp/>keep<sp/>on<sp/>trying<sp/>to<sp/>reconnect.<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a501c8cb87a6e4a11b526840f052ec028" kindref="member">m_canIPAddress</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anaCallReturn0<sp/>=<sp/><ref refid="classAnaCanScan_1abf8809be00bdc2f39344ec72cf66514c" kindref="member">AnaCanScan::reconnectAllPorts</ref>(<sp/><ref refid="classAnaCanScan_1a501c8cb87a6e4a11b526840f052ec028" kindref="member">m_canIPAddress</ref><sp/>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a0520647a69824883cb2a05be4735bb25" kindref="member">objectMapSize</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1a0265b75e9e2e16737950b6b5c5662f35" kindref="member">onTransmit</ref>(messageLengthToBeProcessed);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1aaa001b34e6ee0a27295239f951b7b879" kindref="member">sendErrorCode</ref>(anaCallReturn);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="classAnaCanScan_1a0520647a69824883cb2a05be4735bb25" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a0520647a69824883cb2a05be4735bb25" kindref="member">AnaCanScan::objectMapSize</ref>(){</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>size<sp/>=<sp/><ref refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" kindref="member">g_AnaCanScanPointerMap</ref>.size();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref><sp/><sp/>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>RECEIVE<sp/>obj.<sp/>map<sp/>size=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;AnaInt32,<sp/>AnaCanScan*&gt;::iterator<sp/>it=<ref refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" kindref="member">g_AnaCanScanPointerMap</ref>.begin();<sp/>it!=<ref refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" kindref="member">g_AnaCanScanPointerMap</ref>.end();<sp/>it++){</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>obj.<sp/>map<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>key=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;first</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;ipAdress()</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>CAN<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;canPortNumber()</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;handle()</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(used?=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;isCanHandleInUse(it-&gt;second-&gt;handle())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="classAnaCanScan_1abf8809be00bdc2f39344ec72cf66514c" refkind="member"><highlight class="comment">/*<sp/>static<sp/>*/</highlight><highlight class="normal"><sp/>AnaInt32<sp/><ref refid="classAnaCanScan_1abf8809be00bdc2f39344ec72cf66514c" kindref="member">AnaCanScan::reconnectAllPorts</ref>(<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ip<sp/>){</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaRet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>re-open<sp/>the<sp/>can<sp/>port<sp/>and<sp/>get<sp/>a<sp/>new<sp/>handle,<sp/>but<sp/>do<sp/>NOT<sp/>yet<sp/>put<sp/>the<sp/>new<sp/>object<sp/>(this,<sp/>again)<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>global<sp/>map.<sp/>Keep<sp/>the<sp/>reception<sp/>disconnected<sp/>still.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbCANportsOnModule<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reconnectFailed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;AnaInt32,<sp/>AnaCanScan*&gt;::iterator<sp/>it=<ref refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" kindref="member">g_AnaCanScanPointerMap</ref>.begin();<sp/>it!=<ref refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" kindref="member">g_AnaCanScanPointerMap</ref>.end();<sp/>it++){</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ip<sp/>==<sp/>it-&gt;second-&gt;ipAdress()<sp/>){</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOG(Log::TRC,<sp/>AnaCanScan::m_lh<sp/>)<sp/>&lt;&lt;<sp/>__FUNCTION__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>key=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;first</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>found<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>CAN<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;canPortNumber()</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>reconnecting...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cumulating<sp/>the<sp/>return<sp/>codes<sp/>is<sp/>not<sp/>such<sp/>a<sp/>good<sp/>idea.<sp/>it<sp/>works<sp/>but<sp/>makes<sp/>it<sp/>difficult<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interpret<sp/>the<sp/>error.<sp/>please<sp/>improve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>it-&gt;second-&gt;reconnect();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>){</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG(Log::WRN,<sp/>AnaCanScan::m_lh<sp/>)<sp/>&lt;&lt;<sp/>__FUNCTION__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::WRN,<sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>key=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;first</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>found<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>CAN<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;canPortNumber()</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed<sp/>to<sp/>reconnect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reconnectFailed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbCANportsOnModule++;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>CAN<sp/>bridge<sp/>at<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/><sp/>nbCANportsOnModule=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nbCANportsOnModule;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>reconnectFailed<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::WRN,<sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Problem<sp/>reconnecting<sp/>CAN<sp/>ports<sp/>for<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>last<sp/>ret=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ret<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Just<sp/>abandoning<sp/>and<sp/>trying<sp/>again<sp/>in<sp/>10<sp/>secs,<sp/>module<sp/>might<sp/>not<sp/>be<sp/>ready<sp/>yet.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>us<sp/>=<sp/>10000000;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::this_thread::sleep(boost::posix_time::microseconds(<sp/>us<sp/>));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>the<sp/>new<sp/>handler<sp/>with<sp/>the<sp/>obj.<sp/>map<sp/>and<sp/>connect<sp/>the<sp/>reception<sp/>handler.<sp/>Cleanup<sp/>the<sp/>stale<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;AnaInt32,<sp/>AnaCanScan*&gt;<sp/>lmap<sp/>=<sp/><ref refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" kindref="member">g_AnaCanScanPointerMap</ref>;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>a<sp/>local<sp/>copy<sp/>of<sp/>the<sp/>map,<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>to<sp/>change<sp/>the<sp/>map<sp/>we<sp/>are<sp/>iterating<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;AnaInt32,<sp/>AnaCanScan*&gt;::iterator<sp/>it=lmap.begin();<sp/>it!=lmap.end();<sp/>it++){</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ip<sp/>==<sp/>it-&gt;second-&gt;ipAdress()<sp/>){</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anaRet<sp/>=<sp/>it-&gt;second-&gt;connectReceptionHandler();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>anaRet<sp/>!=<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR,<sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed<sp/>to<sp/>reconnect<sp/>reception<sp/>handler<sp/>for<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>anaRet=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anaRet;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref><sp/>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>debug<sp/>reconnect<sp/>reception<sp/>handler<sp/>for<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ip</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;handle()</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>looking<sp/>good=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anaRet;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC,<sp/><ref refid="classAnaCanScan_1aa87b017f2f1b9097c4b8d26061acbdd5" kindref="member">AnaCanScan::s_logItHandleAnagate</ref>)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>erasing<sp/>stale<sp/>handler<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>from<sp/>obj.<sp/>map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" kindref="member">g_AnaCanScanPointerMap</ref>.erase(<sp/>it-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>us<sp/>=<sp/>1000000;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::this_thread::sleep(boost::posix_time::microseconds(<sp/>us<sp/>));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>anaRet<sp/>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="classAnaCanScan_1a428d6c62f3a2d6b4297898593961696b" refkind="member"><highlight class="normal">AnaInt32<sp/><ref refid="classAnaCanScan_1a428d6c62f3a2d6b4297898593961696b" kindref="member">AnaCanScan::connectReceptionHandler</ref>(){</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connecting<sp/>RECEIVE<sp/>canModuleHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a501c8cb87a6e4a11b526840f052ec028" kindref="member">m_canIPAddress</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANSetCallbackEx(<ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>,<sp/><ref refid="AnaCanScan_8cpp_1ad5698349874e3653b879b5de27311594" kindref="member">InternalCallback</ref>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anaCallReturn<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>debug<sp/>in<sp/>CANSetCallbackEx,<sp/>return<sp/>code<sp/>=<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>canModuleHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>a<sp/>reconnect!<sp/>Can&apos;t<sp/>fix<sp/>this.<sp/>Restart<sp/>program<sp/>and<sp/>buy<sp/>better<sp/>hardware<sp/>please.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>is<sp/>very<sp/>schlecht,<sp/>need<sp/>a<sp/>good<sp/>idea<sp/>(~check<sp/>keepalive<sp/>and<sp/>sending<sp/>fake<sp/>messages)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>detect<sp/>and<sp/>possibly<sp/>recuperate<sp/>from<sp/>that.<sp/>Does<sp/>this<sp/>case<sp/>happen<sp/>actually?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1a353343698532fde42f4eeba0de3e97cb" kindref="member">g_AnaCanScanPointerMap</ref>[<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref><sp/>]<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1aff54bac5fe8f248efada31347236858e" kindref="member">setCanHandleInUse</ref>(<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(INF,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;RECEIVE<sp/>handler<sp/>looks<sp/>good,<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>CAN<sp/>port=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_canIPAddress<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Congratulations.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>anaCallReturn<sp/>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="classAnaCanScan_1af1deaf420c98dcdc4687f481fd4d9a08" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1af1deaf420c98dcdc4687f481fd4d9a08" kindref="member">AnaCanScan::reconnect</ref>(){</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>canModuleHandle;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>not<sp/>too<sp/>fast.<sp/>sleep<sp/>to<sp/>wait<sp/>for<sp/>network<sp/>and<sp/>don&apos;t<sp/>hammer<sp/>the<sp/>switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>us<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;try<sp/>to<sp/>reconnect<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a501c8cb87a6e4a11b526840f052ec028" kindref="member">m_canIPAddress</ref></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_canPortNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_UcanHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state<sp/>=<sp/>CANDeviceConnectState(<sp/>m_UcanHandle<sp/>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CANDeviceConnectState:<sp/>device<sp/>connect<sp/>state=<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>state<sp/>&lt;&lt;<sp/>dec;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>state<sp/>){</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(INF,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>is<sp/>in<sp/>state<sp/>connecting,<sp/>don&apos;t<sp/>try<sp/>to<sp/>reconnect<sp/>for<sp/>now.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(INF,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>is<sp/>connecting,<sp/>don&apos;t<sp/>try<sp/>to<sp/>reconnect,<sp/>just<sp/>skip.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANCloseDevice(<sp/>m_UcanHandle<sp/>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;closed<sp/>device<sp/>m_UcanHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_UcanHandle</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>anaCallReturn=<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>dec;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>anaCallReturn<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>close<sp/>device<sp/>m_UcanHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_UcanHandle</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>anaCallReturn=<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>dec;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return(-3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>is<sp/>closed.<sp/>stale<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>is<sp/>already<sp/>closed,<sp/>try<sp/>reopen.<sp/>stale<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1aff54bac5fe8f248efada31347236858e" kindref="member">setCanHandleInUse</ref>(<sp/>m_UcanHandle,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(TRC,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;try<sp/>CANOpenDevice<sp/>m_canPortNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_UcanHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_UcanHandle</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a501c8cb87a6e4a11b526840f052ec028" kindref="member">m_canIPAddress</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>timeout=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANOpenDevice(&amp;canModuleHandle,<sp/>FALSE,<sp/>TRUE,<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,<sp/><ref refid="classAnaCanScan_1a501c8cb87a6e4a11b526840f052ec028" kindref="member">m_canIPAddress</ref>.c_str(),<sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anaCallReturn<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CANOpenDevice<sp/>failed:<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>dec;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(INF,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CANOpenDevice<sp/>m_canPortNumber=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>canModuleHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>canModuleHandle</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ip=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a501c8cb87a6e4a11b526840f052ec028" kindref="member">m_canIPAddress</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>timeout=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_timeout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>reconnect<sp/>for<sp/>SEND<sp/>looks<sp/>good&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1aff54bac5fe8f248efada31347236858e" kindref="member">setCanHandleInUse</ref>(<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a054a3e84d845ff82d1b9af1b8f855e29" kindref="member">setCanHandleOfPort</ref>(<sp/><ref refid="classAnaCanScan_1a2ef4dd0b4c07b341597382688b8a2964" kindref="member">m_canPortNumber</ref>,<sp/>canModuleHandle<sp/>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_UcanHandle<sp/>=<sp/>canModuleHandle;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1adea6b9e3f699ae412a8fc532a3eb9a48" kindref="member">m_canCloseDevice</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::this_thread::sleep(boost::posix_time::microseconds(<sp/>us<sp/>));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>0<sp/>);<sp/></highlight><highlight class="comment">//<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="620" refid="classAnaCanScan_1a7cbad1b8b5c44282c86bfcfda5464b8f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a7cbad1b8b5c44282c86bfcfda5464b8f" kindref="member">AnaCanScan::setConnectWaitTime</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout_ms<sp/>){</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref><sp/>=<sp/>timeout_ms;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(WRN,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reconnect<sp/>CANOpenDevice<sp/>m_UcanHandle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>apply<sp/>new<sp/>timeout=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a2ef809f84d976b6f453049a7298760fe" kindref="member">m_timeout</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1af1deaf420c98dcdc4687f481fd4d9a08" kindref="member">reconnect</ref>();</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="classAnaCanScan_1ae7e853ff202001b094162a637f711103" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ae7e853ff202001b094162a637f711103" kindref="member">AnaCanScan::startAlive</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aliveTime_sec<sp/>){</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn<sp/>=<sp/>CANStartAlive(<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>,<sp/>aliveTime_sec<sp/>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>anaCallReturn<sp/>!=<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>start<sp/>alive<sp/>mechanism,<sp/>error=<sp/><sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>anaCallReturn<sp/>&lt;&lt;<sp/>dec;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(INF,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;started<sp/>alive<sp/>mechanism<sp/>on<sp/>handle=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="classAnaCanScan_1a75c1a41d3e8ed31b39e2813596358472" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad45666454318c891d7acd9fe16ae4c49" kindref="member">AnaCanScan::sendMessage</ref>(<ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref><sp/>*canm)</highlight></codeline>
<codeline lineno="640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad45666454318c891d7acd9fe16ae4c49" kindref="member">sendMessage</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">(canm-&gt;<ref refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" kindref="member">c_id</ref>),<sp/>canm-&gt;<ref refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" kindref="member">c_dlc</ref>,<sp/>canm-&gt;<ref refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" kindref="member">c_data</ref>,<sp/>canm-&gt;<ref refid="structCanMsgStruct_1ad4a78c27262604bacb5720d8633f71c6" kindref="member">c_rtr</ref>);</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="651" refid="classAnaCanScan_1a345abb2f9712275425f4af8eb98cbd38" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a345abb2f9712275425f4af8eb98cbd38" kindref="member">AnaCanScan::sendRemoteRequest</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>cobID)</highlight></codeline>
<codeline lineno="652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>anaCallReturn;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaInt32<sp/>flags<sp/>=<sp/>2;</highlight><highlight class="comment">//<sp/>Bit<sp/>1:<sp/>If<sp/>set,<sp/>the<sp/>telegram<sp/>is<sp/>marked<sp/>as<sp/>remote<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>anaCallReturn<sp/>=<sp/>CANWrite(<ref refid="classAnaCanScan_1a581830a4a70cee6b31e3e895d669a9be" kindref="member">m_UcanHandle</ref>,cobID,NULL,<sp/>0,<sp/>flags);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anaCallReturn<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AnaCanScan_8cpp_1ac34d62b5ffd4e8e1c3ece118f3f58485" kindref="member">MLOGANA</ref>(ERR,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>was<sp/>a<sp/>problem<sp/>when<sp/>sending<sp/>a<sp/>message<sp/>with<sp/>CANWrite&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1aaa001b34e6ee0a27295239f951b7b879" kindref="member">sendErrorCode</ref>(anaCallReturn);</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="classAnaCanScan_1a6eec29a421ec4af879143379833ec676" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1a6eec29a421ec4af879143379833ec676" kindref="member">AnaCanScan::errorCodeToString</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>error,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>message[])</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp[300]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>canGetErrorText((canStatus)error,<sp/>tmp,<sp/>sizeof(tmp));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*message<sp/>=<sp/>new<sp/>char[strlen(tmp)+1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>message[0]<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(message,tmp);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="classAnaCanScan_1ad4576bc409a954c888a6fd7f06ca697f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAnaCanScan_1ad4576bc409a954c888a6fd7f06ca697f" kindref="member">AnaCanScan::getStatistics</ref>(<sp/><ref refid="classCanModule_1_1CanStatistics" kindref="compound">CanStatistics</ref><sp/>&amp;<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1a8ec66bd11141579779f143362b70640e" kindref="member">computeDerived</ref><sp/>(<ref refid="classAnaCanScan_1ae2d7c7a9b314adffbde6eafac5a3607e" kindref="member">m_baudRate</ref>);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>whole<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAnaCanScan_1a862310267c2415fa9afb401402fa7b57" kindref="member">m_statistics</ref>.<ref refid="classCanModule_1_1CanStatistics_1a85e6c87ce5285884a0272088178bb8f6" kindref="member">beginNewRun</ref>();</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/anagate/AnaCanScan.cpp"/>
  </compounddef>
</doxygen>
