<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="CanStatistics_8h" kind="file" language="C++">
    <compoundname>CanStatistics.h</compoundname>
    <includes refid="ExportDefinition_8h" local="yes">ExportDefinition.h</includes>
    <includes local="no">atomic</includes>
    <includes local="no">iostream</includes>
    <includes local="no">chrono</includes>
    <includedby refid="CCanAccess_8h" local="no">CanInterface/include/CCanAccess.h</includedby>
    <includedby refid="CanStatistics_8cpp" local="yes">CanInterface/src/CanStatistics.cpp</includedby>
    <includedby refid="AnaCanScan_8h" local="yes">CanInterfaceImplementations/anagate/AnaCanScan.h</includedby>
    <includedby refid="pkcan_8h" local="yes">CanInterfaceImplementations/pkcan/pkcan.h</includedby>
    <includedby refid="SockCanScan_8h" local="yes">CanInterfaceImplementations/sockcan/SockCanScan.h</includedby>
    <includedby refid="STCanScan_8h" local="yes">CanInterfaceImplementations/systec/STCanScan.h</includedby>
    <includedby refid="MockCanAccess_8h" local="yes">CanInterfaceImplementations/unitTestMockUpImplementation/MockCanAccess.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>atomic</label>
      </node>
      <node id="2">
        <label>ExportDefinition.h</label>
        <link refid="ExportDefinition_8h"/>
      </node>
      <node id="1">
        <label>CanInterface/include/CanStatistics.h</label>
        <link refid="CanStatistics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>chrono</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>CanInterface/include/CanStatistics.h</label>
        <link refid="CanStatistics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>CanLibLoader/include/CanLibLoader.h</label>
        <link refid="CanLibLoader_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>CanInterface/src/CCanAccess.cpp</label>
        <link refid="CCanAccess_8cpp"/>
      </node>
      <node id="8">
        <label>CanInterfaceImplementations/pkcan/pkcan.h</label>
        <link refid="pkcan_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Diagnostic/include/Diag.h</label>
        <link refid="Diag_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>CanInterfaceImplementations/unitTestMockUpImplementation/MockCanAccess.h</label>
        <link refid="MockCanAccess_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>CanInterface/src/CanStatistics.cpp</label>
        <link refid="CanStatistics_8cpp"/>
      </node>
      <node id="20">
        <label>CanLibLoader/src/CanLibLoaderLin.cpp</label>
        <link refid="CanLibLoaderLin_8cpp"/>
      </node>
      <node id="10">
        <label>CanInterfaceImplementations/sockcan/SockCanScan.h</label>
        <link refid="SockCanScan_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>CanLibLoader/include/CanLibLoaderLin.h</label>
        <link refid="CanLibLoaderLin_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>CanInterfaceImplementations/sockcan/UdevAnalyserForPeak.cpp</label>
        <link refid="UdevAnalyserForPeak_8cpp"/>
      </node>
      <node id="19">
        <label>CanLibLoader/src/CanLibLoader.cpp</label>
        <link refid="CanLibLoader_8cpp"/>
      </node>
      <node id="13">
        <label>CanInterfaceImplementations/systec/STCanScan.h</label>
        <link refid="STCanScan_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>CanLibLoader/src/CanLibLoaderWin.cpp</label>
        <link refid="CanLibLoaderWin_8cpp"/>
      </node>
      <node id="3">
        <label>CanInterface/include/CanBusAccess.h</label>
        <link refid="CanBusAccess_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>CanInterfaceImplementations/anagate/AnaCanScan.cpp</label>
        <link refid="AnaCanScan_8cpp"/>
      </node>
      <node id="4">
        <label>CanInterface/src/CanBusAccess.cpp</label>
        <link refid="CanBusAccess_8cpp"/>
      </node>
      <node id="9">
        <label>CanInterfaceImplementations/pkcan/pkcan.cpp</label>
        <link refid="pkcan_8cpp"/>
      </node>
      <node id="14">
        <label>CanInterfaceImplementations/systec/STCanScan.cpp</label>
        <link refid="STCanScan_8cpp"/>
      </node>
      <node id="21">
        <label>CanLibLoader/include/CanLibLoaderWin.h</label>
        <link refid="CanLibLoaderWin_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>CanInterfaceImplementations/anagate/AnaCanScan.h</label>
        <link refid="AnaCanScan_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>CanInterfaceImplementations/sockcan/SockCanScan.cpp</label>
        <link refid="SockCanScan_8cpp"/>
      </node>
      <node id="2">
        <label>CanInterface/include/CCanAccess.h</label>
        <link refid="CCanAccess_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>CanInterfaceImplementations/unitTestMockUpImplementation/MockCanAccess.cpp</label>
        <link refid="MockCanAccess_8cpp"/>
      </node>
      <node id="24">
        <label>Diagnostic/src/Diag.cpp</label>
        <link refid="Diag_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classCanModule_1_1CanStatistics" prot="public">CanModule::CanStatistics</innerclass>
    <innerclass refid="classCanModule_1_1CanStatistics_1_1Internals" prot="private">CanModule::CanStatistics::Internals</innerclass>
    <innernamespace refid="namespaceCanModule">CanModule</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="24"><highlight class="preprocessor">#ifndef<sp/>CANINTERFACE_SOCKCAN_CANSTATISTICS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CANINTERFACE_SOCKCAN_CANSTATISTICS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ExportDefinition_8h" kindref="compound">ExportDefinition.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceCanModule" kindref="compound">CanModule</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35" refid="classCanModule_1_1CanStatistics" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCanModule_1_1CanStatistics" kindref="compound">CanStatistics</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ExportDefinition_8h_1a7478c359eb321f7939044e70abfb4cca" kindref="member">SHARED_LIB_EXPORT_DEFN</ref><sp/><ref refid="classCanModule_1_1CanStatistics_1a8fc1e60237d7ad02bb4648dbef96f3ec" kindref="member">CanStatistics</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a85e6c87ce5285884a0272088178bb8f6" kindref="member">beginNewRun</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a8ec66bd11141579779f143362b70640e" kindref="member">computeDerived</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>baudRate);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a0265b75e9e2e16737950b6b5c5662f35" kindref="member">onTransmit</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataLength);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a82b38a2383bc0ad6b1d306e86b9ef5c6" kindref="member">onReceive</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataLength);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classCanModule_1_1CanStatistics_1a62ee3d5dd02a649066747cb2e2339b9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a62ee3d5dd02a649066747cb2e2339b9d" kindref="member">totalTransmitted</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1aced131fd672bf71b5672117527973253" kindref="member">m_totalTransmitted</ref>.load();<sp/>}</highlight></codeline>
<codeline lineno="58" refid="classCanModule_1_1CanStatistics_1a5a06575683a46d25b4a1cc7d6859938b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a5a06575683a46d25b4a1cc7d6859938b" kindref="member">totalReceived</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1af5d82367032c4a509d99cdc72b6a7e45" kindref="member">m_totalReceived</ref>.load();<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classCanModule_1_1CanStatistics_1ad8a95eeeea9fe50c9fe5465b3bde95d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1ad8a95eeeea9fe50c9fe5465b3bde95d9" kindref="member">txRate</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a83faba43ea2a404e400b681b246f134c" kindref="member">m_internals</ref>.<ref refid="classCanModule_1_1CanStatistics_1_1Internals_1a344b6c86e9644f8cee1946f08d0d0d2a" kindref="member">m_transmittedPerSec</ref>;<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classCanModule_1_1CanStatistics_1a732233caca87cf1532c9f2869d442d68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a732233caca87cf1532c9f2869d442d68" kindref="member">rxRate</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a83faba43ea2a404e400b681b246f134c" kindref="member">m_internals</ref>.<ref refid="classCanModule_1_1CanStatistics_1_1Internals_1ad6a0884d188d724c4d43ae06ed4ecc1a" kindref="member">m_receivedPerSec</ref>;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classCanModule_1_1CanStatistics_1a761bffce2db7f24a9dcbc439a95c1e65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a761bffce2db7f24a9dcbc439a95c1e65" kindref="member">busLoad</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a83faba43ea2a404e400b681b246f134c" kindref="member">m_internals</ref>.<ref refid="classCanModule_1_1CanStatistics_1_1Internals_1acee7cde0976a6c9957ec00446e7a3589" kindref="member">m_busLoad</ref>;<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classCanModule_1_1CanStatistics_1a44da075145ae6dd716bcb9432e254ce7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a44da075145ae6dd716bcb9432e254ce7" kindref="member">timeSinceReceived</ref>()<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CanStatistics_1a2b5dc409d86443a5160e24c41effc39d" kindref="member">m_hrnow</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::duration&lt;double,<sp/>std::micro&gt;<sp/>time_span<sp/>=<sp/><ref refid="classCanModule_1_1CanStatistics_1a2b5dc409d86443a5160e24c41effc39d" kindref="member">m_hrnow</ref><sp/>-<sp/><ref refid="classCanModule_1_1CanStatistics_1a628ea631480ba6519d5dbde33a2444ee" kindref="member">m_hrreceived</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>time_span.count()<sp/>/<sp/>1000<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classCanModule_1_1CanStatistics_1a82bf9c9ca0e1578dbd962ee3d2e05fa6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a82bf9c9ca0e1578dbd962ee3d2e05fa6" kindref="member">timeSinceTransmitted</ref>()<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CanStatistics_1a2b5dc409d86443a5160e24c41effc39d" kindref="member">m_hrnow</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::duration&lt;double,<sp/>std::micro&gt;<sp/>time_span<sp/>=<sp/><ref refid="classCanModule_1_1CanStatistics_1a2b5dc409d86443a5160e24c41effc39d" kindref="member">m_hrnow</ref><sp/>-<sp/><ref refid="classCanModule_1_1CanStatistics_1a6291530d811130f37b3750f99876d0b8" kindref="member">m_hrtransmitted</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>time_span.count()<sp/>/<sp/>1000<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classCanModule_1_1CanStatistics_1a08d5c282de626e89ebf508291d1bde33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a08d5c282de626e89ebf508291d1bde33" kindref="member">timeSinceOpened</ref>()<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CanStatistics_1a2b5dc409d86443a5160e24c41effc39d" kindref="member">m_hrnow</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::duration&lt;double,<sp/>std::micro&gt;<sp/>time_span<sp/>=<sp/><ref refid="classCanModule_1_1CanStatistics_1a2b5dc409d86443a5160e24c41effc39d" kindref="member">m_hrnow</ref><sp/>-<sp/><ref refid="classCanModule_1_1CanStatistics_1ab261532b0dad0125c6749bf5c59e0ac1" kindref="member">m_hropen</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>time_span.count()<sp/>/<sp/>1000<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101" refid="classCanModule_1_1CanStatistics_1af3f15dedf80e67f1309946632d87198d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1af3f15dedf80e67f1309946632d87198d" kindref="member">setTimeSinceOpened</ref>()<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="classCanModule_1_1CanStatistics_1ab261532b0dad0125c6749bf5c59e0ac1" kindref="member">m_hropen</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::now();<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102" refid="classCanModule_1_1CanStatistics_1a99de404f1b24cee80edfaad7ad1f9499" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1a99de404f1b24cee80edfaad7ad1f9499" kindref="member">setTimeSinceReceived</ref>()<sp/><sp/><sp/><sp/>{<sp/><ref refid="classCanModule_1_1CanStatistics_1a628ea631480ba6519d5dbde33a2444ee" kindref="member">m_hrreceived</ref><sp/><sp/><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::now();<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103" refid="classCanModule_1_1CanStatistics_1afe8d43dfb65ee2675ceac1dc84f7eb1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1afe8d43dfb65ee2675ceac1dc84f7eb1a" kindref="member">setTimeSinceTransmitted</ref>()<sp/>{<sp/><ref refid="classCanModule_1_1CanStatistics_1a6291530d811130f37b3750f99876d0b8" kindref="member">m_hrtransmitted</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1ab6755445a7f30386b532514bcf4f2cd3" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics" kindref="compound">CanStatistics</ref><sp/>&amp;<sp/>other);<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>default,<sp/>because<sp/>of<sp/>atomic<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fields<sp/>below<sp/>may<sp/>be<sp/>accessed<sp/>by<sp/>many<sp/>threads<sp/>at<sp/>once<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classCanModule_1_1CanStatistics_1aced131fd672bf71b5672117527973253" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic_uint_least32_t<sp/><ref refid="classCanModule_1_1CanStatistics_1aced131fd672bf71b5672117527973253" kindref="member">m_totalTransmitted</ref>;</highlight></codeline>
<codeline lineno="111" refid="classCanModule_1_1CanStatistics_1af5d82367032c4a509d99cdc72b6a7e45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic_uint_least32_t<sp/><ref refid="classCanModule_1_1CanStatistics_1af5d82367032c4a509d99cdc72b6a7e45" kindref="member">m_totalReceived</ref>;</highlight></codeline>
<codeline lineno="113" refid="classCanModule_1_1CanStatistics_1a4b94f562f6ce5e9057fdae5c24391963" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic_uint_least32_t<sp/><ref refid="classCanModule_1_1CanStatistics_1a4b94f562f6ce5e9057fdae5c24391963" kindref="member">m_transmitted</ref>;</highlight></codeline>
<codeline lineno="115" refid="classCanModule_1_1CanStatistics_1a3cf24ff7fd90d286139fb75a00e146da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic_uint_least32_t<sp/><ref refid="classCanModule_1_1CanStatistics_1a3cf24ff7fd90d286139fb75a00e146da" kindref="member">m_received</ref>;</highlight></codeline>
<codeline lineno="116" refid="classCanModule_1_1CanStatistics_1a7369a4ae5832050532e99e77831e155c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic_uint_least32_t<sp/><ref refid="classCanModule_1_1CanStatistics_1a7369a4ae5832050532e99e77831e155c" kindref="member">m_transmittedOctets</ref>;</highlight></codeline>
<codeline lineno="117" refid="classCanModule_1_1CanStatistics_1ace6767d68ba9dca0c0e7f129f33e365c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic_uint_least32_t<sp/><ref refid="classCanModule_1_1CanStatistics_1ace6767d68ba9dca0c0e7f129f33e365c" kindref="member">m_receivedOctets</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classCanModule_1_1CanStatistics_1a6291530d811130f37b3750f99876d0b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::high_resolution_clock::time_point<sp/><ref refid="classCanModule_1_1CanStatistics_1a2b5dc409d86443a5160e24c41effc39d" kindref="member">m_hrnow</ref>,<sp/><ref refid="classCanModule_1_1CanStatistics_1a628ea631480ba6519d5dbde33a2444ee" kindref="member">m_hrreceived</ref>,<sp/><ref refid="classCanModule_1_1CanStatistics_1a6291530d811130f37b3750f99876d0b8" kindref="member">m_hrtransmitted</ref>,<sp/><ref refid="classCanModule_1_1CanStatistics_1ab261532b0dad0125c6749bf5c59e0ac1" kindref="member">m_hropen</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classCanModule_1_1CanStatistics_1_1Internals" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCanModule_1_1CanStatistics_1_1Internals" kindref="compound">Internals</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125" refid="classCanModule_1_1CanStatistics_1_1Internals_1a344b6c86e9644f8cee1946f08d0d0d2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1_1Internals_1a344b6c86e9644f8cee1946f08d0d0d2a" kindref="member">m_transmittedPerSec</ref>;</highlight></codeline>
<codeline lineno="126" refid="classCanModule_1_1CanStatistics_1_1Internals_1ad6a0884d188d724c4d43ae06ed4ecc1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1_1Internals_1ad6a0884d188d724c4d43ae06ed4ecc1a" kindref="member">m_receivedPerSec</ref>;</highlight></codeline>
<codeline lineno="128" refid="classCanModule_1_1CanStatistics_1_1Internals_1acee7cde0976a6c9957ec00446e7a3589" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanStatistics_1_1Internals_1acee7cde0976a6c9957ec00446e7a3589" kindref="member">m_busLoad</ref>;</highlight></codeline>
<codeline lineno="129" refid="classCanModule_1_1CanStatistics_1_1Internals_1a790205eb4785fde9c1b4b5f0e11f219d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::system_clock::time_point<sp/><ref refid="classCanModule_1_1CanStatistics_1_1Internals_1a790205eb4785fde9c1b4b5f0e11f219d" kindref="member">m_observationStart</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="131" refid="classCanModule_1_1CanStatistics_1a83faba43ea2a404e400b681b246f134c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CanStatistics_1_1Internals" kindref="compound">Internals</ref><sp/><ref refid="classCanModule_1_1CanStatistics_1a83faba43ea2a404e400b681b246f134c" kindref="member">m_internals</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CANINTERFACE_SOCKCAN_CANSTATISTICS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="CanInterface/include/CanStatistics.h"/>
  </compounddef>
</doxygen>
