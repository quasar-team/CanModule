<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classCanModule_1_1CanLibLoaderWin" kind="class" language="C++" prot="public">
    <compoundname>CanModule::CanLibLoaderWin</compoundname>
    <basecompoundref refid="classCanModule_1_1CanLibLoader" prot="public" virt="non-virtual">CanModule::CanLibLoader</basecompoundref>
    <includes refid="CanLibLoaderWin_8h" local="no">CanLibLoaderWin.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCanModule_1_1CanLibLoaderWin_1a76d6eda73211a94f68dca4cb637394e8" prot="private" static="no" mutable="no">
        <type>HMODULE</type>
        <definition>HMODULE CanModule::CanLibLoaderWin::m_pDynamicLibrary</definition>
        <argsstring></argsstring>
        <name>m_pDynamicLibrary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanLibLoader/include/CanLibLoaderWin.h" line="50" column="9" bodyfile="CanLibLoader/include/CanLibLoaderWin.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="classCanModule_1_1CanLibLoaderWin_1adcc42606c727f4ca010ad08719d88a18" compoundref="CanLibLoaderWin_8cpp" startline="121" endline="137">createCanAccess</referencedby>
        <referencedby refid="classCanModule_1_1CanLibLoaderWin_1a8206b2ad7d352ecb8e119b55d2069bc0" compoundref="CanLibLoaderWin_8cpp" startline="88" endline="113">dynamicallyLoadLib</referencedby>
        <referencedby refid="classCanModule_1_1CanLibLoaderWin_1a39da78f1fde4fef2b6b17107e6767962" compoundref="CanLibLoaderWin_8cpp" startline="76" endline="78">~CanLibLoaderWin</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCanModule_1_1CanLibLoaderWin_1ab8df128060b2e76465da474e4fdc8ad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CanModule::CanLibLoaderWin::ErrorExit</definition>
        <argsstring>(LPTSTR lpszFunction)</argsstring>
        <name>ErrorExit</name>
        <param>
          <type>LPTSTR</type>
          <declname>lpszFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the system error message for the last-error code this seems to return error code 0 even if lib pointer is NULL </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanLibLoader/include/CanLibLoaderWin.h" line="37" column="6" bodyfile="CanLibLoader/src/CanLibLoaderWin.cpp" bodystart="38" bodyend="66"/>
        <referencedby refid="classCanModule_1_1CanLibLoaderWin_1a8206b2ad7d352ecb8e119b55d2069bc0" compoundref="CanLibLoaderWin_8cpp" startline="88" endline="113">dynamicallyLoadLib</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCanModule_1_1CanLibLoaderWin_1a52236485330327832d4a282ea370df54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CanModule::CanLibLoaderWin::CanLibLoaderWin</definition>
        <argsstring>(const std::string &amp;libName)</argsstring>
        <name>CanLibLoaderWin</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>libName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanLibLoader/include/CanLibLoaderWin.h" line="40" column="1" bodyfile="CanLibLoader/src/CanLibLoaderWin.cpp" bodystart="69" bodyend="74"/>
        <references refid="classCanModule_1_1CanLibLoaderWin_1a8206b2ad7d352ecb8e119b55d2069bc0" compoundref="CanLibLoaderWin_8cpp" startline="88" endline="113">dynamicallyLoadLib</references>
        <references refid="classCanModule_1_1CanLibLoader_1af891a85f28376052c3f4b22d97eb3ac2" compoundref="CanLibLoader_8h" startline="53">CanModule::CanLibLoader::lh</references>
      </memberdef>
      <memberdef kind="function" id="classCanModule_1_1CanLibLoaderWin_1a39da78f1fde4fef2b6b17107e6767962" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>CanModule::CanLibLoaderWin::~CanLibLoaderWin</definition>
        <argsstring>()</argsstring>
        <name>~CanLibLoaderWin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanLibLoader/include/CanLibLoaderWin.h" line="42" column="9" bodyfile="CanLibLoader/src/CanLibLoaderWin.cpp" bodystart="76" bodyend="78"/>
        <references refid="classCanModule_1_1CanLibLoaderWin_1a76d6eda73211a94f68dca4cb637394e8" compoundref="CanLibLoaderWin_8h" startline="50">m_pDynamicLibrary</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCanModule_1_1CanLibLoaderWin_1a8206b2ad7d352ecb8e119b55d2069bc0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CanModule::CanLibLoaderWin::dynamicallyLoadLib</definition>
        <argsstring>(const std::string &amp;libName)</argsstring>
        <name>dynamicallyLoadLib</name>
        <reimplements refid="classCanModule_1_1CanLibLoader_1a2443baffbe92cd107d09ea09e6cb7b28">dynamicallyLoadLib</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>libName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The dll is loaded trough LoadLibrary (Windows API) but error reporting is poor. Use extended API method for this to get around the signing at least. ===AnaGate libs are NOT INSTALLED on the system, so make sure the vendor libs in question are in the search path: copy them to the bin exec dir. ===Systec libs are in fact installed into the system C:\Windows\system32\USBCAN64.dll or so, so for systec nothing has to be done. In fact this is unclean, but that is what they deliver. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanLibLoader/include/CanLibLoaderWin.h" line="45" column="14" bodyfile="CanLibLoader/src/CanLibLoaderWin.cpp" bodystart="88" bodyend="113"/>
        <references refid="classCanModule_1_1CanLibLoaderWin_1ab8df128060b2e76465da474e4fdc8ad5" compoundref="CanLibLoaderWin_8cpp" startline="38" endline="66">ErrorExit</references>
        <references refid="classCanModule_1_1CanLibLoader_1af891a85f28376052c3f4b22d97eb3ac2" compoundref="CanLibLoader_8h" startline="53">CanModule::CanLibLoader::lh</references>
        <references refid="classCanModule_1_1CanLibLoaderWin_1a76d6eda73211a94f68dca4cb637394e8" compoundref="CanLibLoaderWin_8h" startline="50">m_pDynamicLibrary</references>
        <references refid="classCanModule_1_1CanLibLoader_1a6fdf0514c73c030acd7919cd04c7a89d" compoundref="CanLibLoader_8h" startline="55" endline="55">CanModule::CanLibLoader::setLibName</references>
        <referencedby refid="classCanModule_1_1CanLibLoaderWin_1a52236485330327832d4a282ea370df54" compoundref="CanLibLoaderWin_8cpp" startline="69" endline="74">CanLibLoaderWin</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCanModule_1_1CanLibLoaderWin_1adcc42606c727f4ca010ad08719d88a18" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classCanModule_1_1CCanAccess" kindref="compound">CCanAccess</ref> *</type>
        <definition>CanModule::CCanAccess * CanModule::CanLibLoaderWin::createCanAccess</definition>
        <argsstring>()</argsstring>
        <name>createCanAccess</name>
        <reimplements refid="classCanModule_1_1CanLibLoader_1a69dc0bf543d395f60bb8701339f99e29">createCanAccess</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Once the library is loaded, resolve the function getHalAccess, which will give us an instance of the wanted object: &quot;access&quot; One access instance corresponds to one CAN port (and whatever is needed on the computer side: ethernet, USB, whatnot) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanLibLoader/include/CanLibLoaderWin.h" line="47" column="21" bodyfile="CanLibLoader/src/CanLibLoaderWin.cpp" bodystart="121" bodyend="137"/>
        <references refid="classCanModule_1_1CanLibLoader_1af891a85f28376052c3f4b22d97eb3ac2" compoundref="CanLibLoader_8h" startline="53">CanModule::CanLibLoader::lh</references>
        <references refid="classCanModule_1_1CanLibLoaderWin_1a76d6eda73211a94f68dca4cb637394e8" compoundref="CanLibLoaderWin_8h" startline="50">m_pDynamicLibrary</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CanModule::CanLibLoader</label>
        <link refid="classCanModule_1_1CanLibLoader"/>
      </node>
      <node id="1">
        <label>CanModule::CanLibLoaderWin</label>
        <link refid="classCanModule_1_1CanLibLoaderWin"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CanModule::CanLibLoader</label>
        <link refid="classCanModule_1_1CanLibLoader"/>
      </node>
      <node id="1">
        <label>CanModule::CanLibLoaderWin</label>
        <link refid="classCanModule_1_1CanLibLoaderWin"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CanLibLoader/include/CanLibLoaderWin.h" line="34" column="1" bodyfile="CanLibLoader/include/CanLibLoaderWin.h" bodystart="33" bodyend="52"/>
    <listofallmembers>
      <member refid="classCanModule_1_1CanLibLoader_1aa303c1dd64affa5c27f707e0306786a0" prot="protected" virt="non-virtual"><scope>CanModule::CanLibLoaderWin</scope><name>CanLibLoader</name></member>
      <member refid="classCanModule_1_1CanLibLoaderWin_1a52236485330327832d4a282ea370df54" prot="public" virt="non-virtual"><scope>CanModule::CanLibLoaderWin</scope><name>CanLibLoaderWin</name></member>
      <member refid="classCanModule_1_1CanLibLoader_1acd7d3af103bb72d5bd18737333d682f4" prot="public" virt="non-virtual"><scope>CanModule::CanLibLoaderWin</scope><name>closeCanBus</name></member>
      <member refid="classCanModule_1_1CanLibLoaderWin_1adcc42606c727f4ca010ad08719d88a18" prot="protected" virt="virtual"><scope>CanModule::CanLibLoaderWin</scope><name>createCanAccess</name></member>
      <member refid="classCanModule_1_1CanLibLoader_1ab22f43105bfc9cab3c0749b83c867352" prot="public" virt="non-virtual"><scope>CanModule::CanLibLoaderWin</scope><name>createInstance</name></member>
      <member refid="classCanModule_1_1CanLibLoaderWin_1a8206b2ad7d352ecb8e119b55d2069bc0" prot="protected" virt="virtual"><scope>CanModule::CanLibLoaderWin</scope><name>dynamicallyLoadLib</name></member>
      <member refid="classCanModule_1_1CanLibLoaderWin_1ab8df128060b2e76465da474e4fdc8ad5" prot="public" virt="non-virtual"><scope>CanModule::CanLibLoaderWin</scope><name>ErrorExit</name></member>
      <member refid="classCanModule_1_1CanLibLoader_1a7b4d0043b9715fce19bca9bb4035df0a" prot="public" virt="non-virtual"><scope>CanModule::CanLibLoaderWin</scope><name>getLibName</name></member>
      <member refid="classCanModule_1_1CanLibLoader_1af891a85f28376052c3f4b22d97eb3ac2" prot="public" virt="non-virtual"><scope>CanModule::CanLibLoaderWin</scope><name>lh</name></member>
      <member refid="classCanModule_1_1CanLibLoader_1a63bf9755c345afe6286d6751337806d6" prot="private" virt="non-virtual"><scope>CanModule::CanLibLoaderWin</scope><name>m_libName</name></member>
      <member refid="classCanModule_1_1CanLibLoaderWin_1a76d6eda73211a94f68dca4cb637394e8" prot="private" virt="non-virtual"><scope>CanModule::CanLibLoaderWin</scope><name>m_pDynamicLibrary</name></member>
      <member refid="classCanModule_1_1CanLibLoader_1aaac995d89efdcf2b673cbd3e678be55b" prot="public" virt="non-virtual"><scope>CanModule::CanLibLoaderWin</scope><name>openCanBus</name></member>
      <member refid="classCanModule_1_1CanLibLoader_1a6fdf0514c73c030acd7919cd04c7a89d" prot="public" virt="non-virtual"><scope>CanModule::CanLibLoaderWin</scope><name>setLibName</name></member>
      <member refid="classCanModule_1_1CanLibLoader_1aaf19503282f3fe164c434674721c4972" prot="public" virt="virtual"><scope>CanModule::CanLibLoaderWin</scope><name>~CanLibLoader</name></member>
      <member refid="classCanModule_1_1CanLibLoaderWin_1a39da78f1fde4fef2b6b17107e6767962" prot="public" virt="virtual"><scope>CanModule::CanLibLoaderWin</scope><name>~CanLibLoaderWin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
