<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="canmodule__wrapper_8cpp" kind="file">
    <compoundname>canmodule_wrapper.cpp</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes refid="canmodule__wrapper_8h" local="yes">../include/canmodule_wrapper.h</includes>
    <incdepgraph>
      <node id="523">
        <label>../include/canmodule_wrapper.h</label>
        <link refid="canmodule__wrapper_8h"/>
        <childnode refid="524" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="538" relation="include">
        </childnode>
      </node>
      <node id="534">
        <label>stdatomic.h</label>
      </node>
      <node id="537">
        <label>LogIt.h</label>
      </node>
      <node id="535">
        <label>ExportDefinition.h</label>
        <link refid="ExportDefinition_8h"/>
      </node>
      <node id="525">
        <label>boost/signals2.hpp</label>
      </node>
      <node id="527">
        <label>CanBusAccess.h</label>
        <link refid="CanBusAccess_8h"/>
        <childnode refid="528" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
      </node>
      <node id="529">
        <label>string</label>
      </node>
      <node id="522">
        <label>map</label>
      </node>
      <node id="524">
        <label>boost/thread.hpp</label>
      </node>
      <node id="520">
        <label>CWrapper/src/canmodule_wrapper.cpp</label>
        <link refid="canmodule_wrapper.cpp"/>
        <childnode refid="521" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
      </node>
      <node id="521">
        <label>vector</label>
      </node>
      <node id="538">
        <label>/usr/include/linux/can.h</label>
      </node>
      <node id="528">
        <label>CanLibLoader.h</label>
        <link refid="CanLibLoader_8h"/>
        <childnode refid="529" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
      </node>
      <node id="531">
        <label>sys/time.h</label>
      </node>
      <node id="533">
        <label>CanStatistics.h</label>
        <link refid="CanStatistics_8h"/>
        <childnode refid="534" relation="include">
        </childnode>
        <childnode refid="531" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
        <childnode refid="536" relation="include">
        </childnode>
      </node>
      <node id="526">
        <label>boost/bind.hpp</label>
      </node>
      <node id="536">
        <label>chrono</label>
      </node>
      <node id="532">
        <label>CanMessage.h</label>
        <link refid="CanMessage_8h"/>
        <childnode refid="531" relation="include">
        </childnode>
      </node>
      <node id="530">
        <label>CCanAccess.h</label>
        <link refid="CCanAccess_8h"/>
        <childnode refid="531" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="537" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="canmodule__wrapper_8cpp_1a2eb006bb00711238d0c51ef70240c03c" prot="public" static="no">
        <name>CONNECTION_INDEX_MIN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Â© Copyright CERN, 2018. All rights not expressly granted are reserved.</para><para>canmodule_wrapper cpp: C-API wrapper for C++ <ref refid="namespaceCanModule" kindref="compound">CanModule</ref>. Solves the invocation problem how to call an object(-method, C++) from a non-OO code (in C). As a side effect <ref refid="namespaceCanModule" kindref="compound">CanModule</ref> becomes a C-interface.</para><para>objects are allocated on the heap. Destructors can therefore be called as well.</para><para><ref refid="namespaceCanModule" kindref="compound">CanModule</ref> is preferably distributed as source (gitlab/github, mind the copyright quand meme), but this more or less imposes the cmake build chain. For iseg&apos;s qmake it is cleaner to use the <ref refid="namespaceCanModule" kindref="compound">CanModule</ref> as *.so/dll with header. This is a binary distribution of <ref refid="namespaceCanModule" kindref="compound">CanModule</ref> which is &quot;copied for friends&quot; ;-). These all go into cernCanModuleInterface/libs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="22" column="9" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="22" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a5722e15efde92795076c1f4de794c6ac" compoundref="canmodule__wrapper_8cpp" startline="111" endline="117">canmodule_setDelay_us</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a1cb4853346cc0c0a083b1f729c1a2043" compoundref="canmodule__wrapper_8cpp" startline="254" endline="262">canmodule_testSignalSlot</referencedby>
      </memberdef>
      <memberdef kind="define" id="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" prot="public" static="no">
        <name>CONNECTION_INDEX_MAX</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="23" column="9" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="23" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1ac2fb08a3b85d67b3bde3374493428657" compoundref="canmodule__wrapper_8cpp" startline="546" endline="558">canmodule_delete</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a3f5b9ce8e79c0746a9c78b5d333e6f59" compoundref="canmodule__wrapper_8cpp" startline="413" endline="430">canmodule_send</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a5722e15efde92795076c1f4de794c6ac" compoundref="canmodule__wrapper_8cpp" startline="111" endline="117">canmodule_setDelay_us</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a1cb4853346cc0c0a083b1f729c1a2043" compoundref="canmodule__wrapper_8cpp" startline="254" endline="262">canmodule_testSignalSlot</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1aa9f4b1208b6394678f5e0d1f1e7e36b1" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx0</definition>
        <argsstring></argsstring>
        <name>reception_mtx0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>mutex and cond variables must be static == global in C Therefore the max number of connections is hardcoded to 16. ugly. sorry. come up with something better, please, which works as well ;-) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="31" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="31" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a6d635e7497e25d5788dcbf03125b0909" compoundref="canmodule__wrapper_8cpp" startline="134" endline="146">myUserHandler0</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a6f918d3da1aa14fc5c0a02d501fd46f2" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond0</definition>
        <argsstring></argsstring>
        <name>reception_cond0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="31" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="31" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a6d635e7497e25d5788dcbf03125b0909" compoundref="canmodule__wrapper_8cpp" startline="134" endline="146">myUserHandler0</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a7bf12edd06a1ab049ba210997fb50175" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx1</definition>
        <argsstring></argsstring>
        <name>reception_mtx1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="32" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="32" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1ad360ca6338143d5c11a4531660b24ac0" compoundref="canmodule__wrapper_8cpp" startline="147" endline="153">myUserHandler1</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1ab7cd61f650c5036e31b54e5ef3156abd" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond1</definition>
        <argsstring></argsstring>
        <name>reception_cond1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="32" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="32" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1ad360ca6338143d5c11a4531660b24ac0" compoundref="canmodule__wrapper_8cpp" startline="147" endline="153">myUserHandler1</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a19a3db70e831ef946db7948e6cb7ebae" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx2</definition>
        <argsstring></argsstring>
        <name>reception_mtx2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="33" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="33" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a8d9a98bb375b5e23917e4167228db82d" compoundref="canmodule__wrapper_8cpp" startline="154" endline="160">myUserHandler2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a4271ddd144d9c22a586d92d9fe123476" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond2</definition>
        <argsstring></argsstring>
        <name>reception_cond2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="33" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="33" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a8d9a98bb375b5e23917e4167228db82d" compoundref="canmodule__wrapper_8cpp" startline="154" endline="160">myUserHandler2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a5256771c6c6af33e299c9c85720bd9b5" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx3</definition>
        <argsstring></argsstring>
        <name>reception_mtx3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="34" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="34" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a8a412ea2b9be94758e3fbf8f99f63989" compoundref="canmodule__wrapper_8cpp" startline="161" endline="167">myUserHandler3</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a0b29e5e0a2531e2632699298222647c5" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond3</definition>
        <argsstring></argsstring>
        <name>reception_cond3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="34" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="34" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a8a412ea2b9be94758e3fbf8f99f63989" compoundref="canmodule__wrapper_8cpp" startline="161" endline="167">myUserHandler3</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1ab92db4f19a9b79501aa5c8ca72764360" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx4</definition>
        <argsstring></argsstring>
        <name>reception_mtx4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="35" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="35" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1ae36fe0d1976785621770b4e3a3a2f022" compoundref="canmodule__wrapper_8cpp" startline="168" endline="174">myUserHandler4</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a6c0f68c41481427d54e128111b984ed8" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond4</definition>
        <argsstring></argsstring>
        <name>reception_cond4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="35" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="35" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1ae36fe0d1976785621770b4e3a3a2f022" compoundref="canmodule__wrapper_8cpp" startline="168" endline="174">myUserHandler4</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1afc58d38b170c3fef1f42872c1c711870" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx5</definition>
        <argsstring></argsstring>
        <name>reception_mtx5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="36" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="36" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a672814a85db13a759e0e5c7896359734" compoundref="canmodule__wrapper_8cpp" startline="175" endline="181">myUserHandler5</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1ab7c2f335ca2b48237a33f3e33618b5d1" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond5</definition>
        <argsstring></argsstring>
        <name>reception_cond5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="36" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="36" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a672814a85db13a759e0e5c7896359734" compoundref="canmodule__wrapper_8cpp" startline="175" endline="181">myUserHandler5</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a0083d75e0111f8214259f6ed175bfacb" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx6</definition>
        <argsstring></argsstring>
        <name>reception_mtx6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="37" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="37" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1af882506f0473ebcf59193b06ed1bfd20" compoundref="canmodule__wrapper_8cpp" startline="182" endline="188">myUserHandler6</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1aaa125323603823b2a59b278cb8c10ad0" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond6</definition>
        <argsstring></argsstring>
        <name>reception_cond6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="37" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="37" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1af882506f0473ebcf59193b06ed1bfd20" compoundref="canmodule__wrapper_8cpp" startline="182" endline="188">myUserHandler6</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a6cdb7a324a438bc7da5de93e78f65a44" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx7</definition>
        <argsstring></argsstring>
        <name>reception_mtx7</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="38" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="38" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a7d0f2c128bc7f98b1f2fc4ab692acdd9" compoundref="canmodule__wrapper_8cpp" startline="189" endline="195">myUserHandler7</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a3f56c87445b7b4712f13d7cb34a72b15" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond7</definition>
        <argsstring></argsstring>
        <name>reception_cond7</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="38" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="38" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a7d0f2c128bc7f98b1f2fc4ab692acdd9" compoundref="canmodule__wrapper_8cpp" startline="189" endline="195">myUserHandler7</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1ab09b51031c98224ff2582388d32dbd4e" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx8</definition>
        <argsstring></argsstring>
        <name>reception_mtx8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="39" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="39" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1af8ae68234a4417c6a75bc972f7587fa7" compoundref="canmodule__wrapper_8cpp" startline="196" endline="202">myUserHandler8</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1adf9fbd8b9f7b3b53eea2f0f9a5760c90" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond8</definition>
        <argsstring></argsstring>
        <name>reception_cond8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="39" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="39" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1af8ae68234a4417c6a75bc972f7587fa7" compoundref="canmodule__wrapper_8cpp" startline="196" endline="202">myUserHandler8</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a29c9f9e8a8cad4063ea5857c66b92c5e" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx9</definition>
        <argsstring></argsstring>
        <name>reception_mtx9</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="40" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="40" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a7caf49e5654ea59a928c5c1e124ca623" compoundref="canmodule__wrapper_8cpp" startline="203" endline="209">myUserHandler9</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1ae2d7f292f7488d01c92f15985be09572" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond9</definition>
        <argsstring></argsstring>
        <name>reception_cond9</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="40" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="40" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a7caf49e5654ea59a928c5c1e124ca623" compoundref="canmodule__wrapper_8cpp" startline="203" endline="209">myUserHandler9</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a8b129716b23d932845c6186c3ec029f8" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx10</definition>
        <argsstring></argsstring>
        <name>reception_mtx10</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="41" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="41" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1aa2e9edaf7bf96dbf37d3ecde32e88ada" compoundref="canmodule__wrapper_8cpp" startline="210" endline="216">myUserHandler10</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a3e0bbc9181caa85f868d2fd2eb88d827" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond10</definition>
        <argsstring></argsstring>
        <name>reception_cond10</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="41" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="41" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1aa2e9edaf7bf96dbf37d3ecde32e88ada" compoundref="canmodule__wrapper_8cpp" startline="210" endline="216">myUserHandler10</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1af29d4db6e03a1c9628ffd6c6b8ac67b4" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx11</definition>
        <argsstring></argsstring>
        <name>reception_mtx11</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="42" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="42" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a203eae36ea11ab8beee391759e383116" compoundref="canmodule__wrapper_8cpp" startline="217" endline="223">myUserHandler11</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a89c38d3167e6c2bfb3c890d7e6dfd612" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond11</definition>
        <argsstring></argsstring>
        <name>reception_cond11</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="42" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="42" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a203eae36ea11ab8beee391759e383116" compoundref="canmodule__wrapper_8cpp" startline="217" endline="223">myUserHandler11</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1aeea85420dfcda3072bcc4b573e1fb3ad" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx12</definition>
        <argsstring></argsstring>
        <name>reception_mtx12</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="43" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="43" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a86412e7ec2af43e4ddde98af880e5463" compoundref="canmodule__wrapper_8cpp" startline="224" endline="230">myUserHandler12</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1ae638c38ded1576fd744fb61f110d4fc9" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond12</definition>
        <argsstring></argsstring>
        <name>reception_cond12</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="43" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="43" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a86412e7ec2af43e4ddde98af880e5463" compoundref="canmodule__wrapper_8cpp" startline="224" endline="230">myUserHandler12</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1aefedb7e42e884092080f74f02e7cf240" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx13</definition>
        <argsstring></argsstring>
        <name>reception_mtx13</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="44" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="44" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1accfea38d4ef6cf1adb7f29a87a381c45" compoundref="canmodule__wrapper_8cpp" startline="231" endline="237">myUserHandler13</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a851c07a40ba2aaa7365a8ce339bd2634" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond13</definition>
        <argsstring></argsstring>
        <name>reception_cond13</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="44" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="44" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1accfea38d4ef6cf1adb7f29a87a381c45" compoundref="canmodule__wrapper_8cpp" startline="231" endline="237">myUserHandler13</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1aa2e9f45e06d06b756c8e861e45531b56" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx14</definition>
        <argsstring></argsstring>
        <name>reception_mtx14</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="45" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="45" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1aea2a5f96b3137e0c77439dcda11b4139" compoundref="canmodule__wrapper_8cpp" startline="238" endline="244">myUserHandler14</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1af91ff7e198193bbbe93b31b3128021b8" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond14</definition>
        <argsstring></argsstring>
        <name>reception_cond14</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="45" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="45" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1aea2a5f96b3137e0c77439dcda11b4139" compoundref="canmodule__wrapper_8cpp" startline="238" endline="244">myUserHandler14</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a0cbc15fc736e7d9fbe34a03e18584705" prot="public" static="no" mutable="no">
        <type>boost::mutex</type>
        <definition>boost::mutex reception_mtx15</definition>
        <argsstring></argsstring>
        <name>reception_mtx15</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="46" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="46" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a7fddde7971ed0ad3524ec2135f1dea04" compoundref="canmodule__wrapper_8cpp" startline="245" endline="251">myUserHandler15</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a444ac615d1e82962547e4f5efb0a2aa2" prot="public" static="no" mutable="no">
        <type>boost::condition_variable_any</type>
        <definition>boost::condition_variable_any reception_cond15</definition>
        <argsstring></argsstring>
        <name>reception_cond15</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="46" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="46" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a7fddde7971ed0ad3524ec2135f1dea04" compoundref="canmodule__wrapper_8cpp" startline="245" endline="251">myUserHandler15</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structCAN__CONNECTION__t" kindref="compound">CAN_CONNECTION_t</ref> &gt;</type>
        <definition>std::vector&lt;CAN_CONNECTION_t&gt; _connection_v</definition>
        <argsstring></argsstring>
        <name>_connection_v</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="47" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="47" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1ac2fb08a3b85d67b3bde3374493428657" compoundref="canmodule__wrapper_8cpp" startline="546" endline="558">canmodule_delete</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a3f5b9ce8e79c0746a9c78b5d333e6f59" compoundref="canmodule__wrapper_8cpp" startline="413" endline="430">canmodule_send</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a5722e15efde92795076c1f4de794c6ac" compoundref="canmodule__wrapper_8cpp" startline="111" endline="117">canmodule_setDelay_us</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a1cb4853346cc0c0a083b1f729c1a2043" compoundref="canmodule__wrapper_8cpp" startline="254" endline="262">canmodule_testSignalSlot</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" compoundref="canmodule__wrapper_8cpp" startline="505" endline="544">canmodule_waitForNewCanMessage</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a6d635e7497e25d5788dcbf03125b0909" compoundref="canmodule__wrapper_8cpp" startline="134" endline="146">myUserHandler0</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1ad360ca6338143d5c11a4531660b24ac0" compoundref="canmodule__wrapper_8cpp" startline="147" endline="153">myUserHandler1</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1aa2e9edaf7bf96dbf37d3ecde32e88ada" compoundref="canmodule__wrapper_8cpp" startline="210" endline="216">myUserHandler10</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a203eae36ea11ab8beee391759e383116" compoundref="canmodule__wrapper_8cpp" startline="217" endline="223">myUserHandler11</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a86412e7ec2af43e4ddde98af880e5463" compoundref="canmodule__wrapper_8cpp" startline="224" endline="230">myUserHandler12</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1accfea38d4ef6cf1adb7f29a87a381c45" compoundref="canmodule__wrapper_8cpp" startline="231" endline="237">myUserHandler13</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1aea2a5f96b3137e0c77439dcda11b4139" compoundref="canmodule__wrapper_8cpp" startline="238" endline="244">myUserHandler14</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a7fddde7971ed0ad3524ec2135f1dea04" compoundref="canmodule__wrapper_8cpp" startline="245" endline="251">myUserHandler15</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a8d9a98bb375b5e23917e4167228db82d" compoundref="canmodule__wrapper_8cpp" startline="154" endline="160">myUserHandler2</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a8a412ea2b9be94758e3fbf8f99f63989" compoundref="canmodule__wrapper_8cpp" startline="161" endline="167">myUserHandler3</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1ae36fe0d1976785621770b4e3a3a2f022" compoundref="canmodule__wrapper_8cpp" startline="168" endline="174">myUserHandler4</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a672814a85db13a759e0e5c7896359734" compoundref="canmodule__wrapper_8cpp" startline="175" endline="181">myUserHandler5</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1af882506f0473ebcf59193b06ed1bfd20" compoundref="canmodule__wrapper_8cpp" startline="182" endline="188">myUserHandler6</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a7d0f2c128bc7f98b1f2fc4ab692acdd9" compoundref="canmodule__wrapper_8cpp" startline="189" endline="195">myUserHandler7</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1af8ae68234a4417c6a75bc972f7587fa7" compoundref="canmodule__wrapper_8cpp" startline="196" endline="202">myUserHandler8</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a7caf49e5654ea59a928c5c1e124ca623" compoundref="canmodule__wrapper_8cpp" startline="203" endline="209">myUserHandler9</referencedby>
      </memberdef>
      <memberdef kind="variable" id="canmodule__wrapper_8cpp_1ae0253b00a2913d2b61a81c983bfbd822" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int canmodule_delay_default</definition>
        <argsstring></argsstring>
        <name>canmodule_delay_default</name>
        <initializer>= 1000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SYSTEC: basically the baud rate can be set, default is 250000.</para><para>Under linux you can&apos;t set this on the bridge alone. The speed has to be set on the usb level for the usb-can subsystem, for each can port, and both should correspond. Already you should have see the subsystems: systemctl -a | grep can sys-subsystem-net-devices-can0.device loaded active plugged Mutiport_CAN-to-USB sys-subsystem-net-devices-can1.device loaded active plugged Mutiport_CAN-to-USB sys-subsystem-net-devices-can2.device loaded active plugged Mutiport_CAN-to-USB sys-subsystem-net-devices-can3.device loaded active plugged Mutiport_CAN-to-USB sys-subsystem-net-devices-can4.device loaded active plugged Mutiport_CAN-to-USB sys-subsystem-net-devices-can5.device loaded active plugged Mutiport_CAN-to-USB sys-subsystem-net-devices-can6.device loaded active plugged Mutiport_CAN-to-USB sys-subsystem-net-devices-can7.device</para><para>Then, to set the port speed for i.e. can0: sudo ip link set can0 type can bitrate 250000 ANAGATE: name = bus name = 3 parameters separated by &quot;:&quot; line &quot;n0:n1:n2&quot; n0 = &quot;an&quot; for anagate n1 = port number on the module, 0=A, 1=B, etc etc n2 = ip number ex.: &quot;an:1:137.138.12.99&quot; speaks to port B (=1) on anagate module at the ip</para><para>parameters = up to 6 parameters separated by whitespaces : &quot;p0 p1 p2 p3 p4 p5&quot; in THAT order, positive integers see module documentation for the exact meaning <ulink url="http://www.anagate.de/download/Manual-AnaGateCAN-duo-en.pdf">http://www.anagate.de/download/Manual-AnaGateCAN-duo-en.pdf</ulink> p0 = baud rate, 125000 or whatever the module supports p1 = operation mode p2 = termination p3 = high speed p4 = time stamp p5 = sync mode</para><para>advanced settings: reception timer interval=500us is good. default=3000us, that does not work at first attempt. must reopen the connection once this is changed. Anyway, the firmware reboots and that made it work. Now also works with 3000us. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="96" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="96" bodyend="-1"/>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _canmodule_slowDown</definition>
        <argsstring>(int connectionIndex)</argsstring>
        <name>_canmodule_slowDown</name>
        <param>
          <type>int</type>
          <declname>connectionIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="98" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="98" bodyend="109"/>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" compoundref="canmodule__wrapper_8cpp" startline="23">CONNECTION_INDEX_MAX</references>
        <references refid="canmodule__wrapper_8cpp_1a2eb006bb00711238d0c51ef70240c03c" compoundref="canmodule__wrapper_8cpp" startline="22">CONNECTION_INDEX_MIN</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a3f5b9ce8e79c0746a9c78b5d333e6f59" compoundref="canmodule__wrapper_8cpp" startline="413" endline="430">canmodule_send</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a6d635e7497e25d5788dcbf03125b0909" compoundref="canmodule__wrapper_8cpp" startline="134" endline="146">myUserHandler0</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1ad360ca6338143d5c11a4531660b24ac0" compoundref="canmodule__wrapper_8cpp" startline="147" endline="153">myUserHandler1</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1aa2e9edaf7bf96dbf37d3ecde32e88ada" compoundref="canmodule__wrapper_8cpp" startline="210" endline="216">myUserHandler10</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a203eae36ea11ab8beee391759e383116" compoundref="canmodule__wrapper_8cpp" startline="217" endline="223">myUserHandler11</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a86412e7ec2af43e4ddde98af880e5463" compoundref="canmodule__wrapper_8cpp" startline="224" endline="230">myUserHandler12</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1accfea38d4ef6cf1adb7f29a87a381c45" compoundref="canmodule__wrapper_8cpp" startline="231" endline="237">myUserHandler13</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1aea2a5f96b3137e0c77439dcda11b4139" compoundref="canmodule__wrapper_8cpp" startline="238" endline="244">myUserHandler14</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a7fddde7971ed0ad3524ec2135f1dea04" compoundref="canmodule__wrapper_8cpp" startline="245" endline="251">myUserHandler15</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a8d9a98bb375b5e23917e4167228db82d" compoundref="canmodule__wrapper_8cpp" startline="154" endline="160">myUserHandler2</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a8a412ea2b9be94758e3fbf8f99f63989" compoundref="canmodule__wrapper_8cpp" startline="161" endline="167">myUserHandler3</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1ae36fe0d1976785621770b4e3a3a2f022" compoundref="canmodule__wrapper_8cpp" startline="168" endline="174">myUserHandler4</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a672814a85db13a759e0e5c7896359734" compoundref="canmodule__wrapper_8cpp" startline="175" endline="181">myUserHandler5</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1af882506f0473ebcf59193b06ed1bfd20" compoundref="canmodule__wrapper_8cpp" startline="182" endline="188">myUserHandler6</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a7d0f2c128bc7f98b1f2fc4ab692acdd9" compoundref="canmodule__wrapper_8cpp" startline="189" endline="195">myUserHandler7</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1af8ae68234a4417c6a75bc972f7587fa7" compoundref="canmodule__wrapper_8cpp" startline="196" endline="202">myUserHandler8</referencedby>
        <referencedby refid="canmodule__wrapper_8cpp_1a7caf49e5654ea59a928c5c1e124ca623" compoundref="canmodule__wrapper_8cpp" startline="203" endline="209">myUserHandler9</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a5722e15efde92795076c1f4de794c6ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void canmodule_setDelay_us</definition>
        <argsstring>(int connectionIndex, unsigned int dd)</argsstring>
        <name>canmodule_setDelay_us</name>
        <param>
          <type>int</type>
          <declname>connectionIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="111" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="111" bodyend="117"/>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" compoundref="canmodule__wrapper_8cpp" startline="23">CONNECTION_INDEX_MAX</references>
        <references refid="canmodule__wrapper_8cpp_1a2eb006bb00711238d0c51ef70240c03c" compoundref="canmodule__wrapper_8cpp" startline="22">CONNECTION_INDEX_MIN</references>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a6d635e7497e25d5788dcbf03125b0909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler0</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler0</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The user-handlerX gets invoked each time there is a new can message on connectionX, according to HW sync. We put this message into a buffer, protect it from the wait, and notify the wait that the new msg can be picked up. Using boost for sync.</para><para>this handler must be connected to the <ref refid="namespaceCanModule" kindref="compound">CanModule</ref> access point by this wrapper in the canmodule_init call, and this is hardcoded. We can have only static mutexes and cond_vars, therefore we have to decide BEFORE compile-time how many reception threads we want. While in principle we can have a big number easily, let&apos;s limit the number of connections ( PC port or ip-number &amp;&amp; CAN port ) we can have PER TASK to 16. This corresponds to 16 CAN buses, using i.e. one systec16 module or 8 anagate-duos.</para><para>The user can conveniently pick up the new message from the waitForNewMessage call which blocks until new reception. Just a separate thread or whatever sequence is needed for the blocking reception call, the user can implement whatever scheme she likes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="134" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="134" bodyend="146"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" compoundref="CanMessage_8h" startline="29">CanMsgStruct::c_data</references>
        <references refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" compoundref="CanMessage_8h" startline="23">CanMsgStruct::c_id</references>
        <references refid="canmodule__wrapper_8cpp_1a6f918d3da1aa14fc5c0a02d501fd46f2" compoundref="canmodule__wrapper_8cpp" startline="31">reception_cond0</references>
        <references refid="canmodule__wrapper_8cpp_1aa9f4b1208b6394678f5e0d1f1e7e36b1" compoundref="canmodule__wrapper_8cpp" startline="31">reception_mtx0</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1ad360ca6338143d5c11a4531660b24ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler1</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler1</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="147" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="147" bodyend="153"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1ab7cd61f650c5036e31b54e5ef3156abd" compoundref="canmodule__wrapper_8cpp" startline="32">reception_cond1</references>
        <references refid="canmodule__wrapper_8cpp_1a7bf12edd06a1ab049ba210997fb50175" compoundref="canmodule__wrapper_8cpp" startline="32">reception_mtx1</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a8d9a98bb375b5e23917e4167228db82d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler2</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler2</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="154" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="154" bodyend="160"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1a4271ddd144d9c22a586d92d9fe123476" compoundref="canmodule__wrapper_8cpp" startline="33">reception_cond2</references>
        <references refid="canmodule__wrapper_8cpp_1a19a3db70e831ef946db7948e6cb7ebae" compoundref="canmodule__wrapper_8cpp" startline="33">reception_mtx2</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a8a412ea2b9be94758e3fbf8f99f63989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler3</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler3</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="161" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="161" bodyend="167"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1a0b29e5e0a2531e2632699298222647c5" compoundref="canmodule__wrapper_8cpp" startline="34">reception_cond3</references>
        <references refid="canmodule__wrapper_8cpp_1a5256771c6c6af33e299c9c85720bd9b5" compoundref="canmodule__wrapper_8cpp" startline="34">reception_mtx3</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1ae36fe0d1976785621770b4e3a3a2f022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler4</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler4</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="168" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="168" bodyend="174"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1a6c0f68c41481427d54e128111b984ed8" compoundref="canmodule__wrapper_8cpp" startline="35">reception_cond4</references>
        <references refid="canmodule__wrapper_8cpp_1ab92db4f19a9b79501aa5c8ca72764360" compoundref="canmodule__wrapper_8cpp" startline="35">reception_mtx4</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a672814a85db13a759e0e5c7896359734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler5</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler5</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="175" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="175" bodyend="181"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1ab7c2f335ca2b48237a33f3e33618b5d1" compoundref="canmodule__wrapper_8cpp" startline="36">reception_cond5</references>
        <references refid="canmodule__wrapper_8cpp_1afc58d38b170c3fef1f42872c1c711870" compoundref="canmodule__wrapper_8cpp" startline="36">reception_mtx5</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1af882506f0473ebcf59193b06ed1bfd20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler6</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler6</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="182" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="182" bodyend="188"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1aaa125323603823b2a59b278cb8c10ad0" compoundref="canmodule__wrapper_8cpp" startline="37">reception_cond6</references>
        <references refid="canmodule__wrapper_8cpp_1a0083d75e0111f8214259f6ed175bfacb" compoundref="canmodule__wrapper_8cpp" startline="37">reception_mtx6</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a7d0f2c128bc7f98b1f2fc4ab692acdd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler7</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler7</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="189" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="189" bodyend="195"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1a3f56c87445b7b4712f13d7cb34a72b15" compoundref="canmodule__wrapper_8cpp" startline="38">reception_cond7</references>
        <references refid="canmodule__wrapper_8cpp_1a6cdb7a324a438bc7da5de93e78f65a44" compoundref="canmodule__wrapper_8cpp" startline="38">reception_mtx7</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1af8ae68234a4417c6a75bc972f7587fa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler8</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler8</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="196" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="196" bodyend="202"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1adf9fbd8b9f7b3b53eea2f0f9a5760c90" compoundref="canmodule__wrapper_8cpp" startline="39">reception_cond8</references>
        <references refid="canmodule__wrapper_8cpp_1ab09b51031c98224ff2582388d32dbd4e" compoundref="canmodule__wrapper_8cpp" startline="39">reception_mtx8</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a7caf49e5654ea59a928c5c1e124ca623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler9</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler9</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="203" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="203" bodyend="209"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1ae2d7f292f7488d01c92f15985be09572" compoundref="canmodule__wrapper_8cpp" startline="40">reception_cond9</references>
        <references refid="canmodule__wrapper_8cpp_1a29c9f9e8a8cad4063ea5857c66b92c5e" compoundref="canmodule__wrapper_8cpp" startline="40">reception_mtx9</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1aa2e9edaf7bf96dbf37d3ecde32e88ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler10</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler10</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="210" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="210" bodyend="216"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1a3e0bbc9181caa85f868d2fd2eb88d827" compoundref="canmodule__wrapper_8cpp" startline="41">reception_cond10</references>
        <references refid="canmodule__wrapper_8cpp_1a8b129716b23d932845c6186c3ec029f8" compoundref="canmodule__wrapper_8cpp" startline="41">reception_mtx10</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a203eae36ea11ab8beee391759e383116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler11</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler11</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="217" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="217" bodyend="223"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1a89c38d3167e6c2bfb3c890d7e6dfd612" compoundref="canmodule__wrapper_8cpp" startline="42">reception_cond11</references>
        <references refid="canmodule__wrapper_8cpp_1af29d4db6e03a1c9628ffd6c6b8ac67b4" compoundref="canmodule__wrapper_8cpp" startline="42">reception_mtx11</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a86412e7ec2af43e4ddde98af880e5463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler12</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler12</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="224" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="224" bodyend="230"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1ae638c38ded1576fd744fb61f110d4fc9" compoundref="canmodule__wrapper_8cpp" startline="43">reception_cond12</references>
        <references refid="canmodule__wrapper_8cpp_1aeea85420dfcda3072bcc4b573e1fb3ad" compoundref="canmodule__wrapper_8cpp" startline="43">reception_mtx12</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1accfea38d4ef6cf1adb7f29a87a381c45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler13</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler13</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="231" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="231" bodyend="237"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1a851c07a40ba2aaa7365a8ce339bd2634" compoundref="canmodule__wrapper_8cpp" startline="44">reception_cond13</references>
        <references refid="canmodule__wrapper_8cpp_1aefedb7e42e884092080f74f02e7cf240" compoundref="canmodule__wrapper_8cpp" startline="44">reception_mtx13</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1aea2a5f96b3137e0c77439dcda11b4139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler14</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler14</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="238" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="238" bodyend="244"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1af91ff7e198193bbbe93b31b3128021b8" compoundref="canmodule__wrapper_8cpp" startline="45">reception_cond14</references>
        <references refid="canmodule__wrapper_8cpp_1aa2e9f45e06d06b756c8e861e45531b56" compoundref="canmodule__wrapper_8cpp" startline="45">reception_mtx14</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a7fddde7971ed0ad3524ec2135f1dea04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myUserHandler15</definition>
        <argsstring>(const CanMsgStruct message)</argsstring>
        <name>myUserHandler15</name>
        <param>
          <type>const <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="245" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="245" bodyend="251"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1a444ac615d1e82962547e4f5efb0a2aa2" compoundref="canmodule__wrapper_8cpp" startline="46">reception_cond15</references>
        <references refid="canmodule__wrapper_8cpp_1a0cbc15fc736e7d9fbe34a03e18584705" compoundref="canmodule__wrapper_8cpp" startline="46">reception_mtx15</references>
        <referencedby refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" compoundref="canmodule__wrapper_8cpp" startline="280" endline="407">canmodule_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a1cb4853346cc0c0a083b1f729c1a2043" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void canmodule_testSignalSlot</definition>
        <argsstring>(int connectionIndex)</argsstring>
        <name>canmodule_testSignalSlot</name>
        <param>
          <type>int</type>
          <declname>connectionIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="254" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="254" bodyend="262"/>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" compoundref="canmodule__wrapper_8cpp" startline="23">CONNECTION_INDEX_MAX</references>
        <references refid="canmodule__wrapper_8cpp_1a2eb006bb00711238d0c51ef70240c03c" compoundref="canmodule__wrapper_8cpp" startline="22">CONNECTION_INDEX_MIN</references>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void canmodule_init</definition>
        <argsstring>(int connectionIndex, Log::LOG_LEVEL loglevel, vector&lt; string &gt; canmoduleParameters)</argsstring>
        <name>canmodule_init</name>
        <param>
          <type>int</type>
          <declname>connectionIndex</declname>
        </param>
        <param>
          <type>Log::LOG_LEVEL</type>
          <declname>loglevel</declname>
        </param>
        <param>
          <type>vector&lt; string &gt;</type>
          <declname>canmoduleParameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>connect one can access point=one CAN port for sending or receiving We need some parameters to set this up: canmoduleParameters [0]=vendor, &quot;an&quot;, &quot;st&quot; [1]=can port number then, according to vendor: st: [2]=usb port number [3]=systec parameters, i.e baudrate = &quot;250000&quot;</para><para>an: [2]=ip number [3]=anagate parameters = up to 6 integers separated by whitespaces, i.e. for bitrate=250kbit/s, opmode=normal, terminated=true, no high speed, no time stamp, sync mode=true &quot;250000 0 1 0 0 1&quot;; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="280" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="280" bodyend="407"/>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1ae0253b00a2913d2b61a81c983bfbd822" compoundref="canmodule__wrapper_8cpp" startline="96">canmodule_delay_default</references>
        <references refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" compoundref="canmodule__wrapper_8cpp" startline="23">CONNECTION_INDEX_MAX</references>
        <references refid="classCanModule_1_1CanLibLoader_1ab22f43105bfc9cab3c0749b83c867352" compoundref="CanLibLoader_8cpp" startline="45" endline="53">CanModule::CanLibLoader::createInstance</references>
        <references refid="structCAN__CONNECTION__t_1a28c64bd7c6af88c3bf92f318cc9c89a1" compoundref="canmodule__wrapper_8h" startline="80">CAN_CONNECTION_t::delay</references>
        <references refid="structCAN__CONNECTION__t_1a4307ead99fac10c9415801692a0e0bab" compoundref="canmodule__wrapper_8h" startline="77">CAN_CONNECTION_t::isConnected</references>
        <references refid="canmodule__wrapper_8cpp_1a6d635e7497e25d5788dcbf03125b0909" compoundref="canmodule__wrapper_8cpp" startline="134" endline="146">myUserHandler0</references>
        <references refid="canmodule__wrapper_8cpp_1ad360ca6338143d5c11a4531660b24ac0" compoundref="canmodule__wrapper_8cpp" startline="147" endline="153">myUserHandler1</references>
        <references refid="canmodule__wrapper_8cpp_1aa2e9edaf7bf96dbf37d3ecde32e88ada" compoundref="canmodule__wrapper_8cpp" startline="210" endline="216">myUserHandler10</references>
        <references refid="canmodule__wrapper_8cpp_1a203eae36ea11ab8beee391759e383116" compoundref="canmodule__wrapper_8cpp" startline="217" endline="223">myUserHandler11</references>
        <references refid="canmodule__wrapper_8cpp_1a86412e7ec2af43e4ddde98af880e5463" compoundref="canmodule__wrapper_8cpp" startline="224" endline="230">myUserHandler12</references>
        <references refid="canmodule__wrapper_8cpp_1accfea38d4ef6cf1adb7f29a87a381c45" compoundref="canmodule__wrapper_8cpp" startline="231" endline="237">myUserHandler13</references>
        <references refid="canmodule__wrapper_8cpp_1aea2a5f96b3137e0c77439dcda11b4139" compoundref="canmodule__wrapper_8cpp" startline="238" endline="244">myUserHandler14</references>
        <references refid="canmodule__wrapper_8cpp_1a7fddde7971ed0ad3524ec2135f1dea04" compoundref="canmodule__wrapper_8cpp" startline="245" endline="251">myUserHandler15</references>
        <references refid="canmodule__wrapper_8cpp_1a8d9a98bb375b5e23917e4167228db82d" compoundref="canmodule__wrapper_8cpp" startline="154" endline="160">myUserHandler2</references>
        <references refid="canmodule__wrapper_8cpp_1a8a412ea2b9be94758e3fbf8f99f63989" compoundref="canmodule__wrapper_8cpp" startline="161" endline="167">myUserHandler3</references>
        <references refid="canmodule__wrapper_8cpp_1ae36fe0d1976785621770b4e3a3a2f022" compoundref="canmodule__wrapper_8cpp" startline="168" endline="174">myUserHandler4</references>
        <references refid="canmodule__wrapper_8cpp_1a672814a85db13a759e0e5c7896359734" compoundref="canmodule__wrapper_8cpp" startline="175" endline="181">myUserHandler5</references>
        <references refid="canmodule__wrapper_8cpp_1af882506f0473ebcf59193b06ed1bfd20" compoundref="canmodule__wrapper_8cpp" startline="182" endline="188">myUserHandler6</references>
        <references refid="canmodule__wrapper_8cpp_1a7d0f2c128bc7f98b1f2fc4ab692acdd9" compoundref="canmodule__wrapper_8cpp" startline="189" endline="195">myUserHandler7</references>
        <references refid="canmodule__wrapper_8cpp_1af8ae68234a4417c6a75bc972f7587fa7" compoundref="canmodule__wrapper_8cpp" startline="196" endline="202">myUserHandler8</references>
        <references refid="canmodule__wrapper_8cpp_1a7caf49e5654ea59a928c5c1e124ca623" compoundref="canmodule__wrapper_8cpp" startline="203" endline="209">myUserHandler9</references>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a3f5b9ce8e79c0746a9c78b5d333e6f59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool canmodule_send</definition>
        <argsstring>(int connectionIndex, CanMessage cm)</argsstring>
        <name>canmodule_send</name>
        <param>
          <type>int</type>
          <declname>connectionIndex</declname>
        </param>
        <param>
          <type><ref refid="CanMessage_8h_1a03d03a5783fcae48487adf7c1ef990f3" kindref="member">CanMessage</ref></type>
          <declname>cm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>no error checking, we might throw exceptions instead. OK=false </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="413" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="413" bodyend="430"/>
        <references refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" compoundref="canmodule__wrapper_8cpp" startline="98" endline="109">_canmodule_slowDown</references>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" compoundref="CanMessage_8h" startline="29">CanMsgStruct::c_data</references>
        <references refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" compoundref="CanMessage_8h" startline="23">CanMsgStruct::c_id</references>
        <references refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" compoundref="canmodule__wrapper_8cpp" startline="23">CONNECTION_INDEX_MAX</references>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a8eb5e8091492123886eed92e99cd5bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="CanMessage_8h_1a03d03a5783fcae48487adf7c1ef990f3" kindref="member">CanMessage</ref></type>
        <definition>CanMessage canmodule_reformat2CanModuleMessage</definition>
        <argsstring>(can_frame m_in)</argsstring>
        <name>canmodule_reformat2CanModuleMessage</name>
        <param>
          <type>can_frame</type>
          <declname>m_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reformat a linux can frame to a CanMessage (<ref refid="namespaceCanModule" kindref="compound">CanModule</ref> format with extra tits and tats). Kind of stupid, but for cleanliness let&apos;s have it.</para><para>struct can_frame - basic CAN frame structure : CAN ID of the frame and CAN_*_FLAG flags, see canid_t definition : frame payload length in byte (0 .. 8) aka data length code N.B. the DLC field from ISO 11898-1 Chapter 8.4.2.3 has a 1:1 mapping of the &apos;data length code&apos; to the real payload length : CAN frame payload (up to 8 byte)</para><para>struct can_frame { canid_t can_id; 32 bit CAN_ID + EFF/RTR/ERR flags <bold>u8 can_dlc; frame payload length in byte (0 .. CAN_MAX_DLEN) __u8 data[CAN_MAX_DLEN] __attribute</bold>((aligned(8))); } ;</para><para>Struct that defines a Can Message, used by CCanAccess</para><para>typedef struct <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref> { //Identifier of the message long c_id; //Flags activated in the message unsigned char c_ff; //Length of the message unsigned char c_dlc; //Body of the message unsigned char c_data[8]; //Timestamp of the message struct timeval c_time; //Is the message a remote Transmission request? Must be true for remote request frames and false for data frames bool c_rtr; #ifdef __cplusplus public: <ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct()</ref> : c_id(0), c_ff(0), c_dlc(0), c_rtr(false) { /// todo memset, and message length &gt; 8 for extended CAN for (int i=0; i&lt;8; i++) c_data[i] = 0; } #endif //Be careful when using this struct from C</para><para>} CanMessage; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="482" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="482" bodyend="490"/>
        <references refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" compoundref="CanMessage_8h" startline="29">CanMsgStruct::c_data</references>
        <references refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" compoundref="CanMessage_8h" startline="27">CanMsgStruct::c_dlc</references>
        <references refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" compoundref="CanMessage_8h" startline="23">CanMsgStruct::c_id</references>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1a23b4a20be56e8585c6a1f78b943455f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>can_frame</type>
        <definition>can_frame canmodule_reformat2LinuxFrame</definition>
        <argsstring>(CanMessage m_in)</argsstring>
        <name>canmodule_reformat2LinuxFrame</name>
        <param>
          <type><ref refid="CanMessage_8h_1a03d03a5783fcae48487adf7c1ef990f3" kindref="member">CanMessage</ref></type>
          <declname>m_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="491" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="491" bodyend="498"/>
        <references refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" compoundref="CanMessage_8h" startline="29">CanMsgStruct::c_data</references>
        <references refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" compoundref="CanMessage_8h" startline="27">CanMsgStruct::c_dlc</references>
        <references refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" compoundref="CanMessage_8h" startline="23">CanMsgStruct::c_id</references>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="CanMessage_8h_1a03d03a5783fcae48487adf7c1ef990f3" kindref="member">CanMessage</ref></type>
        <definition>CanMessage canmodule_waitForNewCanMessage</definition>
        <argsstring>(int connectionIndex)</argsstring>
        <name>canmodule_waitForNewCanMessage</name>
        <param>
          <type>int</type>
          <declname>connectionIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>message reception. Wait until the buffer is refreshed, then copy the buffer and return it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="505" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="505" bodyend="544"/>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" compoundref="canmodule__wrapper_8cpp" startline="23">CONNECTION_INDEX_MAX</references>
        <references refid="canmodule__wrapper_8cpp_1a6f918d3da1aa14fc5c0a02d501fd46f2" compoundref="canmodule__wrapper_8cpp" startline="31">reception_cond0</references>
        <references refid="canmodule__wrapper_8cpp_1ab7cd61f650c5036e31b54e5ef3156abd" compoundref="canmodule__wrapper_8cpp" startline="32">reception_cond1</references>
        <references refid="canmodule__wrapper_8cpp_1a3e0bbc9181caa85f868d2fd2eb88d827" compoundref="canmodule__wrapper_8cpp" startline="41">reception_cond10</references>
        <references refid="canmodule__wrapper_8cpp_1a89c38d3167e6c2bfb3c890d7e6dfd612" compoundref="canmodule__wrapper_8cpp" startline="42">reception_cond11</references>
        <references refid="canmodule__wrapper_8cpp_1ae638c38ded1576fd744fb61f110d4fc9" compoundref="canmodule__wrapper_8cpp" startline="43">reception_cond12</references>
        <references refid="canmodule__wrapper_8cpp_1a851c07a40ba2aaa7365a8ce339bd2634" compoundref="canmodule__wrapper_8cpp" startline="44">reception_cond13</references>
        <references refid="canmodule__wrapper_8cpp_1af91ff7e198193bbbe93b31b3128021b8" compoundref="canmodule__wrapper_8cpp" startline="45">reception_cond14</references>
        <references refid="canmodule__wrapper_8cpp_1a444ac615d1e82962547e4f5efb0a2aa2" compoundref="canmodule__wrapper_8cpp" startline="46">reception_cond15</references>
        <references refid="canmodule__wrapper_8cpp_1a4271ddd144d9c22a586d92d9fe123476" compoundref="canmodule__wrapper_8cpp" startline="33">reception_cond2</references>
        <references refid="canmodule__wrapper_8cpp_1a0b29e5e0a2531e2632699298222647c5" compoundref="canmodule__wrapper_8cpp" startline="34">reception_cond3</references>
        <references refid="canmodule__wrapper_8cpp_1a6c0f68c41481427d54e128111b984ed8" compoundref="canmodule__wrapper_8cpp" startline="35">reception_cond4</references>
        <references refid="canmodule__wrapper_8cpp_1ab7c2f335ca2b48237a33f3e33618b5d1" compoundref="canmodule__wrapper_8cpp" startline="36">reception_cond5</references>
        <references refid="canmodule__wrapper_8cpp_1aaa125323603823b2a59b278cb8c10ad0" compoundref="canmodule__wrapper_8cpp" startline="37">reception_cond6</references>
        <references refid="canmodule__wrapper_8cpp_1a3f56c87445b7b4712f13d7cb34a72b15" compoundref="canmodule__wrapper_8cpp" startline="38">reception_cond7</references>
        <references refid="canmodule__wrapper_8cpp_1adf9fbd8b9f7b3b53eea2f0f9a5760c90" compoundref="canmodule__wrapper_8cpp" startline="39">reception_cond8</references>
        <references refid="canmodule__wrapper_8cpp_1ae2d7f292f7488d01c92f15985be09572" compoundref="canmodule__wrapper_8cpp" startline="40">reception_cond9</references>
        <references refid="canmodule__wrapper_8cpp_1aa9f4b1208b6394678f5e0d1f1e7e36b1" compoundref="canmodule__wrapper_8cpp" startline="31">reception_mtx0</references>
        <references refid="canmodule__wrapper_8cpp_1a7bf12edd06a1ab049ba210997fb50175" compoundref="canmodule__wrapper_8cpp" startline="32">reception_mtx1</references>
        <references refid="canmodule__wrapper_8cpp_1a8b129716b23d932845c6186c3ec029f8" compoundref="canmodule__wrapper_8cpp" startline="41">reception_mtx10</references>
        <references refid="canmodule__wrapper_8cpp_1af29d4db6e03a1c9628ffd6c6b8ac67b4" compoundref="canmodule__wrapper_8cpp" startline="42">reception_mtx11</references>
        <references refid="canmodule__wrapper_8cpp_1aeea85420dfcda3072bcc4b573e1fb3ad" compoundref="canmodule__wrapper_8cpp" startline="43">reception_mtx12</references>
        <references refid="canmodule__wrapper_8cpp_1aefedb7e42e884092080f74f02e7cf240" compoundref="canmodule__wrapper_8cpp" startline="44">reception_mtx13</references>
        <references refid="canmodule__wrapper_8cpp_1aa2e9f45e06d06b756c8e861e45531b56" compoundref="canmodule__wrapper_8cpp" startline="45">reception_mtx14</references>
        <references refid="canmodule__wrapper_8cpp_1a0cbc15fc736e7d9fbe34a03e18584705" compoundref="canmodule__wrapper_8cpp" startline="46">reception_mtx15</references>
        <references refid="canmodule__wrapper_8cpp_1a19a3db70e831ef946db7948e6cb7ebae" compoundref="canmodule__wrapper_8cpp" startline="33">reception_mtx2</references>
        <references refid="canmodule__wrapper_8cpp_1a5256771c6c6af33e299c9c85720bd9b5" compoundref="canmodule__wrapper_8cpp" startline="34">reception_mtx3</references>
        <references refid="canmodule__wrapper_8cpp_1ab92db4f19a9b79501aa5c8ca72764360" compoundref="canmodule__wrapper_8cpp" startline="35">reception_mtx4</references>
        <references refid="canmodule__wrapper_8cpp_1afc58d38b170c3fef1f42872c1c711870" compoundref="canmodule__wrapper_8cpp" startline="36">reception_mtx5</references>
        <references refid="canmodule__wrapper_8cpp_1a0083d75e0111f8214259f6ed175bfacb" compoundref="canmodule__wrapper_8cpp" startline="37">reception_mtx6</references>
        <references refid="canmodule__wrapper_8cpp_1a6cdb7a324a438bc7da5de93e78f65a44" compoundref="canmodule__wrapper_8cpp" startline="38">reception_mtx7</references>
        <references refid="canmodule__wrapper_8cpp_1ab09b51031c98224ff2582388d32dbd4e" compoundref="canmodule__wrapper_8cpp" startline="39">reception_mtx8</references>
        <references refid="canmodule__wrapper_8cpp_1a29c9f9e8a8cad4063ea5857c66b92c5e" compoundref="canmodule__wrapper_8cpp" startline="40">reception_mtx9</references>
      </memberdef>
      <memberdef kind="function" id="canmodule__wrapper_8cpp_1ac2fb08a3b85d67b3bde3374493428657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void canmodule_delete</definition>
        <argsstring>(int connectionIndex)</argsstring>
        <name>canmodule_delete</name>
        <param>
          <type>int</type>
          <declname>connectionIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" line="546" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp" bodystart="546" bodyend="558"/>
        <references refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" compoundref="canmodule__wrapper_8cpp" startline="47">_connection_v</references>
        <references refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" compoundref="canmodule__wrapper_8cpp" startline="23">CONNECTION_INDEX_MAX</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="17"><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/canmodule_wrapper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="canmodule__wrapper_8cpp_1a2eb006bb00711238d0c51ef70240c03c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONNECTION_INDEX_MIN<sp/>0</highlight></codeline>
<codeline lineno="23" refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CONNECTION_INDEX_MAX<sp/>15</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="canmodule__wrapper_8cpp_1aa9f4b1208b6394678f5e0d1f1e7e36b1" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1aa9f4b1208b6394678f5e0d1f1e7e36b1" kindref="member">reception_mtx0</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1a6f918d3da1aa14fc5c0a02d501fd46f2" kindref="member">reception_cond0</ref>;</highlight></codeline>
<codeline lineno="32" refid="canmodule__wrapper_8cpp_1a7bf12edd06a1ab049ba210997fb50175" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1a7bf12edd06a1ab049ba210997fb50175" kindref="member">reception_mtx1</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1ab7cd61f650c5036e31b54e5ef3156abd" kindref="member">reception_cond1</ref>;</highlight></codeline>
<codeline lineno="33" refid="canmodule__wrapper_8cpp_1a19a3db70e831ef946db7948e6cb7ebae" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1a19a3db70e831ef946db7948e6cb7ebae" kindref="member">reception_mtx2</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1a4271ddd144d9c22a586d92d9fe123476" kindref="member">reception_cond2</ref>;</highlight></codeline>
<codeline lineno="34" refid="canmodule__wrapper_8cpp_1a5256771c6c6af33e299c9c85720bd9b5" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1a5256771c6c6af33e299c9c85720bd9b5" kindref="member">reception_mtx3</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1a0b29e5e0a2531e2632699298222647c5" kindref="member">reception_cond3</ref>;</highlight></codeline>
<codeline lineno="35" refid="canmodule__wrapper_8cpp_1ab92db4f19a9b79501aa5c8ca72764360" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1ab92db4f19a9b79501aa5c8ca72764360" kindref="member">reception_mtx4</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1a6c0f68c41481427d54e128111b984ed8" kindref="member">reception_cond4</ref>;</highlight></codeline>
<codeline lineno="36" refid="canmodule__wrapper_8cpp_1afc58d38b170c3fef1f42872c1c711870" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1afc58d38b170c3fef1f42872c1c711870" kindref="member">reception_mtx5</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1ab7c2f335ca2b48237a33f3e33618b5d1" kindref="member">reception_cond5</ref>;</highlight></codeline>
<codeline lineno="37" refid="canmodule__wrapper_8cpp_1a0083d75e0111f8214259f6ed175bfacb" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1a0083d75e0111f8214259f6ed175bfacb" kindref="member">reception_mtx6</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1aaa125323603823b2a59b278cb8c10ad0" kindref="member">reception_cond6</ref>;</highlight></codeline>
<codeline lineno="38" refid="canmodule__wrapper_8cpp_1a6cdb7a324a438bc7da5de93e78f65a44" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1a6cdb7a324a438bc7da5de93e78f65a44" kindref="member">reception_mtx7</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1a3f56c87445b7b4712f13d7cb34a72b15" kindref="member">reception_cond7</ref>;</highlight></codeline>
<codeline lineno="39" refid="canmodule__wrapper_8cpp_1ab09b51031c98224ff2582388d32dbd4e" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1ab09b51031c98224ff2582388d32dbd4e" kindref="member">reception_mtx8</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1adf9fbd8b9f7b3b53eea2f0f9a5760c90" kindref="member">reception_cond8</ref>;</highlight></codeline>
<codeline lineno="40" refid="canmodule__wrapper_8cpp_1a29c9f9e8a8cad4063ea5857c66b92c5e" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1a29c9f9e8a8cad4063ea5857c66b92c5e" kindref="member">reception_mtx9</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1ae2d7f292f7488d01c92f15985be09572" kindref="member">reception_cond9</ref>;</highlight></codeline>
<codeline lineno="41" refid="canmodule__wrapper_8cpp_1a8b129716b23d932845c6186c3ec029f8" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1a8b129716b23d932845c6186c3ec029f8" kindref="member">reception_mtx10</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1a3e0bbc9181caa85f868d2fd2eb88d827" kindref="member">reception_cond10</ref>;</highlight></codeline>
<codeline lineno="42" refid="canmodule__wrapper_8cpp_1af29d4db6e03a1c9628ffd6c6b8ac67b4" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1af29d4db6e03a1c9628ffd6c6b8ac67b4" kindref="member">reception_mtx11</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1a89c38d3167e6c2bfb3c890d7e6dfd612" kindref="member">reception_cond11</ref>;</highlight></codeline>
<codeline lineno="43" refid="canmodule__wrapper_8cpp_1aeea85420dfcda3072bcc4b573e1fb3ad" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1aeea85420dfcda3072bcc4b573e1fb3ad" kindref="member">reception_mtx12</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1ae638c38ded1576fd744fb61f110d4fc9" kindref="member">reception_cond12</ref>;</highlight></codeline>
<codeline lineno="44" refid="canmodule__wrapper_8cpp_1aefedb7e42e884092080f74f02e7cf240" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1aefedb7e42e884092080f74f02e7cf240" kindref="member">reception_mtx13</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1a851c07a40ba2aaa7365a8ce339bd2634" kindref="member">reception_cond13</ref>;</highlight></codeline>
<codeline lineno="45" refid="canmodule__wrapper_8cpp_1aa2e9f45e06d06b756c8e861e45531b56" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1aa2e9f45e06d06b756c8e861e45531b56" kindref="member">reception_mtx14</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1af91ff7e198193bbbe93b31b3128021b8" kindref="member">reception_cond14</ref>;</highlight></codeline>
<codeline lineno="46" refid="canmodule__wrapper_8cpp_1a0cbc15fc736e7d9fbe34a03e18584705" refkind="member"><highlight class="normal">boost::mutex<sp/><ref refid="canmodule__wrapper_8cpp_1a0cbc15fc736e7d9fbe34a03e18584705" kindref="member">reception_mtx15</ref>;<sp/>boost::condition_variable_any<sp/><ref refid="canmodule__wrapper_8cpp_1a444ac615d1e82962547e4f5efb0a2aa2" kindref="member">reception_cond15</ref>;</highlight></codeline>
<codeline lineno="47" refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" refkind="member"><highlight class="normal">std::vector&lt;CAN_CONNECTION_t&gt;<sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="canmodule__wrapper_8cpp_1ae0253b00a2913d2b61a81c983bfbd822" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1ae0253b00a2913d2b61a81c983bfbd822" kindref="member">canmodule_delay_default</ref><sp/>=<sp/>1000000;<sp/></highlight><highlight class="comment">//<sp/>1kHz,<sp/>default,<sp/>works<sp/>for<sp/>iseg<sp/>systec<sp/>and<sp/>anagate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connectionIndex<sp/>){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>connectionIndex<sp/>&gt;=<sp/><ref refid="canmodule__wrapper_8cpp_1a2eb006bb00711238d0c51ef70240c03c" kindref="member">CONNECTION_INDEX_MIN</ref><sp/>&amp;&amp;<sp/>connectionIndex<sp/>&lt;=<sp/><ref refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" kindref="member">CONNECTION_INDEX_MAX</ref><sp/>){</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>tim,<sp/>tim2;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tim.tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tim.tv_nsec<sp/>=<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].delay;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nanosleep(&amp;tim<sp/>,<sp/>&amp;tim2)<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;nano<sp/>sleep<sp/>system<sp/>call<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connectionIndex<sp/>illegal,<sp/>[0...15]<sp/>allowed<sp/>only.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="canmodule__wrapper_8cpp_1a5722e15efde92795076c1f4de794c6ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8h_1ab33d59e710adfd13b4897bff30d45bcb" kindref="member">canmodule_setDelay_us</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connectionIndex,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dd<sp/>){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>connectionIndex<sp/>&gt;=<sp/><ref refid="canmodule__wrapper_8cpp_1a2eb006bb00711238d0c51ef70240c03c" kindref="member">CONNECTION_INDEX_MIN</ref><sp/>&amp;&amp;<sp/>connectionIndex<sp/>&lt;=<sp/><ref refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" kindref="member">CONNECTION_INDEX_MAX</ref><sp/>){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].delay<sp/>=<sp/>dd;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connectionIndex<sp/>illegal,<sp/>[0...15]<sp/>allowed<sp/>only.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="canmodule__wrapper_8cpp_1a6d635e7497e25d5788dcbf03125b0909" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1a6d635e7497e25d5788dcbf03125b0909" kindref="member">myUserHandler0</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connectionIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>received<sp/>a<sp/>message<sp/>[id=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>message.<ref refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" kindref="member">c_id</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>data0=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)<sp/>message.<ref refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" kindref="member">c_data</ref>[<sp/>0<sp/>]</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>connectionIndex=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>connectionIndex;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>connectionIndex<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1aa9f4b1208b6394678f5e0d1f1e7e36b1" kindref="member">reception_mtx0</ref>};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>new<sp/>message<sp/>copied,<sp/>notify_all<sp/>connectionIndex=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>connectionIndex;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a6f918d3da1aa14fc5c0a02d501fd46f2" kindref="member">reception_cond0</ref>.notify_all();</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147" refid="canmodule__wrapper_8cpp_1ad360ca6338143d5c11a4531660b24ac0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1ad360ca6338143d5c11a4531660b24ac0" kindref="member">myUserHandler1</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1a7bf12edd06a1ab049ba210997fb50175" kindref="member">reception_mtx1</ref>};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>1<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>1<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1ab7cd61f650c5036e31b54e5ef3156abd" kindref="member">reception_cond1</ref>.notify_all();</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154" refid="canmodule__wrapper_8cpp_1a8d9a98bb375b5e23917e4167228db82d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1a8d9a98bb375b5e23917e4167228db82d" kindref="member">myUserHandler2</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1a19a3db70e831ef946db7948e6cb7ebae" kindref="member">reception_mtx2</ref>};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>2<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>2<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a4271ddd144d9c22a586d92d9fe123476" kindref="member">reception_cond2</ref>.notify_all();</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161" refid="canmodule__wrapper_8cpp_1a8a412ea2b9be94758e3fbf8f99f63989" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1a8a412ea2b9be94758e3fbf8f99f63989" kindref="member">myUserHandler3</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1a5256771c6c6af33e299c9c85720bd9b5" kindref="member">reception_mtx3</ref>};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>3<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>3<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a0b29e5e0a2531e2632699298222647c5" kindref="member">reception_cond3</ref>.notify_all();</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168" refid="canmodule__wrapper_8cpp_1ae36fe0d1976785621770b4e3a3a2f022" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1ae36fe0d1976785621770b4e3a3a2f022" kindref="member">myUserHandler4</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1ab92db4f19a9b79501aa5c8ca72764360" kindref="member">reception_mtx4</ref>};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>4<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>4<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a6c0f68c41481427d54e128111b984ed8" kindref="member">reception_cond4</ref>.notify_all();</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175" refid="canmodule__wrapper_8cpp_1a672814a85db13a759e0e5c7896359734" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1a672814a85db13a759e0e5c7896359734" kindref="member">myUserHandler5</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>5<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1afc58d38b170c3fef1f42872c1c711870" kindref="member">reception_mtx5</ref>};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>5<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>5<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1ab7c2f335ca2b48237a33f3e33618b5d1" kindref="member">reception_cond5</ref>.notify_all();</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182" refid="canmodule__wrapper_8cpp_1af882506f0473ebcf59193b06ed1bfd20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1af882506f0473ebcf59193b06ed1bfd20" kindref="member">myUserHandler6</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1a0083d75e0111f8214259f6ed175bfacb" kindref="member">reception_mtx6</ref>};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>6<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>6<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1aaa125323603823b2a59b278cb8c10ad0" kindref="member">reception_cond6</ref>.notify_all();</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189" refid="canmodule__wrapper_8cpp_1a7d0f2c128bc7f98b1f2fc4ab692acdd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1a7d0f2c128bc7f98b1f2fc4ab692acdd9" kindref="member">myUserHandler7</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>7<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1a6cdb7a324a438bc7da5de93e78f65a44" kindref="member">reception_mtx7</ref>};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>7<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>7<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a3f56c87445b7b4712f13d7cb34a72b15" kindref="member">reception_cond7</ref>.notify_all();</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196" refid="canmodule__wrapper_8cpp_1af8ae68234a4417c6a75bc972f7587fa7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1af8ae68234a4417c6a75bc972f7587fa7" kindref="member">myUserHandler8</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>8<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1ab09b51031c98224ff2582388d32dbd4e" kindref="member">reception_mtx8</ref>};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>8<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>8<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1adf9fbd8b9f7b3b53eea2f0f9a5760c90" kindref="member">reception_cond8</ref>.notify_all();</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203" refid="canmodule__wrapper_8cpp_1a7caf49e5654ea59a928c5c1e124ca623" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1a7caf49e5654ea59a928c5c1e124ca623" kindref="member">myUserHandler9</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>9<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1a29c9f9e8a8cad4063ea5857c66b92c5e" kindref="member">reception_mtx9</ref>};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>9<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>9<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1ae2d7f292f7488d01c92f15985be09572" kindref="member">reception_cond9</ref>.notify_all();</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210" refid="canmodule__wrapper_8cpp_1aa2e9edaf7bf96dbf37d3ecde32e88ada" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1aa2e9edaf7bf96dbf37d3ecde32e88ada" kindref="member">myUserHandler10</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1a8b129716b23d932845c6186c3ec029f8" kindref="member">reception_mtx10</ref>};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>10<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>10<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a3e0bbc9181caa85f868d2fd2eb88d827" kindref="member">reception_cond10</ref>.notify_all();</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217" refid="canmodule__wrapper_8cpp_1a203eae36ea11ab8beee391759e383116" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1a203eae36ea11ab8beee391759e383116" kindref="member">myUserHandler11</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>11<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1af29d4db6e03a1c9628ffd6c6b8ac67b4" kindref="member">reception_mtx11</ref>};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>11<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>11<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a89c38d3167e6c2bfb3c890d7e6dfd612" kindref="member">reception_cond11</ref>.notify_all();</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224" refid="canmodule__wrapper_8cpp_1a86412e7ec2af43e4ddde98af880e5463" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1a86412e7ec2af43e4ddde98af880e5463" kindref="member">myUserHandler12</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>12<sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1aeea85420dfcda3072bcc4b573e1fb3ad" kindref="member">reception_mtx12</ref>};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>12<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>12<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1ae638c38ded1576fd744fb61f110d4fc9" kindref="member">reception_cond12</ref>.notify_all();</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231" refid="canmodule__wrapper_8cpp_1accfea38d4ef6cf1adb7f29a87a381c45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1accfea38d4ef6cf1adb7f29a87a381c45" kindref="member">myUserHandler13</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>13<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1aefedb7e42e884092080f74f02e7cf240" kindref="member">reception_mtx13</ref>};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>13<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>13<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a851c07a40ba2aaa7365a8ce339bd2634" kindref="member">reception_cond13</ref>.notify_all();</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238" refid="canmodule__wrapper_8cpp_1aea2a5f96b3137e0c77439dcda11b4139" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1aea2a5f96b3137e0c77439dcda11b4139" kindref="member">myUserHandler14</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>14<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1aa2e9f45e06d06b756c8e861e45531b56" kindref="member">reception_mtx14</ref>};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>14<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>14<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1af91ff7e198193bbbe93b31b3128021b8" kindref="member">reception_cond14</ref>.notify_all();</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245" refid="canmodule__wrapper_8cpp_1a7fddde7971ed0ad3524ec2135f1dea04" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8cpp_1a7fddde7971ed0ad3524ec2135f1dea04" kindref="member">myUserHandler15</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMsgStruct</ref></highlight><highlight class="comment">/*&amp;*/</highlight><highlight class="normal"><sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>15<sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<ref refid="canmodule__wrapper_8cpp_1a0cbc15fc736e7d9fbe34a03e18584705" kindref="member">reception_mtx15</ref>};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>15<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>15<sp/>].reception.receivedMessageBuffer<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a444ac615d1e82962547e4f5efb0a2aa2" kindref="member">reception_cond15</ref>.notify_all();</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sending<sp/>a<sp/>signal<sp/>for<sp/>fun</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="canmodule__wrapper_8cpp_1a1cb4853346cc0c0a083b1f729c1a2043" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8h_1ab09dfa98b48b044f3d4bece77fcf790b" kindref="member">canmodule_testSignalSlot</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connectionIndex<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>testing<sp/>slot&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>connectionIndex;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>connectionIndex<sp/>&gt;=<sp/><ref refid="canmodule__wrapper_8cpp_1a2eb006bb00711238d0c51ef70240c03c" kindref="member">CONNECTION_INDEX_MIN</ref><sp/>&amp;&amp;<sp/>connectionIndex<sp/>&lt;=<sp/><ref refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" kindref="member">CONNECTION_INDEX_MAX</ref><sp/>){</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;testSignalSlot();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>slot&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>connectionIndex<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tested<sp/>OK&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connectionIndex<sp/>illegal,<sp/>[0...15]<sp/>allowed<sp/>only.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="canmodule__wrapper_8cpp_1a055607542cbb43c08b74c3a148e5bcc4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8h_1ae31631636034d5d449665eafa9c342ca" kindref="member">canmodule_init</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connectionIndex,<sp/>Log::LOG_LEVEL<sp/>loglevel,<sp/>vector&lt;string&gt;<sp/>canmoduleParameters<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>connectionIndex<sp/>&lt;<sp/>CONNECTION_INDEX_MIN<sp/>||<sp/>connectionIndex<sp/>&gt;<sp/><ref refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" kindref="member">CONNECTION_INDEX_MAX</ref><sp/>){</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connectionIndex<sp/>illegal,<sp/>[0...15]<sp/>allowed<sp/>only.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>parameters;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>libname;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>portname;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>vendor<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;an&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>port_can<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ip<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;128.141.159.194&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>port_usb<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>Log::initializeLogging(Log::TRC);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>LogIt<sp/>initialized<sp/>OK&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>LogIt<sp/>problem<sp/>at<sp/>initialisation&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::setNonComponentLogLevel(<sp/>loglevel<sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::INF)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>VERSION<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__DATE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__TIME__<sp/>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>canmoduleParameters.size();<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>canmoduleParameters[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>canmoduleParameters[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>canmoduleParameters.size()<sp/>&lt;<sp/>2<sp/>){</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;missing<sp/>canmodule<sp/>parameters,<sp/>can&apos;t<sp/>set<sp/>up<sp/>CAN<sp/>bridge,<sp/>exiting.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vendor<sp/>=<sp/>canmoduleParameters[0];</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_can<sp/>=<sp/>canmoduleParameters[1];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>canmoduleParameters[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;an&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>canmoduleParameters.size()<sp/>&lt;<sp/>3<sp/>){</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;anagate<sp/>missing<sp/>canmodule<sp/>ip<sp/>parameter,<sp/>can&apos;t<sp/>set<sp/>up<sp/>CAN<sp/>bridge,<sp/>exiting.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>canmoduleParameters[2];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>canmoduleParameters.size()<sp/>&lt;<sp/>4<sp/>){</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;250000<sp/>0<sp/>1<sp/>0<sp/>0<sp/>1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bitrate=250kbit/s,<sp/>opmode=normal,<sp/>terminated=true,<sp/>no<sp/>high<sp/>speed,<sp/>no<sp/>time<sp/>stamp,<sp/>sync<sp/>mode=true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::WRN)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;anagate<sp/>missing<sp/>parameters<sp/>taking<sp/>defaults:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters<sp/>=<sp/>canmoduleParameters[3];</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::INF)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;found<sp/>anagate<sp/>parameters:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;an&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>libancan.so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portname<sp/>=<sp/>libname<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>port_can<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>ip;</highlight><highlight class="comment">//<sp/>&quot;an:0:127.0.0.1&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::INF)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;anagate<sp/>portname=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>portname;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>canmoduleParameters[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;st&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>canmoduleParameters.size()<sp/>&lt;<sp/>3<sp/>){</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;systec<sp/>missing<sp/>canmodule<sp/>usb<sp/>port<sp/>parameter,<sp/>can&apos;t<sp/>set<sp/>up<sp/>CAN<sp/>bridge,<sp/>exiting.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_usb<sp/>=<sp/>canmoduleParameters[2];</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>canmoduleParameters.size()<sp/>&lt;<sp/>4<sp/>){</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unspecified&quot;</highlight><highlight class="normal">;</highlight><highlight class="comment">//<sp/>or<sp/>Unspecified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::WRN)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;systec<sp/>missing<sp/>parameters<sp/>taking<sp/>defaults:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters<sp/>=<sp/>canmoduleParameters[3];</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::INF)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;found<sp/>systec<sp/>parameters:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>WIN32</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;st&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>libstcan.so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;sock&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>libsockcan.so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portname<sp/>=<sp/>libname<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:can&quot;</highlight><highlight class="normal"><sp/>+<sp/>port_can;</highlight><highlight class="comment">//<sp/>&quot;sock:can0&quot;<sp/>or<sp/>&quot;st:can0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::INF)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;systec<sp/>portname=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>portname;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>connectionIndex<sp/>&gt;=<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>.size()<sp/>){</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCAN__CONNECTION__t" kindref="compound">CAN_CONNECTION_t</ref><sp/>ncon;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncon.<ref refid="structCAN__CONNECTION__t_1a4307ead99fac10c9415801692a0e0bab" kindref="member">isConnected</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncon.<ref refid="structCAN__CONNECTION__t_1a28c64bd7c6af88c3bf92f318cc9c89a1" kindref="member">delay</ref><sp/>=<sp/><ref refid="canmodule__wrapper_8cpp_1ae0253b00a2913d2b61a81c983bfbd822" kindref="member">canmodule_delay_default</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>.push_back(<sp/>ncon<sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].isConnected<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::WRN)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARN:<sp/>open<sp/>CAN<sp/>port<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>portname<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>_parameters<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lib<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>libname<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>is<sp/>already<sp/>connected,<sp/>skipping.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].loader<sp/>=<sp/><ref refid="classCanModule_1_1CanLibLoader_1ab22f43105bfc9cab3c0749b83c867352" kindref="member">CanModule::CanLibLoader::createInstance</ref>(<sp/>libname<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca<sp/>=<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].loader-&gt;openCanBus(<sp/>portname,<sp/>parameters<sp/>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca<sp/>!=<sp/>NULL<sp/>){</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;createBus(<sp/>portname.c_str(),<sp/>parameters.c_str()<sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::INF)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;open<sp/>CAN<sp/>port<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>portname<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>_parameters<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lib<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>libname<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>open<sp/>CAN<sp/>port<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>portname<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>_parameters<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lib<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>libname<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CAN<sp/>access<sp/>bus<sp/>OK<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].isConnected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>could<sp/>not<sp/>open<sp/>CAN<sp/>port,<sp/>problem<sp/>loading<sp/>lib<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>portname<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>_parameters<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parameters<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lib<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>libname<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>connecting<sp/>reception<sp/>slot0<sp/>to<sp/>boost<sp/>signal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectReceptionSlotX(<sp/>connectionIndex<sp/>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>connecting<sp/>user<sp/>function<sp/>to<sp/>reception<sp/>slot&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>connectionIndex;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>connectionIndex<sp/>){</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1a6d635e7497e25d5788dcbf03125b0909" kindref="member">myUserHandler0</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1ad360ca6338143d5c11a4531660b24ac0" kindref="member">myUserHandler1</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1a8d9a98bb375b5e23917e4167228db82d" kindref="member">myUserHandler2</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1a8a412ea2b9be94758e3fbf8f99f63989" kindref="member">myUserHandler3</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1ae36fe0d1976785621770b4e3a3a2f022" kindref="member">myUserHandler4</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1a672814a85db13a759e0e5c7896359734" kindref="member">myUserHandler5</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1af882506f0473ebcf59193b06ed1bfd20" kindref="member">myUserHandler6</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1a7d0f2c128bc7f98b1f2fc4ab692acdd9" kindref="member">myUserHandler7</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1af8ae68234a4417c6a75bc972f7587fa7" kindref="member">myUserHandler8</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1a7caf49e5654ea59a928c5c1e124ca623" kindref="member">myUserHandler9</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1aa2e9edaf7bf96dbf37d3ecde32e88ada" kindref="member">myUserHandler10</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1a203eae36ea11ab8beee391759e383116" kindref="member">myUserHandler11</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1a86412e7ec2af43e4ddde98af880e5463" kindref="member">myUserHandler12</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>13:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1accfea38d4ef6cf1adb7f29a87a381c45" kindref="member">myUserHandler13</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>14:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1aea2a5f96b3137e0c77439dcda11b4139" kindref="member">myUserHandler14</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>15:{<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;connectFwSlotX(<sp/>connectionIndex,<sp/><ref refid="canmodule__wrapper_8cpp_1a7fddde7971ed0ad3524ec2135f1dea04" kindref="member">myUserHandler15</ref><sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connectionIndex<sp/>wrong,<sp/>sth<sp/>is<sp/>seriously<sp/>wrong..&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>connection<sp/>slot&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>connectionIndex<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>done,<sp/>seems<sp/>OK&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="canmodule__wrapper_8cpp_1a3f5b9ce8e79c0746a9c78b5d333e6f59" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8h_1a8d2c82f6455b57926fd1bbce466f2a90" kindref="member">canmodule_send</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connectionIndex,<sp/><ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref><sp/>cm<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>connectionIndex<sp/>&lt;<sp/>CONNECTION_INDEX_MIN<sp/>||<sp/>connectionIndex<sp/>&gt;<sp/><ref refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" kindref="member">CONNECTION_INDEX_MAX</ref><sp/>){</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connectionIndex<sp/>illegal,<sp/>[0...15]<sp/>allowed<sp/>only.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sending<sp/>a<sp/>message<sp/>[id=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>int)<sp/>cm.<ref refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" kindref="member">c_id</ref></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>data0=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>cm.<ref refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" kindref="member">c_data</ref>[<sp/>0<sp/>]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seems<sp/>needed<sp/>for<sp/>systec,<sp/>anagate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a2788c927e316fa9024211c35f4b524c7" kindref="member">_canmodule_slowDown</ref>(<sp/>connectionIndex<sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;sendMessage(<sp/>&amp;cm<sp/>);<sp/></highlight><highlight class="comment">//<sp/>always<sp/>returns<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>flip<sp/>logic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sending<sp/>message<sp/>failed<sp/>[id=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cm.<ref refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" kindref="member">c_id</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>data0=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)<sp/>cm.<ref refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" kindref="member">c_data</ref>[<sp/>0<sp/>]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="canmodule__wrapper_8cpp_1a8eb5e8091492123886eed92e99cd5bfe" refkind="member"><highlight class="normal"><ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref><sp/><ref refid="canmodule__wrapper_8h_1a694d64db9a7c4c1661f9a5427d1a45df" kindref="member">canmodule_reformat2CanModuleMessage</ref>(<sp/>can_frame<sp/>m_in<sp/>){</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref><sp/>m_out;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>CAN_MAX_DLEN;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_out.<ref refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" kindref="member">c_data</ref>[<sp/>i<sp/>]<sp/>=<sp/>m_in.data[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>m_out.<ref refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" kindref="member">c_dlc</ref><sp/>=<sp/>m_in.can_dlc;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>m_out.<ref refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" kindref="member">c_id</ref><sp/>=<sp/>m_in.can_id;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>m_out<sp/>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491" refid="canmodule__wrapper_8cpp_1a23b4a20be56e8585c6a1f78b943455f3" refkind="member"><highlight class="normal">can_frame<sp/><ref refid="canmodule__wrapper_8h_1a2e702e2de7a34b14736a8121948ee57f" kindref="member">canmodule_reformat2LinuxFrame</ref>(<sp/><ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref><sp/>m_in<sp/>){</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>can_frame<sp/>m_out;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>CAN_MAX_DLEN;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_out.data[<sp/>i<sp/>]<sp/>=<sp/>m_in.<ref refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" kindref="member">c_data</ref>[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>m_out.can_dlc<sp/>=<sp/>m_in.<ref refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" kindref="member">c_dlc</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>m_out.can_id<sp/>=<sp/>m_in.<ref refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" kindref="member">c_id</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>m_out<sp/>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="canmodule__wrapper_8cpp_1abd663bf12a12e3d635ee299abaa1015b" refkind="member"><highlight class="normal"><ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref><sp/><ref refid="canmodule__wrapper_8h_1a0ad645413378e8b7d8bde2effe069639" kindref="member">canmodule_waitForNewCanMessage</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connectionIndex<sp/>){</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCanMsgStruct" kindref="compound">CanMessage</ref><sp/>m_new;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;waiting<sp/>for<sp/>new<sp/>msg<sp/>on<sp/>connection<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>connectionIndex;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>connectionIndex<sp/>&lt;<sp/>CONNECTION_INDEX_MIN<sp/>||<sp/>connectionIndex<sp/>&gt;<sp/><ref refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" kindref="member">CONNECTION_INDEX_MAX</ref><sp/>){</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connectionIndex<sp/>illegal,<sp/>[0...15]<sp/>allowed<sp/>only.<sp/>Return<sp/>empty<sp/>message<sp/>immediately.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>m_new<sp/>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::mutex<sp/>*mtx;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::condition_variable_any<sp/>*cond;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>connectionIndex<sp/>){</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1aa9f4b1208b6394678f5e0d1f1e7e36b1" kindref="member">reception_mtx0</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a6f918d3da1aa14fc5c0a02d501fd46f2" kindref="member">reception_cond0</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a7bf12edd06a1ab049ba210997fb50175" kindref="member">reception_mtx1</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1ab7cd61f650c5036e31b54e5ef3156abd" kindref="member">reception_cond1</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a19a3db70e831ef946db7948e6cb7ebae" kindref="member">reception_mtx2</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a4271ddd144d9c22a586d92d9fe123476" kindref="member">reception_cond2</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a5256771c6c6af33e299c9c85720bd9b5" kindref="member">reception_mtx3</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a0b29e5e0a2531e2632699298222647c5" kindref="member">reception_cond3</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1ab92db4f19a9b79501aa5c8ca72764360" kindref="member">reception_mtx4</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a6c0f68c41481427d54e128111b984ed8" kindref="member">reception_cond4</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1afc58d38b170c3fef1f42872c1c711870" kindref="member">reception_mtx5</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1ab7c2f335ca2b48237a33f3e33618b5d1" kindref="member">reception_cond5</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a0083d75e0111f8214259f6ed175bfacb" kindref="member">reception_mtx6</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1aaa125323603823b2a59b278cb8c10ad0" kindref="member">reception_cond6</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a6cdb7a324a438bc7da5de93e78f65a44" kindref="member">reception_mtx7</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a3f56c87445b7b4712f13d7cb34a72b15" kindref="member">reception_cond7</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1ab09b51031c98224ff2582388d32dbd4e" kindref="member">reception_mtx8</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1adf9fbd8b9f7b3b53eea2f0f9a5760c90" kindref="member">reception_cond8</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a29c9f9e8a8cad4063ea5857c66b92c5e" kindref="member">reception_mtx9</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1ae2d7f292f7488d01c92f15985be09572" kindref="member">reception_cond9</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a8b129716b23d932845c6186c3ec029f8" kindref="member">reception_mtx10</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a3e0bbc9181caa85f868d2fd2eb88d827" kindref="member">reception_cond10</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1af29d4db6e03a1c9628ffd6c6b8ac67b4" kindref="member">reception_mtx11</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a89c38d3167e6c2bfb3c890d7e6dfd612" kindref="member">reception_cond11</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1aeea85420dfcda3072bcc4b573e1fb3ad" kindref="member">reception_mtx12</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1ae638c38ded1576fd744fb61f110d4fc9" kindref="member">reception_cond12</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>13:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1aefedb7e42e884092080f74f02e7cf240" kindref="member">reception_mtx13</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a851c07a40ba2aaa7365a8ce339bd2634" kindref="member">reception_cond13</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>14:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1aa2e9f45e06d06b756c8e861e45531b56" kindref="member">reception_mtx14</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1af91ff7e198193bbbe93b31b3128021b8" kindref="member">reception_cond14</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>15:<sp/>{<sp/>mtx<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a0cbc15fc736e7d9fbe34a03e18584705" kindref="member">reception_mtx15</ref>;<sp/>cond<sp/>=<sp/>&amp;<ref refid="canmodule__wrapper_8cpp_1a444ac615d1e82962547e4f5efb0a2aa2" kindref="member">reception_cond15</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connectionIndex<sp/>wrong,<sp/>sth<sp/>is<sp/>seriously<sp/>wrong..&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::unique_lock&lt;boost::mutex&gt;<sp/>lock{<sp/>*mtx<sp/>};</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].reception.newArrived<sp/>){</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cond-&gt;wait(<sp/>*mtx<sp/>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>msg<sp/>arrived<sp/>on<sp/>connection<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>connectionIndex;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>m_new<sp/>=<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].reception.receivedMessageBuffer;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].reception.newArrived<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(Log::TRC)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>returning<sp/>new<sp/>msg<sp/>on<sp/>connection<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>connectionIndex;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>m_new<sp/>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="canmodule__wrapper_8cpp_1ac2fb08a3b85d67b3bde3374493428657" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="canmodule__wrapper_8h_1a747219d5789f6532fc8c21650d9aee46" kindref="member">canmodule_delete</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connectionIndex<sp/>){</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>connectionIndex<sp/>&lt;<sp/>CONNECTION_INDEX_MIN<sp/>||<sp/>connectionIndex<sp/>&gt;<sp/><ref refid="canmodule__wrapper_8cpp_1aab71aed77e37ee6cc2d675dec800c07a" kindref="member">CONNECTION_INDEX_MAX</ref><sp/>){</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::ERR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connectionIndex<sp/>illegal,<sp/>[0...15]<sp/>allowed<sp/>only.<sp/>Can&apos;t<sp/>delete.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca-&gt;disconnectReceptionSlotX();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(<sp/><ref refid="canmodule__wrapper_8cpp_1a07e3b62fb780778da4ae23f01cc453ab" kindref="member">_connection_v</ref>[<sp/>connectionIndex<sp/>].cca<sp/>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(Log::WRN)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;this<sp/>connection<sp/>with<sp/>connectionIndex=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>connectionIndex</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>already<sp/>deleted<sp/>or<sp/>got<sp/>never<sp/>init.<sp/>Can&apos;t<sp/>delete<sp/>it.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CWrapper/src/canmodule_wrapper.cpp"/>
  </compounddef>
</doxygen>
