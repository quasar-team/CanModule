<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classCSockCanScan" kind="class" prot="public">
    <compoundname>CSockCanScan</compoundname>
    <basecompoundref refid="classCanModule_1_1CCanAccess" prot="public" virt="non-virtual">CanModule::CCanAccess</basecompoundref>
    <includes refid="SockCanScan_8h" local="no">SockCanScan.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classCSockCanScan_1a596ffa46b85d51c580757cab52baead9" prot="public" static="yes" mutable="no">
        <type>std::map&lt; string, string &gt;</type>
        <definition>std::map&lt; string, string &gt; CSockCanScan::m_busMap</definition>
        <argsstring></argsstring>
        <name>m_busMap</name>
        <initializer>= {{&quot;dummy_name&quot;, &quot;dummy_parameters&quot;}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="78" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" bodystart="78" bodyend="-1"/>
        <referencedby refid="classCSockCanScan_1ac5c669f96d2d6cf7387f8a646bd65b3f" compoundref="SockCanScan_8cpp" startline="532" endline="576">createBus</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCSockCanScan_1ac108fc40318b58fa8fedb07e038d29ab" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>volatile bool CSockCanScan::m_CanScanThreadShutdownFlag</definition>
        <argsstring></argsstring>
        <name>m_CanScanThreadShutdownFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="83" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" bodystart="83" bodyend="-1"/>
        <referencedby refid="classCSockCanScan_1ac5c669f96d2d6cf7387f8a646bd65b3f" compoundref="SockCanScan_8cpp" startline="532" endline="576">createBus</referencedby>
        <referencedby refid="classCSockCanScan_1a114206337d501fc78a55d2e3d1f4a22b" compoundref="SockCanScan_8cpp" startline="672" endline="680">stopBus</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCSockCanScan_1a0020e3c0b07bf14fd3ef9c7d58660869" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CSockCanScan::m_sock</definition>
        <argsstring></argsstring>
        <name>m_sock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="85" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" bodystart="85" bodyend="-1"/>
        <referencedby refid="classCSockCanScan_1a4b5f7591bfd27b8770bfb9ac9e406f66" compoundref="SockCanScan_8cpp" startline="655" endline="662">clearErrorMessage</referencedby>
        <referencedby refid="classCSockCanScan_1ac5c669f96d2d6cf7387f8a646bd65b3f" compoundref="SockCanScan_8cpp" startline="532" endline="576">createBus</referencedby>
        <referencedby refid="classCSockCanScan_1a203a51239f8efc013d4b9df36f271317" compoundref="SockCanScan_8cpp" startline="323" endline="395">openCanPort</referencedby>
        <referencedby refid="classCSockCanScan_1a512733f202345e5940460f84539c979a" compoundref="SockCanScan_8cpp" startline="664" endline="670">sendErrorMessage</referencedby>
        <referencedby refid="classCSockCanScan_1a485ec8621a98cdacad8e27433e09d919" compoundref="SockCanScan_8cpp" startline="409" endline="464">sendMessage</referencedby>
        <referencedby refid="classCSockCanScan_1a4999204ff7166ee992a89b30a118af06" compoundref="SockCanScan_8cpp" startline="472" endline="513">sendRemoteRequest</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCSockCanScan_1afe0c7cc23de0ac2d758a07bec4c2e2c8" prot="private" static="no" mutable="no">
        <type><ref refid="classCanModule_1_1CanStatistics" kindref="compound">CanStatistics</ref></type>
        <definition>CanStatistics CSockCanScan::m_statistics</definition>
        <argsstring></argsstring>
        <name>m_statistics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="87" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" bodystart="87" bodyend="-1"/>
        <referencedby refid="classCSockCanScan_1abfb8f5e3726f9675a63f48648afae178" compoundref="SockCanScan_8cpp" startline="65" endline="73">CSockCanScan</referencedby>
        <referencedby refid="classCSockCanScan_1a38110f02c2d12fa9b620ba5ff438a960" compoundref="SockCanScan_8cpp" startline="682" endline="687">getStatistics</referencedby>
        <referencedby refid="classCSockCanScan_1a485ec8621a98cdacad8e27433e09d919" compoundref="SockCanScan_8cpp" startline="409" endline="464">sendMessage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCSockCanScan_1ac8e3a91f049a53fb88f6400b5caaf817" prot="private" static="no" mutable="no">
        <type>pthread_t</type>
        <definition>pthread_t CSockCanScan::m_hCanScanThread</definition>
        <argsstring></argsstring>
        <name>m_hCanScanThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="89" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" bodystart="89" bodyend="-1"/>
        <referencedby refid="classCSockCanScan_1ac5c669f96d2d6cf7387f8a646bd65b3f" compoundref="SockCanScan_8cpp" startline="532" endline="576">createBus</referencedby>
        <referencedby refid="classCSockCanScan_1a114206337d501fc78a55d2e3d1f4a22b" compoundref="SockCanScan_8cpp" startline="672" endline="680">stopBus</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCSockCanScan_1a91967ed6bf717bcfc5fae356725819bf" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CSockCanScan::m_idCanScanThread</definition>
        <argsstring></argsstring>
        <name>m_idCanScanThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="91" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" bodystart="91" bodyend="-1"/>
        <referencedby refid="classCSockCanScan_1ac5c669f96d2d6cf7387f8a646bd65b3f" compoundref="SockCanScan_8cpp" startline="532" endline="576">createBus</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCSockCanScan_1a1810bdcb6beda833752d4ddb83efde7f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CSockCanScan::m_channelName</definition>
        <argsstring></argsstring>
        <name>m_channelName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="120" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" bodystart="120" bodyend="-1"/>
        <referencedby refid="classCSockCanScan_1a8bb8fcdb24b2b917258d027e6a468bae" compoundref="SockCanScan_8cpp" startline="311" endline="317">configureCanBoard</referencedby>
        <referencedby refid="classCSockCanScan_1a203a51239f8efc013d4b9df36f271317" compoundref="SockCanScan_8cpp" startline="323" endline="395">openCanPort</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCSockCanScan_1a01a0096926dc8236ae11077deb5e02a2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CSockCanScan::m_errorCode</definition>
        <argsstring></argsstring>
        <name>m_errorCode</name>
        <briefdescription>
<para>As up-to-date as possible state of the interface. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="123" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" bodystart="123" bodyend="-1"/>
        <referencedby refid="classCSockCanScan_1a203a51239f8efc013d4b9df36f271317" compoundref="SockCanScan_8cpp" startline="323" endline="395">openCanPort</referencedby>
        <referencedby refid="classCSockCanScan_1a623057580187ecb241adf143c64d711c" compoundref="SockCanScan_8cpp" startline="689" endline="701">updateInitialError</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classCSockCanScan_1a817cc925d8c3bb42be3e97ed71b107e0" prot="private" static="yes" mutable="no">
        <type>Log::LogComponentHandle</type>
        <definition>Log::LogComponentHandle CSockCanScan::st_logItHandleSock</definition>
        <argsstring></argsstring>
        <name>st_logItHandleSock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="93" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" bodystart="93" bodyend="-1"/>
        <referencedby refid="classCSockCanScan_1ac5c669f96d2d6cf7387f8a646bd65b3f" compoundref="SockCanScan_8cpp" startline="532" endline="576">createBus</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCSockCanScan_1abfb8f5e3726f9675a63f48648afae178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CSockCanScan::CSockCanScan</definition>
        <argsstring>()</argsstring>
        <name>CSockCanScan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="47" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="65" bodyend="73"/>
        <references refid="classCanModule_1_1CanStatistics_1a85e6c87ce5285884a0272088178bb8f6" compoundref="CanStatistics_8cpp" startline="43" endline="50">CanModule::CanStatistics::beginNewRun</references>
        <references refid="classCSockCanScan_1afe0c7cc23de0ac2d758a07bec4c2e2c8" compoundref="SockCanScan_8h" startline="87">m_statistics</references>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1a7442798d8f943f85ca710f6f829c9efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CSockCanScan::CSockCanScan</definition>
        <argsstring>(CSockCanScan const &amp;other)=delete</argsstring>
        <name>CSockCanScan</name>
        <param>
          <type><ref refid="classCSockCanScan" kindref="compound">CSockCanScan</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1afb0a16ec4e702d79d5fe5dfcabfefbdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCSockCanScan" kindref="compound">CSockCanScan</ref> &amp;</type>
        <definition>CSockCanScan&amp; CSockCanScan::operator=</definition>
        <argsstring>(CSockCanScan const &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classCSockCanScan" kindref="compound">CSockCanScan</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1a243f91e993fcc96ddd5308c1425a130c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>CSockCanScan::~CSockCanScan</definition>
        <argsstring>()</argsstring>
        <name>~CSockCanScan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="50" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="306" bodyend="309"/>
        <references refid="classCSockCanScan_1a114206337d501fc78a55d2e3d1f4a22b" compoundref="SockCanScan_8cpp" startline="672" endline="680">stopBus</references>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1a4999204ff7166ee992a89b30a118af06" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CSockCanScan::sendRemoteRequest</definition>
        <argsstring>(short cobID)</argsstring>
        <name>sendRemoteRequest</name>
        <reimplements refid="classCanModule_1_1CCanAccess_1acfefbc9be2696b1388cf6df2bba00aa1">sendRemoteRequest</reimplements>
        <param>
          <type>short</type>
          <declname>cobID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method that sends a remote request trough the can bus channel. If the method createBUS was not called before this, sendMessage will fail, as there is no can bus channel to send the request trough. Similar to sendMessage, but it sends an special message reserved for requests. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cobID</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier that will be used for the request. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: Was the initialisation process successful? </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="52" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="472" bodyend="513"/>
        <references refid="namespaceCanModule_1a6cae4be8d395b496f5f602a5f9714ae1" compoundref="CanModuleUtils_8cpp" startline="32" endline="42">CanModule::CanModuleerrnoToString</references>
        <references refid="classCSockCanScan_1a0020e3c0b07bf14fd3ef9c7d58660869" compoundref="SockCanScan_8h" startline="85">m_sock</references>
        <references refid="SockCanScan_8cpp_1a9dfd6d593fee1bb51ed35186b0bbb328" compoundref="SockCanScan_8cpp" startline="52">MLOGSOCK</references>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1ac5c669f96d2d6cf7387f8a646bd65b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CSockCanScan::createBus</definition>
        <argsstring>(const string name, string parameters)</argsstring>
        <name>createBus</name>
        <reimplements refid="classCanModule_1_1CCanAccess_1a78590d342bc4f3433544d45371ca05ce">createBus</reimplements>
        <param>
          <type>const string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>string</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method that initializes a can bus channel. The following methods called upon the same object will be using this initialized channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>= 2 parameters separated by &quot;:&quot;, like &quot;n0:n1&quot;<itemizedlist>
<listitem><para>n0 = &quot;sock&quot; for sockets, used by systec and peak</para></listitem><listitem><para>n1 = CAN port number on the module, can be prefixed with &quot;can&quot;</para></listitem><listitem><para>ex.: &quot;sock:can1&quot; speaks to port 1 on systec or peak module</para></listitem><listitem><para>ex.: &quot;sock:1&quot; works as well</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>one parameter: &quot;p0&quot;, positive integer<itemizedlist>
<listitem><para>&quot;Unspecified&quot; (or empty): using defaults = &quot;125000&quot; // params missing</para></listitem><listitem><para>p0: bitrate: 50000, 100000, 125000, 250000, 500000, 1000000 bit/s, other values might be allowed by the module</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<itemizedlist>
<listitem><para>i.e. &quot;250000&quot;</para></listitem></itemizedlist>
</para><para><simplesect kind="return"><para>Was the initialization process successful? </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="53" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="532" bodyend="576"/>
        <references refid="classCSockCanScan_1a9ac2e2d3f63449865e22c69a60faf53d" compoundref="SockCanScan_8cpp" startline="96" endline="304">CanScanControlThread</references>
        <references refid="classCSockCanScan_1a8bb8fcdb24b2b917258d027e6a468bae" compoundref="SockCanScan_8cpp" startline="311" endline="317">configureCanBoard</references>
        <references refid="namespaceCanModule_1a043500ed91c75aae8d8841430ef4f9aa" compoundref="CCanAccess_8h" startline="60">CanModule::LogItComponentNameSock</references>
        <references refid="classCSockCanScan_1a596ffa46b85d51c580757cab52baead9" compoundref="SockCanScan_8h" startline="78">m_busMap</references>
        <references refid="classCSockCanScan_1ac108fc40318b58fa8fedb07e038d29ab" compoundref="SockCanScan_8h" startline="83">m_CanScanThreadShutdownFlag</references>
        <references refid="classCSockCanScan_1ac8e3a91f049a53fb88f6400b5caaf817" compoundref="SockCanScan_8h" startline="89">m_hCanScanThread</references>
        <references refid="classCSockCanScan_1a91967ed6bf717bcfc5fae356725819bf" compoundref="SockCanScan_8h" startline="91">m_idCanScanThread</references>
        <references refid="classCSockCanScan_1a0020e3c0b07bf14fd3ef9c7d58660869" compoundref="SockCanScan_8h" startline="85">m_sock</references>
        <references refid="SockCanScan_8cpp_1a9dfd6d593fee1bb51ed35186b0bbb328" compoundref="SockCanScan_8cpp" startline="52">MLOGSOCK</references>
        <references refid="classCSockCanScan_1a817cc925d8c3bb42be3e97ed71b107e0" compoundref="SockCanScan_8h" startline="93">st_logItHandleSock</references>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1a485ec8621a98cdacad8e27433e09d919" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CSockCanScan::sendMessage</definition>
        <argsstring>(short cobID, unsigned char len, unsigned char *message, bool rtr=false)</argsstring>
        <name>sendMessage</name>
        <reimplements refid="classCanModule_1_1CCanAccess_1aee42ab7fb9e50c02a1812202f7863d8c">sendMessage</reimplements>
        <param>
          <type>short</type>
          <declname>cobID</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>len</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rtr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method that sends a message trough the can bus channel. If the method createBUS was not called before this, sendMessage will fail, as there is no can bus channel to send a message through.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cobID</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier that will be used for the message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the message. If the message is bigger than 8 characters, it will be split into separate 8 characters messages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Message to be sent trough the can bus. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtr</parametername>
</parameternamelist>
<parameterdescription>
<para>is the message a remote transmission request? </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Was the initialisation process successful? </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="54" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="409" bodyend="464"/>
        <references refid="SockCanScan_8cpp_1a244d0d65d27d30b6118c5f30d2d72579" compoundref="SockCanScan_8cpp" startline="75" endline="88">canFrameToString</references>
        <references refid="namespaceCanModule_1a6cae4be8d395b496f5f602a5f9714ae1" compoundref="CanModuleUtils_8cpp" startline="32" endline="42">CanModule::CanModuleerrnoToString</references>
        <references refid="classCSockCanScan_1ace6f7aa52fe582af6de098895fc91b83" compoundref="SockCanScan_8h" startline="69" endline="77">emptyCanFrame</references>
        <references refid="classCSockCanScan_1a0020e3c0b07bf14fd3ef9c7d58660869" compoundref="SockCanScan_8h" startline="85">m_sock</references>
        <references refid="classCSockCanScan_1afe0c7cc23de0ac2d758a07bec4c2e2c8" compoundref="SockCanScan_8h" startline="87">m_statistics</references>
        <references refid="SockCanScan_8cpp_1a9dfd6d593fee1bb51ed35186b0bbb328" compoundref="SockCanScan_8cpp" startline="52">MLOGSOCK</references>
        <references refid="classCanModule_1_1CanStatistics_1a0265b75e9e2e16737950b6b5c5662f35" compoundref="CanStatistics_8cpp" startline="72" endline="77">CanModule::CanStatistics::onTransmit</references>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1a5120fe6852dd4942e89fc23c3e09b20d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CSockCanScan::getHandler</definition>
        <argsstring>()</argsstring>
        <name>getHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns socket handler </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="59" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1a38110f02c2d12fa9b620ba5ff438a960" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CSockCanScan::getStatistics</definition>
        <argsstring>(CanStatistics &amp;result)</argsstring>
        <name>getStatistics</name>
        <reimplements refid="classCanModule_1_1CCanAccess_1ad3182c83b4c5d7e6aef982c36e731507">getStatistics</reimplements>
        <param>
          <type><ref refid="classCanModule_1_1CanStatistics" kindref="compound">CanStatistics</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the instance of the CanStatistics object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="64" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="682" bodyend="687"/>
        <references refid="classCanModule_1_1CanStatistics_1a85e6c87ce5285884a0272088178bb8f6" compoundref="CanStatistics_8cpp" startline="43" endline="50">CanModule::CanStatistics::beginNewRun</references>
        <references refid="classCanModule_1_1CanStatistics_1a8ec66bd11141579779f143362b70640e" compoundref="CanStatistics_8cpp" startline="52" endline="70">CanModule::CanStatistics::computeDerived</references>
        <references refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" compoundref="CCanAccess_8h" startline="388">CanModule::CCanAccess::m_CanParameters</references>
        <references refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" compoundref="CCanAccess_8h" startline="70">CanModule::CanParameters::m_lBaudRate</references>
        <references refid="classCSockCanScan_1afe0c7cc23de0ac2d758a07bec4c2e2c8" compoundref="SockCanScan_8h" startline="87">m_statistics</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classCSockCanScan_1ace6f7aa52fe582af6de098895fc91b83" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>can_frame</type>
        <definition>static can_frame CSockCanScan::emptyCanFrame</definition>
        <argsstring>(void)</argsstring>
        <name>emptyCanFrame</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>produce and empty can frame </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="69" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" bodystart="69" bodyend="77"/>
        <referencedby refid="classCSockCanScan_1a485ec8621a98cdacad8e27433e09d919" compoundref="SockCanScan_8cpp" startline="409" endline="464">sendMessage</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCSockCanScan_1a114206337d501fc78a55d2e3d1f4a22b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSockCanScan::stopBus</definition>
        <argsstring>()</argsstring>
        <name>stopBus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="96" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="672" bodyend="680"/>
        <references refid="classCSockCanScan_1ac108fc40318b58fa8fedb07e038d29ab" compoundref="SockCanScan_8h" startline="83">m_CanScanThreadShutdownFlag</references>
        <references refid="classCSockCanScan_1ac8e3a91f049a53fb88f6400b5caaf817" compoundref="SockCanScan_8h" startline="89">m_hCanScanThread</references>
        <references refid="SockCanScan_8cpp_1a9dfd6d593fee1bb51ed35186b0bbb328" compoundref="SockCanScan_8cpp" startline="52">MLOGSOCK</references>
        <referencedby refid="classCSockCanScan_1a243f91e993fcc96ddd5308c1425a130c" compoundref="SockCanScan_8cpp" startline="306" endline="309">~CSockCanScan</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1a623057580187ecb241adf143c64d711c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSockCanScan::updateInitialError</definition>
        <argsstring>()</argsstring>
        <name>updateInitialError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="98" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="689" bodyend="701"/>
        <references refid="classCanModule_1_1CCanAccess_1a33fbd693f04b4f4e21cee20856c44866" compoundref="CCanAccess_8h" startline="324">CanModule::CCanAccess::canMessageError</references>
        <references refid="classCSockCanScan_1a4b5f7591bfd27b8770bfb9ac9e406f66" compoundref="SockCanScan_8cpp" startline="655" endline="662">clearErrorMessage</references>
        <references refid="classCSockCanScan_1a01a0096926dc8236ae11077deb5e02a2" compoundref="SockCanScan_8h" startline="123">m_errorCode</references>
        <referencedby refid="classCSockCanScan_1a203a51239f8efc013d4b9df36f271317" compoundref="SockCanScan_8cpp" startline="323" endline="395">openCanPort</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1a512733f202345e5940460f84539c979a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSockCanScan::sendErrorMessage</definition>
        <argsstring>(const char *)</argsstring>
        <name>sendErrorMessage</name>
        <param>
          <type>const char *</type>
          <defname>mess</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="102" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="664" bodyend="670"/>
        <references refid="classCanModule_1_1CCanAccess_1a33fbd693f04b4f4e21cee20856c44866" compoundref="CCanAccess_8h" startline="324">CanModule::CCanAccess::canMessageError</references>
        <references refid="classCSockCanScan_1a0020e3c0b07bf14fd3ef9c7d58660869" compoundref="SockCanScan_8h" startline="85">m_sock</references>
        <references refid="SockCanScan_8cpp_1a9dfd6d593fee1bb51ed35186b0bbb328" compoundref="SockCanScan_8cpp" startline="52">MLOGSOCK</references>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1a4b5f7591bfd27b8770bfb9ac9e406f66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSockCanScan::clearErrorMessage</definition>
        <argsstring>()</argsstring>
        <name>clearErrorMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="105" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="655" bodyend="662"/>
        <references refid="classCanModule_1_1CCanAccess_1a33fbd693f04b4f4e21cee20856c44866" compoundref="CCanAccess_8h" startline="324">CanModule::CCanAccess::canMessageError</references>
        <references refid="classCSockCanScan_1a0020e3c0b07bf14fd3ef9c7d58660869" compoundref="SockCanScan_8h" startline="85">m_sock</references>
        <references refid="SockCanScan_8cpp_1a9dfd6d593fee1bb51ed35186b0bbb328" compoundref="SockCanScan_8cpp" startline="52">MLOGSOCK</references>
        <referencedby refid="classCSockCanScan_1a623057580187ecb241adf143c64d711c" compoundref="SockCanScan_8cpp" startline="689" endline="701">updateInitialError</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1a8bb8fcdb24b2b917258d027e6a468bae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CSockCanScan::configureCanBoard</definition>
        <argsstring>(const string name, const string parameters)</argsstring>
        <name>configureCanBoard</name>
        <param>
          <type>const string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const string</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="107" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="311" bodyend="317"/>
        <references refid="classCSockCanScan_1a1810bdcb6beda833752d4ddb83efde7f" compoundref="SockCanScan_8h" startline="120">m_channelName</references>
        <references refid="classCSockCanScan_1a203a51239f8efc013d4b9df36f271317" compoundref="SockCanScan_8cpp" startline="323" endline="395">openCanPort</references>
        <references refid="classCanModule_1_1CCanAccess_1af26c9d102638fb96e5e1305f807d148f" compoundref="CCanAccess_8h" startline="350" endline="384">CanModule::CCanAccess::parseNameAndParameters</references>
        <referencedby refid="classCSockCanScan_1ac5c669f96d2d6cf7387f8a646bd65b3f" compoundref="SockCanScan_8cpp" startline="532" endline="576">createBus</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1a203a51239f8efc013d4b9df36f271317" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CSockCanScan::openCanPort</definition>
        <argsstring>()</argsstring>
        <name>openCanPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtains a SocketCAN socket and opens it. The name of the port and parameters should have been specified by preceding call to configureCanboard()</para><para><simplesect kind="return"><para>less than zero in case of error, otherwise success</para></simplesect>
stop, set bitrate, start a CAN port, open a socket for it, set the socket to CAN, bind it and check any errors </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="114" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="323" bodyend="395"/>
        <references refid="namespaceCanModule_1a6cae4be8d395b496f5f602a5f9714ae1" compoundref="CanModuleUtils_8cpp" startline="32" endline="42">CanModule::CanModuleerrnoToString</references>
        <references refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" compoundref="CCanAccess_8h" startline="388">CanModule::CCanAccess::m_CanParameters</references>
        <references refid="classCSockCanScan_1a1810bdcb6beda833752d4ddb83efde7f" compoundref="SockCanScan_8h" startline="120">m_channelName</references>
        <references refid="structCanModule_1_1CanParameters_1a8668831351aaaa0446c75c58073bf357" compoundref="CCanAccess_8h" startline="77">CanModule::CanParameters::m_dontReconfigure</references>
        <references refid="classCSockCanScan_1a01a0096926dc8236ae11077deb5e02a2" compoundref="SockCanScan_8h" startline="123">m_errorCode</references>
        <references refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" compoundref="CCanAccess_8h" startline="70">CanModule::CanParameters::m_lBaudRate</references>
        <references refid="classCSockCanScan_1a0020e3c0b07bf14fd3ef9c7d58660869" compoundref="SockCanScan_8h" startline="85">m_sock</references>
        <references refid="CCanAccess_8h_1ad506d1f216984abc94d5a65f33053626" compoundref="CCanAccess_8h" startline="65">MLOG</references>
        <references refid="SockCanScan_8cpp_1a9dfd6d593fee1bb51ed35186b0bbb328" compoundref="SockCanScan_8cpp" startline="52">MLOGSOCK</references>
        <references refid="classCSockCanScan_1a623057580187ecb241adf143c64d711c" compoundref="SockCanScan_8cpp" startline="689" endline="701">updateInitialError</references>
        <referencedby refid="classCSockCanScan_1a8bb8fcdb24b2b917258d027e6a468bae" compoundref="SockCanScan_8cpp" startline="311" endline="317">configureCanBoard</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classCSockCanScan_1a177453d85f24c6b12b84468ac812cf5c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CSockCanScan::errorFrameToString</definition>
        <argsstring>(const struct can_frame &amp;f)</argsstring>
        <name>errorFrameToString</name>
        <param>
          <type>const struct can_frame &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="100" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="581" bodyend="653"/>
        <referencedby refid="classCSockCanScan_1a9ac2e2d3f63449865e22c69a60faf53d" compoundref="SockCanScan_8cpp" startline="96" endline="304">CanScanControlThread</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCSockCanScan_1a9ac2e2d3f63449865e22c69a60faf53d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * CSockCanScan::CanScanControlThread</definition>
        <argsstring>(void *)</argsstring>
        <name>CanScanControlThread</name>
        <param>
          <type>void *</type>
          <defname>p_voidSockCanScan</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reading from socket, and supervising thread for monitoring the sockets/CAN buses. It takes an object reference (cast) and listens with a select call on that socket/object. The select runs with 1Hz, and if there is nothing to receive it should timeout. </para>        </detaileddescription>
        <inbodydescription>
<para>the select failed. that is very bad, system problem, but let&apos;s continue nevertheless. There is not much we can do</para><para>select returned, either on the timeout or with something on that socket/object. Assumption: at this moment sock holds meaningful value. Now select result &gt;=0 so it was either nothing received (timeout) or something received</para><para>The preceding call took either &apos;timeout&apos; time, or there is frame received <ndash/> perfect time to attempt to clean error frame.</para><para>select reports that it has got something, so no timeout in this case</para><para>try to re-open the socket. only reopen the socket if we still need it. If we need to shutdown the thread, leave it closed and terminate main loop.</para><para>if we have an open socket again, and we can read numberOfReadBytes &gt;=0 we should be fine again and continue the thread execution normally</para><para>we have a CAN message, error free, lets digest it</para><para>reformat and buffer the message from the socket. this actually should exclude more bits</para><para>the select got nothing to read, this was just a timeout.</para>        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="117" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.cpp" bodystart="96" bodyend="304"/>
        <references refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" compoundref="CanMessage_8h" startline="29">CanMsgStruct::c_data</references>
        <references refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" compoundref="CanMessage_8h" startline="27">CanMsgStruct::c_dlc</references>
        <references refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" compoundref="CanMessage_8h" startline="23">CanMsgStruct::c_id</references>
        <references refid="structCanMsgStruct_1ad4a78c27262604bacb5720d8633f71c6" compoundref="CanMessage_8h" startline="33">CanMsgStruct::c_rtr</references>
        <references refid="structCanMsgStruct_1a06b9b3e9423f35edfb96df7b04828bba" compoundref="CanMessage_8h" startline="31">CanMsgStruct::c_time</references>
        <references refid="SockCanScan_8cpp_1a244d0d65d27d30b6118c5f30d2d72579" compoundref="SockCanScan_8cpp" startline="75" endline="88">canFrameToString</references>
        <references refid="namespaceCanModule_1a6cae4be8d395b496f5f602a5f9714ae1" compoundref="CanModuleUtils_8cpp" startline="32" endline="42">CanModule::CanModuleerrnoToString</references>
        <references refid="classCSockCanScan_1a177453d85f24c6b12b84468ac812cf5c" compoundref="SockCanScan_8cpp" startline="581" endline="653">errorFrameToString</references>
        <references refid="CCanAccess_8h_1ad506d1f216984abc94d5a65f33053626" compoundref="CCanAccess_8h" startline="65">MLOG</references>
        <references refid="SockCanScan_8cpp_1a9dfd6d593fee1bb51ed35186b0bbb328" compoundref="SockCanScan_8cpp" startline="52">MLOGSOCK</references>
        <referencedby refid="classCSockCanScan_1ac5c669f96d2d6cf7387f8a646bd65b3f" compoundref="SockCanScan_8cpp" startline="532" endline="576">createBus</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="45">
        <label>CSockCanScan</label>
        <link refid="classCSockCanScan"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>CanModule::CCanAccess</label>
        <link refid="classCanModule_1_1CCanAccess"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="49">
        <label>CanModule::CanParameters</label>
        <link refid="structCanModule_1_1CanParameters"/>
      </node>
      <node id="50">
        <label>CanModule::CanStatistics</label>
        <link refid="classCanModule_1_1CanStatistics"/>
        <childnode refid="51" relation="usage">
          <edgelabel>m_internals</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>CSockCanScan</label>
        <link refid="classCSockCanScan"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_statistics</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>CanModule::CanStatistics::Internals</label>
        <link refid="classCanModule_1_1CanStatistics_1_1Internals"/>
      </node>
      <node id="48">
        <label>CanModule::CCanAccess</label>
        <link refid="classCanModule_1_1CCanAccess"/>
        <childnode refid="49" relation="usage">
          <edgelabel>m_CanParameters</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" line="44" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-OPCUA-1421/CanModule/CanInterfaceImplementations/sockcan/SockCanScan.h" bodystart="43" bodyend="124"/>
    <listofallmembers>
      <member refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>canMessageCame</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a33fbd693f04b4f4e21cee20856c44866" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>canMessageError</name></member>
      <member refid="classCSockCanScan_1a9ac2e2d3f63449865e22c69a60faf53d" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>CanScanControlThread</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a7c9b87d205b0ec265c972a3303cecda2" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>CCanAccess</name></member>
      <member refid="classCSockCanScan_1a4b5f7591bfd27b8770bfb9ac9e406f66" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>clearErrorMessage</name></member>
      <member refid="classCSockCanScan_1a8bb8fcdb24b2b917258d027e6a468bae" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>configureCanBoard</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a08d387c6261bee525c0bb05eb66b4164" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>connectFwSlotX</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a247e65001e8f59b47fdc2961dd67d74d" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>connectReceptionSlotX</name></member>
      <member refid="classCSockCanScan_1ac5c669f96d2d6cf7387f8a646bd65b3f" prot="public" virt="virtual"><scope>CSockCanScan</scope><name>createBus</name></member>
      <member refid="classCSockCanScan_1abfb8f5e3726f9675a63f48648afae178" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>CSockCanScan</name></member>
      <member refid="classCSockCanScan_1a7442798d8f943f85ca710f6f829c9efd" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>CSockCanScan</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a8212fb246945f2c32a164e83be42bc73" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>disconnectReceptionSlotX</name></member>
      <member refid="classCSockCanScan_1ace6f7aa52fe582af6de098895fc91b83" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>emptyCanFrame</name></member>
      <member refid="classCSockCanScan_1a177453d85f24c6b12b84468ac812cf5c" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>errorFrameToString</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a20323e55767d3a60c78a88db5d785829" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot0</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ab9194c7d019e7da16f98a177b4e6e145" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot1</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a4130b6b2dac7673a2e2253c8b957294c" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot10</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a4e8381b84bbbfbcfe6feb9eba7e17fd9" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot11</name></member>
      <member refid="classCanModule_1_1CCanAccess_1aad6416d679ea5cb9582b145ac7a61a31" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot12</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a625e00cbeb49526bb5b37b7e4032149b" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot13</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a66ce4a26bdd58b6bfa016c86034137bb" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot14</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a14a98fa7153c222282ae567a685611cd" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot15</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a7b299903bfe41cee29cc497ba43554fd" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot2</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ad3cbc73468e8edf35f917ed4aa65df16" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot3</name></member>
      <member refid="classCanModule_1_1CCanAccess_1abe5e84df9f43bd309c635d3201b6dba7" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot4</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a62c0c4ac34c437097f74f685fb0266a5" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot5</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a4f457bfc8b8b494130293d563dac72e7" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot6</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a12da52fdad176cf1fa482983bdb5cfd5" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot7</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a7626751af619f301c0bde5657329b4dd" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot8</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a5e7196879da60e80eb209ee807cbcd11" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>fw_slot9</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ac3f5126ae36d642217425e21696d19ca" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>getBusName</name></member>
      <member refid="classCSockCanScan_1a5120fe6852dd4942e89fc23c3e09b20d" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>getHandler</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a8210a8161f1987973584b6dda5dc6d7d" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>getLogItInstance</name></member>
      <member refid="classCSockCanScan_1a38110f02c2d12fa9b620ba5ff438a960" prot="public" virt="virtual"><scope>CSockCanScan</scope><name>getStatistics</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ab5a430fc27073d92c69659bda261b74d" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>initialiseLogging</name></member>
      <member refid="classCSockCanScan_1a596ffa46b85d51c580757cab52baead9" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>m_busMap</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" prot="protected" virt="non-virtual"><scope>CSockCanScan</scope><name>m_CanParameters</name></member>
      <member refid="classCSockCanScan_1ac108fc40318b58fa8fedb07e038d29ab" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>m_CanScanThreadShutdownFlag</name></member>
      <member refid="classCSockCanScan_1a1810bdcb6beda833752d4ddb83efde7f" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>m_channelName</name></member>
      <member refid="classCSockCanScan_1a01a0096926dc8236ae11077deb5e02a2" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>m_errorCode</name></member>
      <member refid="classCSockCanScan_1ac8e3a91f049a53fb88f6400b5caaf817" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>m_hCanScanThread</name></member>
      <member refid="classCSockCanScan_1a91967ed6bf717bcfc5fae356725819bf" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>m_idCanScanThread</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a0eff18d10b7ee5d6f86b03898f38f7ca" prot="protected" virt="non-virtual"><scope>CSockCanScan</scope><name>m_sBusName</name></member>
      <member refid="classCSockCanScan_1a0020e3c0b07bf14fd3ef9c7d58660869" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>m_sock</name></member>
      <member refid="classCSockCanScan_1afe0c7cc23de0ac2d758a07bec4c2e2c8" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>m_statistics</name></member>
      <member refid="classCSockCanScan_1a203a51239f8efc013d4b9df36f271317" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>openCanPort</name></member>
      <member refid="classCSockCanScan_1afb0a16ec4e702d79d5fe5dfcabfefbdb" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>operator=</name></member>
      <member refid="classCanModule_1_1CCanAccess_1af26c9d102638fb96e5e1305f807d148f" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>parseNameAndParameters</name></member>
      <member refid="classCSockCanScan_1a512733f202345e5940460f84539c979a" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>sendErrorMessage</name></member>
      <member refid="classCSockCanScan_1a485ec8621a98cdacad8e27433e09d919" prot="public" virt="virtual"><scope>CSockCanScan</scope><name>sendMessage</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ad0360c49d00ec0ee92cfdd73c2e43935" prot="public" virt="virtual" ambiguityscope="CanModule::CCanAccess::"><scope>CSockCanScan</scope><name>sendMessage</name></member>
      <member refid="classCSockCanScan_1a4999204ff7166ee992a89b30a118af06" prot="public" virt="virtual"><scope>CSockCanScan</scope><name>sendRemoteRequest</name></member>
      <member refid="classCanModule_1_1CCanAccess_1af12f56ce8f69ef8fb77beae30ec0ac2e" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot0</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a334f6f48e22483862d56091703dce595" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot1</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ab10944ddde9a45400eab905a58ef0534" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot10</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a4825360b2a2787160be01b2aa9419ce1" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot11</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a6d0a5e7306e46c5e5e5b9a3fc45e8330" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot12</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a216e763e1cc1ce26dae65dfab939ad11" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot13</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a68b36fdd0ad1f64bd7a1f0207386be4b" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot14</name></member>
      <member refid="classCanModule_1_1CCanAccess_1af44e482ce74f03d22c8a339fe6f01aa7" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot15</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a15a904b7593396d931e9f57b70da929d" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot2</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a0c9527a03b09356decf18241acd1a532" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot3</name></member>
      <member refid="classCanModule_1_1CCanAccess_1af95d2dff96d924a5c2589db82a8a6abd" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot4</name></member>
      <member refid="classCanModule_1_1CCanAccess_1aca7bcb8e9e5043a6636ce767d345716a" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot5</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a335e4ebb979de2ad399380886b3742b7" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot6</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a8278d35739b5f92e24331accb4b8383e" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot7</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a2e5052c0d4b0bf48d0ea709583349118" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot8</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a9eb127d5fa0c228f785d65a1ef25b97a" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>slot9</name></member>
      <member refid="classCSockCanScan_1a817cc925d8c3bb42be3e97ed71b107e0" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>st_logItHandleSock</name></member>
      <member refid="classCSockCanScan_1a114206337d501fc78a55d2e3d1f4a22b" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>stopBus</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a86c0125599b177ed3017e842940565fd" prot="public" virt="non-virtual"><scope>CSockCanScan</scope><name>testSignalSlot</name></member>
      <member refid="classCSockCanScan_1a623057580187ecb241adf143c64d711c" prot="private" virt="non-virtual"><scope>CSockCanScan</scope><name>updateInitialError</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ac96f1cce6beda4309cdfb6651d3ce547" prot="public" virt="virtual"><scope>CSockCanScan</scope><name>~CCanAccess</name></member>
      <member refid="classCSockCanScan_1a243f91e993fcc96ddd5308c1425a130c" prot="public" virt="virtual"><scope>CSockCanScan</scope><name>~CSockCanScan</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
