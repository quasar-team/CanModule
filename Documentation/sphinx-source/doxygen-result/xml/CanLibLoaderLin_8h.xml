<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="CanLibLoaderLin_8h" kind="file">
    <compoundname>CanLibLoaderLin.h</compoundname>
    <includes refid="CanLibLoader_8h" local="yes">CanLibLoader.h</includes>
    <includedby refid="CanLibLoader_8cpp" local="yes">CanLibLoader/src/CanLibLoader.cpp</includedby>
    <includedby refid="CanLibLoaderLin_8cpp" local="yes">CanLibLoader/src/CanLibLoaderLin.cpp</includedby>
    <incdepgraph>
      <node id="419">
        <label>stdatomic.h</label>
      </node>
      <node id="422">
        <label>LogIt.h</label>
      </node>
      <node id="416">
        <label>boost/signals2.hpp</label>
      </node>
      <node id="418">
        <label>CanStatistics.h</label>
        <link refid="CanStatistics_8h"/>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
      </node>
      <node id="409">
        <label>CanLibLoader/include/CanLibLoaderLin.h</label>
        <link refid="CanLibLoaderLin.h"/>
        <childnode refid="410" relation="include">
        </childnode>
      </node>
      <node id="411">
        <label>string</label>
      </node>
      <node id="412">
        <label>map</label>
      </node>
      <node id="410">
        <label>CanLibLoader.h</label>
        <link refid="CanLibLoader_8h"/>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
      </node>
      <node id="413">
        <label>CCanAccess.h</label>
        <link refid="CCanAccess_8h"/>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
      </node>
      <node id="417">
        <label>CanMessage.h</label>
        <link refid="CanMessage_8h"/>
        <childnode refid="414" relation="include">
        </childnode>
      </node>
      <node id="414">
        <label>sys/time.h</label>
      </node>
      <node id="415">
        <label>boost/bind.hpp</label>
      </node>
      <node id="421">
        <label>chrono</label>
      </node>
      <node id="420">
        <label>ExportDefinition.h</label>
        <link refid="ExportDefinition_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="423">
        <label>CanLibLoader/include/CanLibLoaderLin.h</label>
        <link refid="CanLibLoaderLin.h"/>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
      </node>
      <node id="424">
        <label>CanLibLoader/src/CanLibLoader.cpp</label>
        <link refid="CanLibLoader_8cpp"/>
      </node>
      <node id="425">
        <label>CanLibLoader/src/CanLibLoaderLin.cpp</label>
        <link refid="CanLibLoaderLin_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classCanModule_1_1CanLibLoaderLin" prot="public">CanModule::CanLibLoaderLin</innerclass>
    <innernamespace refid="namespaceCanModule">CanModule</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="CanLibLoader_8h" kindref="compound">CanLibLoader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CanModule<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28" refid="classCanModule_1_1CanLibLoaderLin" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCanModule_1_1CanLibLoaderLin" kindref="compound">CanLibLoaderLin</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanLibLoader" kindref="compound">CanLibLoader</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Empty<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CanLibLoaderLin_1a2704a1d43e18e97223848c28dc5dc6ce" kindref="member">CanLibLoaderLin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>libName);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Will<sp/>cleanup<sp/>the<sp/>loaded<sp/>dynamic<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanLibLoaderLin_1a91636138f96d42a3a835c2a38bae3ec6" kindref="member">~CanLibLoaderLin</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Load<sp/>a<sp/>dynamic<sp/>library.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanLibLoaderLin_1aaef852fe6e43d093f58529fab0b2e841" kindref="member">dynamicallyLoadLib</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>libName);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Uses<sp/>the<sp/>loaded<sp/>library<sp/>to<sp/>create<sp/>a<sp/>HAL<sp/>object<sp/>and<sp/>store<sp/>it<sp/>in<sp/>p_halInstance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CCanAccess" kindref="compound">CCanAccess</ref>*<sp/><sp/><ref refid="classCanModule_1_1CanLibLoaderLin_1a7d222a82ab3f005ebed4927b299fce64" kindref="member">createCanAccess</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Pointer<sp/>to<sp/>the<sp/>dynamic<sp/>library<sp/>stored<sp/>on<sp/>the<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classCanModule_1_1CanLibLoaderLin_1a590b2db4fcfa870e005c04b28de4fad6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classCanModule_1_1CanLibLoaderLin_1a590b2db4fcfa870e005c04b28de4fad6" kindref="member">p_dynamicLibrary</ref>;<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanLibLoader/include/CanLibLoaderLin.h"/>
  </compounddef>
</doxygen>
