<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classexeccommand__ns_1_1ExecCommand_1_1Displayer" kind="class" language="C++" prot="private">
    <compoundname>execcommand_ns::ExecCommand::Displayer</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classexeccommand__ns_1_1ExecCommand_1_1Displayer_1abb2774f1c0aa2b6c4e77447f8b657dfa" prot="private" static="no" mutable="no">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; execcommand_ns::ExecCommand::Displayer::m_os</definition>
        <argsstring></argsstring>
        <name>m_os</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanInterfaceImplementations/sockcan/ExecCommand.h" line="63" column="22" bodyfile="CanInterfaceImplementations/sockcan/ExecCommand.h" bodystart="63" bodyend="-1"/>
        <referencedby refid="classexeccommand__ns_1_1ExecCommand_1_1Displayer_1ae52f92efedfe0568f9685f28369fc1b6" compoundref="ExecCommand_8h" startline="58" endline="60">operator()</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classexeccommand__ns_1_1ExecCommand_1_1Displayer_1a7aa30b72cba32d984c840662b0ebfdc5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>execcommand_ns::ExecCommand::Displayer::Displayer</definition>
        <argsstring>(std::ostream &amp;os)</argsstring>
        <name>Displayer</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanInterfaceImplementations/sockcan/ExecCommand.h" line="56" column="18" bodyfile="CanInterfaceImplementations/sockcan/ExecCommand.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classexeccommand__ns_1_1ExecCommand_1_1Displayer_1ae52f92efedfe0568f9685f28369fc1b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void execcommand_ns::ExecCommand::Displayer::operator()</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>operator()</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CanInterfaceImplementations/sockcan/ExecCommand.h" line="58" column="14" bodyfile="CanInterfaceImplementations/sockcan/ExecCommand.h" bodystart="58" bodyend="60"/>
        <references refid="classexeccommand__ns_1_1ExecCommand_1_1Displayer_1abb2774f1c0aa2b6c4e77447f8b657dfa" compoundref="ExecCommand_8h" startline="63">m_os</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CanInterfaceImplementations/sockcan/ExecCommand.h" line="54" column="20" bodyfile="CanInterfaceImplementations/sockcan/ExecCommand.h" bodystart="54" bodyend="64"/>
    <listofallmembers>
      <member refid="classexeccommand__ns_1_1ExecCommand_1_1Displayer_1a7aa30b72cba32d984c840662b0ebfdc5" prot="public" virt="non-virtual"><scope>execcommand_ns::ExecCommand::Displayer</scope><name>Displayer</name></member>
      <member refid="classexeccommand__ns_1_1ExecCommand_1_1Displayer_1abb2774f1c0aa2b6c4e77447f8b657dfa" prot="private" virt="non-virtual"><scope>execcommand_ns::ExecCommand::Displayer</scope><name>m_os</name></member>
      <member refid="classexeccommand__ns_1_1ExecCommand_1_1Displayer_1ae52f92efedfe0568f9685f28369fc1b6" prot="public" virt="non-virtual"><scope>execcommand_ns::ExecCommand::Displayer</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
