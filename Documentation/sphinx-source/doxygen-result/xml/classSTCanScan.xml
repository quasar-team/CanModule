<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classSTCanScan" kind="class" prot="public">
    <compoundname>STCanScan</compoundname>
    <basecompoundref refid="classCanModule_1_1CCanAccess" prot="public" virt="non-virtual">CanModule::CCanAccess</basecompoundref>
    <includes refid="STCanScan_8h" local="no">STCanScan.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classSTCanScan_1add82f4cebf11f011c98bc73986a7f647" prot="public" static="yes" mutable="no">
        <type>Log::LogComponentHandle</type>
        <definition>Log::LogComponentHandle STCanScan::s_logItHandleSt</definition>
        <argsstring></argsstring>
        <name>s_logItHandleSt</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="65" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="65" bodyend="-1"/>
        <referencedby refid="classSTCanScan_1aa99f9f23bdfd367a51efc40e228a6f88" compoundref="STCanScan_8cpp" startline="139" endline="173">createBus</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classSTCanScan_1a112e1468e19d033d97e731110ba195dc" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool STCanScan::s_logItRegisteredSt</definition>
        <argsstring></argsstring>
        <name>s_logItRegisteredSt</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="66" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classSTCanScan_1a38531e0fcde0f184eb968a01fb5984c9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int STCanScan::m_moduleNumber</definition>
        <argsstring></argsstring>
        <name>m_moduleNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="70" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="70" bodyend="-1"/>
        <referencedby refid="classSTCanScan_1a8e147c77933e11e9983f4d4e22830b21" compoundref="STCanScan_8cpp" startline="175" endline="226">configureCanBoard</referencedby>
        <referencedby refid="classSTCanScan_1a5f74df7e9615929365b33c08e709e918" compoundref="STCanScan_8cpp" startline="234" endline="271">openCanPort</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classSTCanScan_1ac5e311e695c1a3c810f82b0c21ee3618" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int STCanScan::m_channelNumber</definition>
        <argsstring></argsstring>
        <name>m_channelNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="72" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="72" bodyend="-1"/>
        <referencedby refid="classSTCanScan_1aab42375da764eb0d50dee318cd790646" compoundref="STCanScan_8cpp" startline="77" endline="109">CanScanControlThread</referencedby>
        <referencedby refid="classSTCanScan_1a8e147c77933e11e9983f4d4e22830b21" compoundref="STCanScan_8cpp" startline="175" endline="226">configureCanBoard</referencedby>
        <referencedby refid="classSTCanScan_1a5f74df7e9615929365b33c08e709e918" compoundref="STCanScan_8cpp" startline="234" endline="271">openCanPort</referencedby>
        <referencedby refid="classSTCanScan_1a45f0ec011022bf58a23e8370bac7f829" compoundref="STCanScan_8cpp" startline="299" endline="337">sendMessage</referencedby>
        <referencedby refid="classSTCanScan_1a2c1de002fa7ace90ef95af00f824c8e4" compoundref="STCanScan_8cpp" startline="339" endline="349">sendRemoteRequest</referencedby>
        <referencedby refid="classSTCanScan_1a2f3398dc992ebd90002c179305c55d54" compoundref="STCanScan_8cpp" startline="111" endline="119">~STCanScan</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classSTCanScan_1a8d6dd7c1cbf4a97607909086da6361e1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int STCanScan::m_canHandleNumber</definition>
        <argsstring></argsstring>
        <name>m_canHandleNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="74" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="74" bodyend="-1"/>
        <referencedby refid="classSTCanScan_1a8e147c77933e11e9983f4d4e22830b21" compoundref="STCanScan_8cpp" startline="175" endline="226">configureCanBoard</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classSTCanScan_1add94dcac99b3ba3a17cb3708fd0cd20d" prot="private" static="no" mutable="no">
        <type>tUcanHandle</type>
        <definition>tUcanHandle STCanScan::m_UcanHandle</definition>
        <argsstring></argsstring>
        <name>m_UcanHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="76" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="76" bodyend="-1"/>
        <referencedby refid="classSTCanScan_1aab42375da764eb0d50dee318cd790646" compoundref="STCanScan_8cpp" startline="77" endline="109">CanScanControlThread</referencedby>
        <referencedby refid="classSTCanScan_1a5f74df7e9615929365b33c08e709e918" compoundref="STCanScan_8cpp" startline="234" endline="271">openCanPort</referencedby>
        <referencedby refid="classSTCanScan_1a45f0ec011022bf58a23e8370bac7f829" compoundref="STCanScan_8cpp" startline="299" endline="337">sendMessage</referencedby>
        <referencedby refid="classSTCanScan_1a2c1de002fa7ace90ef95af00f824c8e4" compoundref="STCanScan_8cpp" startline="339" endline="349">sendRemoteRequest</referencedby>
        <referencedby refid="classSTCanScan_1a2f3398dc992ebd90002c179305c55d54" compoundref="STCanScan_8cpp" startline="111" endline="119">~STCanScan</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classSTCanScan_1a93abd76cf68726a0bfa4b9d3982ec9aa" prot="private" static="no" mutable="no">
        <type><ref refid="classCanModule_1_1CanStatistics" kindref="compound">CanStatistics</ref></type>
        <definition>CanStatistics STCanScan::m_statistics</definition>
        <argsstring></argsstring>
        <name>m_statistics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="78" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="78" bodyend="-1"/>
        <referencedby refid="classSTCanScan_1aab42375da764eb0d50dee318cd790646" compoundref="STCanScan_8cpp" startline="77" endline="109">CanScanControlThread</referencedby>
        <referencedby refid="classSTCanScan_1a4810249805b660c4e914247acbdf45d2" compoundref="STCanScan_8cpp" startline="361" endline="366">getStatistics</referencedby>
        <referencedby refid="classSTCanScan_1a45f0ec011022bf58a23e8370bac7f829" compoundref="STCanScan_8cpp" startline="299" endline="337">sendMessage</referencedby>
        <referencedby refid="classSTCanScan_1a75fcb8ff51d82d362edb1dd31125fb10" compoundref="STCanScan_8cpp" startline="61" endline="71">STCanScan</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classSTCanScan_1add0582f666b4f0a5883311a284a0e9c4" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int STCanScan::m_baudRate</definition>
        <argsstring></argsstring>
        <name>m_baudRate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="80" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="80" bodyend="-1"/>
        <referencedby refid="classSTCanScan_1a8e147c77933e11e9983f4d4e22830b21" compoundref="STCanScan_8cpp" startline="175" endline="226">configureCanBoard</referencedby>
        <referencedby refid="classSTCanScan_1a4810249805b660c4e914247acbdf45d2" compoundref="STCanScan_8cpp" startline="361" endline="366">getStatistics</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classSTCanScan_1aa1c2f27f78da63fc7d1f542f818b9624" prot="private" static="no" mutable="no">
        <type><ref refid="AnaCanScan_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref></type>
        <definition>DWORD STCanScan::m_busStatus</definition>
        <argsstring></argsstring>
        <name>m_busStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="85" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="85" bodyend="-1"/>
        <referencedby refid="classSTCanScan_1a43454c0bc20eb764cbb4ef3dd5e52cc9" compoundref="STCanScan_8cpp" startline="273" endline="286">sendErrorCode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classSTCanScan_1abd418113d56ef882bb12cd7473d031e1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool STCanScan::m_CanScanThreadShutdownFlag</definition>
        <argsstring></argsstring>
        <name>m_CanScanThreadShutdownFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="86" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="86" bodyend="-1"/>
        <referencedby refid="classSTCanScan_1aab42375da764eb0d50dee318cd790646" compoundref="STCanScan_8cpp" startline="77" endline="109">CanScanControlThread</referencedby>
        <referencedby refid="classSTCanScan_1a2f3398dc992ebd90002c179305c55d54" compoundref="STCanScan_8cpp" startline="111" endline="119">~STCanScan</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classSTCanScan_1a2a57272e12f97f245e6f204347782bc0" prot="private" static="no" mutable="no">
        <type>HANDLE</type>
        <definition>HANDLE STCanScan::m_hCanScanThread</definition>
        <argsstring></argsstring>
        <name>m_hCanScanThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="88" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="88" bodyend="-1"/>
        <referencedby refid="classSTCanScan_1aa99f9f23bdfd367a51efc40e228a6f88" compoundref="STCanScan_8cpp" startline="139" endline="173">createBus</referencedby>
        <referencedby refid="classSTCanScan_1a2f3398dc992ebd90002c179305c55d54" compoundref="STCanScan_8cpp" startline="111" endline="119">~STCanScan</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classSTCanScan_1a8ae65fcef31d4bb84aa5bb8978973f86" prot="private" static="no" mutable="no">
        <type><ref refid="AnaCanScan_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref></type>
        <definition>DWORD STCanScan::m_idCanScanThread</definition>
        <argsstring></argsstring>
        <name>m_idCanScanThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="90" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="90" bodyend="-1"/>
        <referencedby refid="classSTCanScan_1aa99f9f23bdfd367a51efc40e228a6f88" compoundref="STCanScan_8cpp" startline="139" endline="173">createBus</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classSTCanScan_1ac3f6c36fec9666c086da47f241f75dba" prot="private" static="yes" mutable="no">
        <type>tUcanHandle</type>
        <definition>tUcanHandle STCanScan::s_canHandleArray</definition>
        <argsstring>[256]</argsstring>
        <name>s_canHandleArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="105" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSTCanScan_1a310439aeb8688c29fb3fe8faa4a9e198" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool STCanScan::s_isCanHandleInUseArray</definition>
        <argsstring>[256]</argsstring>
        <name>s_isCanHandleInUseArray</name>
        <briefdescription>
<para>The macro below is applicable only to this translation unit. </para>        </briefdescription>
        <detaileddescription>
<para>© Copyright CERN, 2015. All rights not expressly granted are reserved.</para><para>STCanScap.cpp</para><para>Created on: Jul 21, 2011 Based on work by vfilimon Rework and logging done by Piotr Nikiel <ulink url="mailto:piotr@nikiel.info">piotr@nikiel.info</ulink> mludwig at cern dot ch</para><para>This file is part of Quasar.</para><para>Quasar is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public Licence as published by the Free Software Foundation, either version 3 of the Licence.</para><para>Quasar is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public Licence for more details.</para><para>You should have received a copy of the GNU Lesser General Public License along with Quasar. If not, see <ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="106" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classSTCanScan_1a75fcb8ff51d82d362edb1dd31125fb10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STCanScan::STCanScan</definition>
        <argsstring>()</argsstring>
        <name>STCanScan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="43" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.cpp" bodystart="61" bodyend="71"/>
        <references refid="classCanModule_1_1CanStatistics_1a85e6c87ce5285884a0272088178bb8f6" compoundref="CanStatistics_8cpp" startline="43" endline="50">CanModule::CanStatistics::beginNewRun</references>
        <references refid="classSTCanScan_1a93abd76cf68726a0bfa4b9d3982ec9aa" compoundref="STCanScan_8h" startline="78">m_statistics</references>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1a335aaec2300f2b9c31fd0f268014f24d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STCanScan::STCanScan</definition>
        <argsstring>(STCanScan const &amp;other)=delete</argsstring>
        <name>STCanScan</name>
        <param>
          <type><ref refid="classSTCanScan" kindref="compound">STCanScan</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1a7c2d148e988e8b7e9df6b4ab0ed2dda1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSTCanScan" kindref="compound">STCanScan</ref> &amp;</type>
        <definition>STCanScan&amp; STCanScan::operator=</definition>
        <argsstring>(STCanScan const &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classSTCanScan" kindref="compound">STCanScan</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1a2f3398dc992ebd90002c179305c55d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>STCanScan::~STCanScan</definition>
        <argsstring>()</argsstring>
        <name>~STCanScan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="49" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.cpp" bodystart="111" bodyend="119"/>
        <references refid="classSTCanScan_1abd418113d56ef882bb12cd7473d031e1" compoundref="STCanScan_8h" startline="86">m_CanScanThreadShutdownFlag</references>
        <references refid="classSTCanScan_1ac5e311e695c1a3c810f82b0c21ee3618" compoundref="STCanScan_8h" startline="72">m_channelNumber</references>
        <references refid="classSTCanScan_1a2a57272e12f97f245e6f204347782bc0" compoundref="STCanScan_8h" startline="88">m_hCanScanThread</references>
        <references refid="classSTCanScan_1add94dcac99b3ba3a17cb3708fd0cd20d" compoundref="STCanScan_8h" startline="76">m_UcanHandle</references>
        <references refid="STCanScan_8cpp_1a08d6d35b7f83e326a37caa39473e6ebe" compoundref="STCanScan_8cpp" startline="40">MLOGST</references>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1aa99f9f23bdfd367a51efc40e228a6f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool STCanScan::createBus</definition>
        <argsstring>(const string name, const string parameters)</argsstring>
        <name>createBus</name>
        <reimplements refid="classCanModule_1_1CCanAccess_1a78590d342bc4f3433544d45371ca05ce">createBus</reimplements>
        <param>
          <type>const string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const string</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method that initialises a CAN bus channel for systec. All following methods called on the same object will be using this initialized channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>= 2 parameters separated by &quot;:&quot; like &quot;n0:n1&quot;<itemizedlist>
<listitem><para>n0 = &quot;st&quot; for systec</para></listitem><listitem><para>n1 = CAN port number on the module, can be prefixed with &quot;can&quot;</para></listitem><listitem><para>ex.: &quot;st:can1&quot; speaks to port 1 on systec module at the ip</para></listitem><listitem><para>ex.: &quot;st:1&quot; works as well</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>one parameter: &quot;p0&quot;, positive integers<itemizedlist>
<listitem><para>&quot;Unspecified&quot; (or empty): using defaults = &quot;125000&quot; // params missing</para></listitem><listitem><para>p0: bitrate: 50000, 100000, 125000, 250000, 500000, 1000000 bit/s i.e. &quot;250000&quot;</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>was the initialisation process successful? </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="51" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.cpp" bodystart="139" bodyend="173"/>
        <references refid="classSTCanScan_1aab42375da764eb0d50dee318cd790646" compoundref="STCanScan_8cpp" startline="77" endline="109">CanScanControlThread</references>
        <references refid="classSTCanScan_1a8e147c77933e11e9983f4d4e22830b21" compoundref="STCanScan_8cpp" startline="175" endline="226">configureCanBoard</references>
        <references refid="namespaceCanModule_1ae25b0c7453a892a139549914f17d298a" compoundref="CCanAccess_8h" startline="62">CanModule::LogItComponentNameSystec</references>
        <references refid="classSTCanScan_1a2a57272e12f97f245e6f204347782bc0" compoundref="STCanScan_8h" startline="88">m_hCanScanThread</references>
        <references refid="classSTCanScan_1a8ae65fcef31d4bb84aa5bb8978973f86" compoundref="STCanScan_8h" startline="90">m_idCanScanThread</references>
        <references refid="classCanModule_1_1CCanAccess_1a0eff18d10b7ee5d6f86b03898f38f7ca" compoundref="CCanAccess_8h" startline="367">CanModule::CCanAccess::m_sBusName</references>
        <references refid="STCanScan_8cpp_1a08d6d35b7f83e326a37caa39473e6ebe" compoundref="STCanScan_8cpp" startline="40">MLOGST</references>
        <references refid="classSTCanScan_1add82f4cebf11f011c98bc73986a7f647" compoundref="STCanScan_8h" startline="65">s_logItHandleSt</references>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1a45f0ec011022bf58a23e8370bac7f829" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool STCanScan::sendMessage</definition>
        <argsstring>(short cobID, unsigned char len, unsigned char *message, bool rtr=false)</argsstring>
        <name>sendMessage</name>
        <reimplements refid="classCanModule_1_1CCanAccess_1aee42ab7fb9e50c02a1812202f7863d8c">sendMessage</reimplements>
        <param>
          <type>short</type>
          <declname>cobID</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>len</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rtr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method that sends a message trough the can bus channel. If the method createBUS was not called before this, sendMessage will fail, as there is no can bus channel to send a message through.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cobID</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier that will be used for the message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the message. If the message is bigger than 8 characters, it will be split into separate 8 characters messages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Message to be sent trough the can bus. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rtr</parametername>
</parameternamelist>
<parameterdescription>
<para>is the message a remote transmission request? </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Was the sending process successful? </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="53" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.cpp" bodystart="299" bodyend="337"/>
        <references refid="classSTCanScan_1ac5e311e695c1a3c810f82b0c21ee3618" compoundref="STCanScan_8h" startline="72">m_channelNumber</references>
        <references refid="classSTCanScan_1a93abd76cf68726a0bfa4b9d3982ec9aa" compoundref="STCanScan_8h" startline="78">m_statistics</references>
        <references refid="classSTCanScan_1add94dcac99b3ba3a17cb3708fd0cd20d" compoundref="STCanScan_8h" startline="76">m_UcanHandle</references>
        <references refid="STCanScan_8cpp_1a08d6d35b7f83e326a37caa39473e6ebe" compoundref="STCanScan_8cpp" startline="40">MLOGST</references>
        <references refid="classCanModule_1_1CanStatistics_1a0265b75e9e2e16737950b6b5c5662f35" compoundref="CanStatistics_8cpp" startline="72" endline="77">CanModule::CanStatistics::onTransmit</references>
        <references refid="classSTCanScan_1a43454c0bc20eb764cbb4ef3dd5e52cc9" compoundref="STCanScan_8cpp" startline="273" endline="286">sendErrorCode</references>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1a2c1de002fa7ace90ef95af00f824c8e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool STCanScan::sendRemoteRequest</definition>
        <argsstring>(short cobID)</argsstring>
        <name>sendRemoteRequest</name>
        <reimplements refid="classCanModule_1_1CCanAccess_1acfefbc9be2696b1388cf6df2bba00aa1">sendRemoteRequest</reimplements>
        <param>
          <type>short</type>
          <declname>cobID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="61" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.cpp" bodystart="339" bodyend="349"/>
        <references refid="classSTCanScan_1ac5e311e695c1a3c810f82b0c21ee3618" compoundref="STCanScan_8h" startline="72">m_channelNumber</references>
        <references refid="classSTCanScan_1add94dcac99b3ba3a17cb3708fd0cd20d" compoundref="STCanScan_8h" startline="76">m_UcanHandle</references>
        <references refid="classSTCanScan_1a43454c0bc20eb764cbb4ef3dd5e52cc9" compoundref="STCanScan_8cpp" startline="273" endline="286">sendErrorCode</references>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1a4810249805b660c4e914247acbdf45d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void STCanScan::getStatistics</definition>
        <argsstring>(CanStatistics &amp;result)</argsstring>
        <name>getStatistics</name>
        <reimplements refid="classCanModule_1_1CCanAccess_1ad3182c83b4c5d7e6aef982c36e731507">getStatistics</reimplements>
        <param>
          <type><ref refid="classCanModule_1_1CanStatistics" kindref="compound">CanStatistics</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="63" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.cpp" bodystart="361" bodyend="366"/>
        <references refid="classCanModule_1_1CanStatistics_1a85e6c87ce5285884a0272088178bb8f6" compoundref="CanStatistics_8cpp" startline="43" endline="50">CanModule::CanStatistics::beginNewRun</references>
        <references refid="classCanModule_1_1CanStatistics_1a8ec66bd11141579779f143362b70640e" compoundref="CanStatistics_8cpp" startline="52" endline="70">CanModule::CanStatistics::computeDerived</references>
        <references refid="classSTCanScan_1add0582f666b4f0a5883311a284a0e9c4" compoundref="STCanScan_8h" startline="80">m_baudRate</references>
        <references refid="classSTCanScan_1a93abd76cf68726a0bfa4b9d3982ec9aa" compoundref="STCanScan_8h" startline="78">m_statistics</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classSTCanScan_1a43454c0bc20eb764cbb4ef3dd5e52cc9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool STCanScan::sendErrorCode</definition>
        <argsstring>(long)</argsstring>
        <name>sendErrorCode</name>
        <param>
          <type>long</type>
          <defname>status</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="83" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.cpp" bodystart="273" bodyend="286"/>
        <references refid="classCanModule_1_1CCanAccess_1a33fbd693f04b4f4e21cee20856c44866" compoundref="CCanAccess_8h" startline="324">CanModule::CCanAccess::canMessageError</references>
        <references refid="namespaceCanModule_1a3ec3082d7d11a9c1641023cb3f53cbe5" compoundref="CanModuleUtils_8cpp" startline="44" endline="51">CanModule::convertTimepointToTimeval</references>
        <references refid="namespaceCanModule_1a6d0711aac0a75de5d2bf6142997a814d" compoundref="CanModuleUtils_8cpp" startline="60" endline="74">CanModule::currentTimeTimeval</references>
        <references refid="classSTCanScan_1a9a4da7b1dd74e81e8066894a1a8c051e" compoundref="STCanScan_8cpp" startline="351" endline="359">errorCodeToString</references>
        <references refid="classSTCanScan_1aa1c2f27f78da63fc7d1f542f818b9624" compoundref="STCanScan_8h" startline="85">m_busStatus</references>
        <referencedby refid="classSTCanScan_1aab42375da764eb0d50dee318cd790646" compoundref="STCanScan_8cpp" startline="77" endline="109">CanScanControlThread</referencedby>
        <referencedby refid="classSTCanScan_1a45f0ec011022bf58a23e8370bac7f829" compoundref="STCanScan_8cpp" startline="299" endline="337">sendMessage</referencedby>
        <referencedby refid="classSTCanScan_1a2c1de002fa7ace90ef95af00f824c8e4" compoundref="STCanScan_8cpp" startline="339" endline="349">sendRemoteRequest</referencedby>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1a8e147c77933e11e9983f4d4e22830b21" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int STCanScan::configureCanBoard</definition>
        <argsstring>(const string name, const string parameters)</argsstring>
        <name>configureCanBoard</name>
        <param>
          <type>const string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const string</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="94" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.cpp" bodystart="175" bodyend="226"/>
        <references refid="classSTCanScan_1add0582f666b4f0a5883311a284a0e9c4" compoundref="STCanScan_8h" startline="80">m_baudRate</references>
        <references refid="classSTCanScan_1a8d6dd7c1cbf4a97607909086da6361e1" compoundref="STCanScan_8h" startline="74">m_canHandleNumber</references>
        <references refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" compoundref="CCanAccess_8h" startline="368">CanModule::CCanAccess::m_CanParameters</references>
        <references refid="classSTCanScan_1ac5e311e695c1a3c810f82b0c21ee3618" compoundref="STCanScan_8h" startline="72">m_channelNumber</references>
        <references refid="structCanModule_1_1CanParameters_1ac4e03899b26e33a3867ee1f0bce674b5" compoundref="CCanAccess_8h" startline="76">CanModule::CanParameters::m_iNumberOfDetectedParameters</references>
        <references refid="structCanModule_1_1CanParameters_1a53ce17e16c2a818ffbc05904d9e56e11" compoundref="CCanAccess_8h" startline="70">CanModule::CanParameters::m_lBaudRate</references>
        <references refid="classSTCanScan_1a38531e0fcde0f184eb968a01fb5984c9" compoundref="STCanScan_8h" startline="70">m_moduleNumber</references>
        <references refid="STCanScan_8cpp_1a08d6d35b7f83e326a37caa39473e6ebe" compoundref="STCanScan_8cpp" startline="40">MLOGST</references>
        <references refid="classSTCanScan_1a5f74df7e9615929365b33c08e709e918" compoundref="STCanScan_8cpp" startline="234" endline="271">openCanPort</references>
        <references refid="classCanModule_1_1CCanAccess_1af26c9d102638fb96e5e1305f807d148f" compoundref="CCanAccess_8h" startline="350" endline="364">CanModule::CCanAccess::parseNameAndParameters</references>
        <referencedby refid="classSTCanScan_1aa99f9f23bdfd367a51efc40e228a6f88" compoundref="STCanScan_8cpp" startline="139" endline="173">createBus</referencedby>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1a5f74df7e9615929365b33c08e709e918" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int STCanScan::openCanPort</definition>
        <argsstring>(tUcanInitCanParam initializationParameters)</argsstring>
        <name>openCanPort</name>
        <param>
          <type>tUcanInitCanParam</type>
          <declname>initializationParameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtains a Systec canport and opens it. The name of the port and parameters should have been specified by preceding call to configureCanboard()</para><para><simplesect kind="return"><para>less than zero in case of error, otherwise success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="95" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.cpp" bodystart="234" bodyend="271"/>
        <references refid="classSTCanScan_1a29b4c3c8f29e45f808fbb7528e4593aa" compoundref="STCanScan_8h" startline="103" endline="103">getCanHandle</references>
        <references refid="classSTCanScan_1a2f2a9aaa3ce2c653a4e1152eb8497493" compoundref="STCanScan_8h" startline="101" endline="101">isCanHandleInUse</references>
        <references refid="classSTCanScan_1ac5e311e695c1a3c810f82b0c21ee3618" compoundref="STCanScan_8h" startline="72">m_channelNumber</references>
        <references refid="classSTCanScan_1a38531e0fcde0f184eb968a01fb5984c9" compoundref="STCanScan_8h" startline="70">m_moduleNumber</references>
        <references refid="classSTCanScan_1add94dcac99b3ba3a17cb3708fd0cd20d" compoundref="STCanScan_8h" startline="76">m_UcanHandle</references>
        <references refid="STCanScan_8cpp_1a08d6d35b7f83e326a37caa39473e6ebe" compoundref="STCanScan_8cpp" startline="40">MLOGST</references>
        <references refid="classSTCanScan_1a50f89ce5fc0b2961937dc8a4b86081f8" compoundref="STCanScan_8h" startline="102" endline="102">setCanHandle</references>
        <references refid="classSTCanScan_1ae29a23d161c115f173cbdb3a807c895e" compoundref="STCanScan_8h" startline="100" endline="100">setCanHandleInUse</references>
        <referencedby refid="classSTCanScan_1a8e147c77933e11e9983f4d4e22830b21" compoundref="STCanScan_8cpp" startline="175" endline="226">configureCanBoard</referencedby>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1a9a4da7b1dd74e81e8066894a1a8c051e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool STCanScan::errorCodeToString</definition>
        <argsstring>(long error, char message[])</argsstring>
        <name>errorCodeToString</name>
        <param>
          <type>long</type>
          <declname>error</declname>
        </param>
        <param>
          <type>char</type>
          <declname>message</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="99" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.cpp" bodystart="351" bodyend="359"/>
        <referencedby refid="classSTCanScan_1a43454c0bc20eb764cbb4ef3dd5e52cc9" compoundref="STCanScan_8cpp" startline="273" endline="286">sendErrorCode</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classSTCanScan_1aab42375da764eb0d50dee318cd790646" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AnaCanScan_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref> <ref refid="STCanScan_8cpp_1a9aa60e1ead64be77ad551e745cbfd4d3" kindref="member">WINAPI</ref></type>
        <definition>DWORD WINAPI STCanScan::CanScanControlThread</definition>
        <argsstring>(LPVOID pCanScan)</argsstring>
        <name>CanScanControlThread</name>
        <param>
          <type>LPVOID</type>
          <declname>pCanScan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>thread to supervise port activity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="92" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.cpp" bodystart="77" bodyend="109"/>
        <references refid="structCanMsgStruct_1a2e47a33e7bba46b05a8fff29433f047b" compoundref="CanMessage_8h" startline="29">CanMsgStruct::c_data</references>
        <references refid="structCanMsgStruct_1a3e5add8ae9cdadfcf3f2255d375ec9b3" compoundref="CanMessage_8h" startline="27">CanMsgStruct::c_dlc</references>
        <references refid="structCanMsgStruct_1acf3abc93beb936e5f9431ef6ec4568f3" compoundref="CanMessage_8h" startline="25">CanMsgStruct::c_ff</references>
        <references refid="structCanMsgStruct_1a619515aef041e64b78e7e8c33989ddd0" compoundref="CanMessage_8h" startline="23">CanMsgStruct::c_id</references>
        <references refid="structCanMsgStruct_1a06b9b3e9423f35edfb96df7b04828bba" compoundref="CanMessage_8h" startline="31">CanMsgStruct::c_time</references>
        <references refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" compoundref="CCanAccess_8h" startline="179">CanModule::CCanAccess::canMessageCame</references>
        <references refid="namespaceCanModule_1a3ec3082d7d11a9c1641023cb3f53cbe5" compoundref="CanModuleUtils_8cpp" startline="44" endline="51">CanModule::convertTimepointToTimeval</references>
        <references refid="namespaceCanModule_1a6d0711aac0a75de5d2bf6142997a814d" compoundref="CanModuleUtils_8cpp" startline="60" endline="74">CanModule::currentTimeTimeval</references>
        <references refid="classSTCanScan_1abd418113d56ef882bb12cd7473d031e1" compoundref="STCanScan_8h" startline="86">m_CanScanThreadShutdownFlag</references>
        <references refid="classSTCanScan_1ac5e311e695c1a3c810f82b0c21ee3618" compoundref="STCanScan_8h" startline="72">m_channelNumber</references>
        <references refid="classSTCanScan_1a93abd76cf68726a0bfa4b9d3982ec9aa" compoundref="STCanScan_8h" startline="78">m_statistics</references>
        <references refid="classSTCanScan_1add94dcac99b3ba3a17cb3708fd0cd20d" compoundref="STCanScan_8h" startline="76">m_UcanHandle</references>
        <references refid="STCanScan_8cpp_1a08d6d35b7f83e326a37caa39473e6ebe" compoundref="STCanScan_8cpp" startline="40">MLOGST</references>
        <references refid="classCanModule_1_1CanStatistics_1a82b38a2383bc0ad6b1d306e86b9ef5c6" compoundref="CanStatistics_8cpp" startline="79" endline="84">CanModule::CanStatistics::onReceive</references>
        <references refid="classSTCanScan_1a43454c0bc20eb764cbb4ef3dd5e52cc9" compoundref="STCanScan_8cpp" startline="273" endline="286">sendErrorCode</references>
        <referencedby refid="classSTCanScan_1aa99f9f23bdfd367a51efc40e228a6f88" compoundref="STCanScan_8cpp" startline="139" endline="173">createBus</referencedby>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1ae29a23d161c115f173cbdb3a807c895e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void STCanScan::setCanHandleInUse</definition>
        <argsstring>(int n, bool t)</argsstring>
        <name>setCanHandleInUse</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="100" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="100" bodyend="100"/>
        <referencedby refid="classSTCanScan_1a5f74df7e9615929365b33c08e709e918" compoundref="STCanScan_8cpp" startline="234" endline="271">openCanPort</referencedby>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1a2f2a9aaa3ce2c653a4e1152eb8497493" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool STCanScan::isCanHandleInUse</definition>
        <argsstring>(int n)</argsstring>
        <name>isCanHandleInUse</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="101" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="101" bodyend="101"/>
        <referencedby refid="classSTCanScan_1a5f74df7e9615929365b33c08e709e918" compoundref="STCanScan_8cpp" startline="234" endline="271">openCanPort</referencedby>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1a50f89ce5fc0b2961937dc8a4b86081f8" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void STCanScan::setCanHandle</definition>
        <argsstring>(int n, tUcanHandle tU)</argsstring>
        <name>setCanHandle</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>tUcanHandle</type>
          <declname>tU</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="102" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="102" bodyend="102"/>
        <referencedby refid="classSTCanScan_1a5f74df7e9615929365b33c08e709e918" compoundref="STCanScan_8cpp" startline="234" endline="271">openCanPort</referencedby>
      </memberdef>
      <memberdef kind="function" id="classSTCanScan_1a29b4c3c8f29e45f808fbb7528e4593aa" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>tUcanHandle</type>
        <definition>static tUcanHandle STCanScan::getCanHandle</definition>
        <argsstring>(int n)</argsstring>
        <name>getCanHandle</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="103" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="103" bodyend="103"/>
        <referencedby refid="classSTCanScan_1a5f74df7e9615929365b33c08e709e918" compoundref="STCanScan_8cpp" startline="234" endline="271">openCanPort</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="72">
        <label>CanModule::CCanAccess</label>
        <link refid="classCanModule_1_1CCanAccess"/>
      </node>
      <node id="71">
        <label>STCanScan</label>
        <link refid="classSTCanScan"/>
        <childnode refid="72" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="75">
        <label>CanModule::CanParameters</label>
        <link refid="structCanModule_1_1CanParameters"/>
      </node>
      <node id="76">
        <label>CanModule::CanStatistics</label>
        <link refid="classCanModule_1_1CanStatistics"/>
        <childnode refid="77" relation="usage">
          <edgelabel>m_internals</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>CanModule::CanStatistics::Internals</label>
        <link refid="classCanModule_1_1CanStatistics_1_1Internals"/>
      </node>
      <node id="74">
        <label>CanModule::CCanAccess</label>
        <link refid="classCanModule_1_1CCanAccess"/>
        <childnode refid="75" relation="usage">
          <edgelabel>m_CanParameters</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>STCanScan</label>
        <link refid="classSTCanScan"/>
        <childnode refid="74" relation="public-inheritance">
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>m_statistics</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" line="40" column="1" bodyfile="/home/mludwig/projects/CanModule/CanModule-sphinx2/CanInterfaceImplementations/systec/STCanScan.h" bodystart="39" bodyend="109"/>
    <listofallmembers>
      <member refid="classCanModule_1_1CCanAccess_1aa8e0e974863874b0e7bbcdb57084c241" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>canMessageCame</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a33fbd693f04b4f4e21cee20856c44866" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>canMessageError</name></member>
      <member refid="classSTCanScan_1aab42375da764eb0d50dee318cd790646" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>CanScanControlThread</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a7c9b87d205b0ec265c972a3303cecda2" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>CCanAccess</name></member>
      <member refid="classSTCanScan_1a8e147c77933e11e9983f4d4e22830b21" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>configureCanBoard</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a08d387c6261bee525c0bb05eb66b4164" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>connectFwSlotX</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a247e65001e8f59b47fdc2961dd67d74d" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>connectReceptionSlotX</name></member>
      <member refid="classSTCanScan_1aa99f9f23bdfd367a51efc40e228a6f88" prot="public" virt="virtual"><scope>STCanScan</scope><name>createBus</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a8212fb246945f2c32a164e83be42bc73" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>disconnectReceptionSlotX</name></member>
      <member refid="classSTCanScan_1a9a4da7b1dd74e81e8066894a1a8c051e" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>errorCodeToString</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a20323e55767d3a60c78a88db5d785829" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot0</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ab9194c7d019e7da16f98a177b4e6e145" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot1</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a4130b6b2dac7673a2e2253c8b957294c" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot10</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a4e8381b84bbbfbcfe6feb9eba7e17fd9" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot11</name></member>
      <member refid="classCanModule_1_1CCanAccess_1aad6416d679ea5cb9582b145ac7a61a31" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot12</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a625e00cbeb49526bb5b37b7e4032149b" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot13</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a66ce4a26bdd58b6bfa016c86034137bb" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot14</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a14a98fa7153c222282ae567a685611cd" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot15</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a7b299903bfe41cee29cc497ba43554fd" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot2</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ad3cbc73468e8edf35f917ed4aa65df16" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot3</name></member>
      <member refid="classCanModule_1_1CCanAccess_1abe5e84df9f43bd309c635d3201b6dba7" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot4</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a62c0c4ac34c437097f74f685fb0266a5" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot5</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a4f457bfc8b8b494130293d563dac72e7" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot6</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a12da52fdad176cf1fa482983bdb5cfd5" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot7</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a7626751af619f301c0bde5657329b4dd" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot8</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a5e7196879da60e80eb209ee807cbcd11" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>fw_slot9</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ac3f5126ae36d642217425e21696d19ca" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>getBusName</name></member>
      <member refid="classSTCanScan_1a29b4c3c8f29e45f808fbb7528e4593aa" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>getCanHandle</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a8210a8161f1987973584b6dda5dc6d7d" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>getLogItInstance</name></member>
      <member refid="classSTCanScan_1a4810249805b660c4e914247acbdf45d2" prot="public" virt="virtual"><scope>STCanScan</scope><name>getStatistics</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ab5a430fc27073d92c69659bda261b74d" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>initialiseLogging</name></member>
      <member refid="classSTCanScan_1a2f2a9aaa3ce2c653a4e1152eb8497493" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>isCanHandleInUse</name></member>
      <member refid="classSTCanScan_1add0582f666b4f0a5883311a284a0e9c4" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>m_baudRate</name></member>
      <member refid="classSTCanScan_1aa1c2f27f78da63fc7d1f542f818b9624" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>m_busStatus</name></member>
      <member refid="classSTCanScan_1a8d6dd7c1cbf4a97607909086da6361e1" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>m_canHandleNumber</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a484a4f9dc352fe31b4baff0365095705" prot="protected" virt="non-virtual"><scope>STCanScan</scope><name>m_CanParameters</name></member>
      <member refid="classSTCanScan_1abd418113d56ef882bb12cd7473d031e1" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>m_CanScanThreadShutdownFlag</name></member>
      <member refid="classSTCanScan_1ac5e311e695c1a3c810f82b0c21ee3618" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>m_channelNumber</name></member>
      <member refid="classSTCanScan_1a2a57272e12f97f245e6f204347782bc0" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>m_hCanScanThread</name></member>
      <member refid="classSTCanScan_1a8ae65fcef31d4bb84aa5bb8978973f86" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>m_idCanScanThread</name></member>
      <member refid="classSTCanScan_1a38531e0fcde0f184eb968a01fb5984c9" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>m_moduleNumber</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a0eff18d10b7ee5d6f86b03898f38f7ca" prot="protected" virt="non-virtual"><scope>STCanScan</scope><name>m_sBusName</name></member>
      <member refid="classSTCanScan_1a93abd76cf68726a0bfa4b9d3982ec9aa" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>m_statistics</name></member>
      <member refid="classSTCanScan_1add94dcac99b3ba3a17cb3708fd0cd20d" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>m_UcanHandle</name></member>
      <member refid="classSTCanScan_1a5f74df7e9615929365b33c08e709e918" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>openCanPort</name></member>
      <member refid="classSTCanScan_1a7c2d148e988e8b7e9df6b4ab0ed2dda1" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>operator=</name></member>
      <member refid="classCanModule_1_1CCanAccess_1af26c9d102638fb96e5e1305f807d148f" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>parseNameAndParameters</name></member>
      <member refid="classSTCanScan_1ac3f6c36fec9666c086da47f241f75dba" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>s_canHandleArray</name></member>
      <member refid="classSTCanScan_1a310439aeb8688c29fb3fe8faa4a9e198" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>s_isCanHandleInUseArray</name></member>
      <member refid="classSTCanScan_1add82f4cebf11f011c98bc73986a7f647" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>s_logItHandleSt</name></member>
      <member refid="classSTCanScan_1a112e1468e19d033d97e731110ba195dc" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>s_logItRegisteredSt</name></member>
      <member refid="classSTCanScan_1a43454c0bc20eb764cbb4ef3dd5e52cc9" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>sendErrorCode</name></member>
      <member refid="classSTCanScan_1a45f0ec011022bf58a23e8370bac7f829" prot="public" virt="virtual"><scope>STCanScan</scope><name>sendMessage</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ad0360c49d00ec0ee92cfdd73c2e43935" prot="public" virt="virtual" ambiguityscope="CanModule::CCanAccess::"><scope>STCanScan</scope><name>sendMessage</name></member>
      <member refid="classSTCanScan_1a2c1de002fa7ace90ef95af00f824c8e4" prot="public" virt="virtual"><scope>STCanScan</scope><name>sendRemoteRequest</name></member>
      <member refid="classSTCanScan_1a50f89ce5fc0b2961937dc8a4b86081f8" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>setCanHandle</name></member>
      <member refid="classSTCanScan_1ae29a23d161c115f173cbdb3a807c895e" prot="private" virt="non-virtual"><scope>STCanScan</scope><name>setCanHandleInUse</name></member>
      <member refid="classCanModule_1_1CCanAccess_1af12f56ce8f69ef8fb77beae30ec0ac2e" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot0</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a334f6f48e22483862d56091703dce595" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot1</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ab10944ddde9a45400eab905a58ef0534" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot10</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a4825360b2a2787160be01b2aa9419ce1" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot11</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a6d0a5e7306e46c5e5e5b9a3fc45e8330" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot12</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a216e763e1cc1ce26dae65dfab939ad11" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot13</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a68b36fdd0ad1f64bd7a1f0207386be4b" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot14</name></member>
      <member refid="classCanModule_1_1CCanAccess_1af44e482ce74f03d22c8a339fe6f01aa7" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot15</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a15a904b7593396d931e9f57b70da929d" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot2</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a0c9527a03b09356decf18241acd1a532" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot3</name></member>
      <member refid="classCanModule_1_1CCanAccess_1af95d2dff96d924a5c2589db82a8a6abd" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot4</name></member>
      <member refid="classCanModule_1_1CCanAccess_1aca7bcb8e9e5043a6636ce767d345716a" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot5</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a335e4ebb979de2ad399380886b3742b7" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot6</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a8278d35739b5f92e24331accb4b8383e" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot7</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a2e5052c0d4b0bf48d0ea709583349118" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot8</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a9eb127d5fa0c228f785d65a1ef25b97a" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>slot9</name></member>
      <member refid="classSTCanScan_1a75fcb8ff51d82d362edb1dd31125fb10" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>STCanScan</name></member>
      <member refid="classSTCanScan_1a335aaec2300f2b9c31fd0f268014f24d" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>STCanScan</name></member>
      <member refid="classCanModule_1_1CCanAccess_1a86c0125599b177ed3017e842940565fd" prot="public" virt="non-virtual"><scope>STCanScan</scope><name>testSignalSlot</name></member>
      <member refid="classCanModule_1_1CCanAccess_1ac96f1cce6beda4309cdfb6651d3ce547" prot="public" virt="virtual"><scope>STCanScan</scope><name>~CCanAccess</name></member>
      <member refid="classSTCanScan_1a2f3398dc992ebd90002c179305c55d54" prot="public" virt="virtual"><scope>STCanScan</scope><name>~STCanScan</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
